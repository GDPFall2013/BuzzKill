// Generated by dart2js, the Dart to JavaScript compiler version: 1.1.1.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
(function($) {
function dart() {}var A = new dart;
delete A.x;
var B = new dart;
delete B.x;
var C = new dart;
delete C.x;
var D = new dart;
delete D.x;
var E = new dart;
delete E.x;
var F = new dart;
delete F.x;
var G = new dart;
delete G.x;
var H = new dart;
delete H.x;
var J = new dart;
delete J.x;
var K = new dart;
delete K.x;
var L = new dart;
delete L.x;
var M = new dart;
delete M.x;
var N = new dart;
delete N.x;
var O = new dart;
delete O.x;
var P = new dart;
delete P.x;
var Q = new dart;
delete Q.x;
var R = new dart;
delete R.x;
var S = new dart;
delete S.x;
var T = new dart;
delete T.x;
var U = new dart;
delete U.x;
var V = new dart;
delete V.x;
var W = new dart;
delete W.x;
var X = new dart;
delete X.x;
var Y = new dart;
delete Y.x;
var Z = new dart;
delete Z.x;
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
(function (reflectionData) {
  "use strict";
  function map(x){x={x:x};delete x.x;return x}
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          if (descriptor[property] == 1) descriptor[previousProperty].$reflectable = 1;
          if (element && element.length) init.typeInformation[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (firstChar === "*") {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods) {
            descriptor.$methodsWithOptionalArguments = optionalMethods = {}
          }
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else if (element.constructor === Array) {
          addStubs(globalObject, element, property, true, descriptor, functions);
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              if (element[prop] == 1) element[previousProp].$reflectable = 1;
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else if (firstChar === "*") {
              newDesc[previousProp].$defaultValues = element[prop];
              var optionalMethods = newDesc.$methodsWithOptionalArguments;
              if (!optionalMethods) {
                newDesc.$methodsWithOptionalArguments = optionalMethods={}
              }
              optionalMethods[prop] = previousProp;
            } else {
              var elem = element[prop];
              if (prop && elem != null && elem.constructor === Array && prop !== "<>") {
                addStubs(newDesc, elem, prop, false, element, []);
              } else {
                newDesc[previousProp = prop] = elem;
              }
            }
          }
          $$[property] = [globalObject, newDesc];
          classes.push(property);
        }
      }
    }
  function addStubs(descriptor, array, name, isStatic, originalDescriptor, functions) {
    var f, funcs = [originalDescriptor[name] = descriptor[name] = f = (function() {
  var result = array[0];
  if (result != null && typeof result != "function") {
    throw new Error(
        name + ": expected value of type 'function' at index " + (0) +
        " but got " + (typeof result));
  }
  return result;
})()];
    f.$stubName = name;
    functions.push(name);
    for (var index = 0; index < array.length; index += 2) {
      f = array[index + 1];
      if (typeof f != "function") break;
      f.$stubName = (function() {
  var result = array[index + 2];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (index + 2) +
        " but got " + (typeof result));
  }
  return result;
})();
      funcs.push(f);
      if (f.$stubName) {
        originalDescriptor[f.$stubName] = descriptor[f.$stubName] = f;
        functions.push(f.$stubName);
      }
    }
    for (var i = 0; i < funcs.length; index++, i++) {
      funcs[i].$callName = (function() {
  var result = array[index + 1];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (index + 1) +
        " but got " + (typeof result));
  }
  return result;
})();
    }
    var getterStubName = (function() {
  var result = array[++index];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (++index) +
        " but got " + (typeof result));
  }
  return result;
})();
    array = array.slice(++index);
    var requiredParameterInfo = (function() {
  var result = array[0];
  if (result != null && (typeof result != "number" || (result|0) !== result)) {
    throw new Error(
        name + ": expected value of type 'int' at index " + (0) +
        " but got " + (typeof result));
  }
  return result;
})();
    var requiredParameterCount = requiredParameterInfo >> 1;
    var isAccessor = (requiredParameterInfo & 1) === 1;
    var isSetter = requiredParameterInfo === 3;
    var isGetter = requiredParameterInfo === 1;
    var optionalParameterInfo = (function() {
  var result = array[1];
  if (result != null && (typeof result != "number" || (result|0) !== result)) {
    throw new Error(
        name + ": expected value of type 'int' at index " + (1) +
        " but got " + (typeof result));
  }
  return result;
})();
    var optionalParameterCount = optionalParameterInfo >> 1;
    var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
    var isIntercepted = requiredParameterCount + optionalParameterCount != funcs[0].length;
    var functionTypeIndex = (function() {
  var result = array[2];
  if (result != null && (typeof result != "number" || (result|0) !== result) && typeof result != "function") {
    throw new Error(
        name + ": expected value of type 'function or int' at index " + (2) +
        " but got " + (typeof result));
  }
  return result;
})();
    var isReflectable = array.length > requiredParameterCount + optionalParameterCount + 3;
    if (getterStubName) {
      f = tearOff(funcs, array, isStatic, name, isIntercepted);
      if (isStatic) init.globalFunctions[name] = f;
      originalDescriptor[getterStubName] = descriptor[getterStubName] = f;
      funcs.push(f);
      if (getterStubName) functions.push(getterStubName);
      f.$stubName = getterStubName;
      f.$callName = null;
    }
    if (isReflectable) {
      for (var i = 0; i < funcs.length; i++) {
        funcs[i].$reflectable = 1;
        funcs[i].$reflectionInfo = array;
      }
    }
    if (isReflectable) {
      var unmangledNameIndex = optionalParameterCount * 2 + requiredParameterCount + 3;
      var unmangledName = (function() {
  var result = array[unmangledNameIndex];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (unmangledNameIndex) +
        " but got " + (typeof result));
  }
  return result;
})();
      var reflectionName = unmangledName + ":" + requiredParameterCount + ":" + optionalParameterCount;
      if (isGetter) {
        reflectionName = unmangledName;
      } else if (isSetter) {
        reflectionName = unmangledName + "=";
      }
      if (isStatic) {
        init.mangledGlobalNames[name] = reflectionName;
      } else {
        init.mangledNames[name] = reflectionName;
      }
      funcs[0].$reflectionName = reflectionName;
      funcs[0].$metadataIndex = unmangledNameIndex + 1;
      if (optionalParameterCount) descriptor[unmangledName + "*"] = funcs[0];
    }
  }
  function tearOffGetterNoCsp(funcs, reflectionInfo, name, isIntercepted) {
    return isIntercepted
        ? new Function("funcs", "reflectionInfo", "name", "H", "c",
            "return function tearOff_" + name + (functionCounter++)+ "(x) {" +
              "if (c === null) c = H.closureFromTearOff(" +
                  "this, funcs, reflectionInfo, false, [x], name);" +
              "return new c(this, funcs[0], x, name);" +
            "}")(funcs, reflectionInfo, name, H, null)
        : new Function("funcs", "reflectionInfo", "name", "H", "c",
            "return function tearOff_" + name + (functionCounter++)+ "() {" +
              "if (c === null) c = H.closureFromTearOff(" +
                  "this, funcs, reflectionInfo, false, [], name);" +
              "return new c(this, funcs[0], null, name);" +
            "}")(funcs, reflectionInfo, name, H, null)
  }
  function tearOffGetterCsp(funcs, reflectionInfo, name, isIntercepted) {
    var cache = null;
    return isIntercepted
        ? function(x) {
            if (cache === null) cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [x], name);
            return new cache(this, funcs[0], x, name)
          }
        : function() {
            if (cache === null) cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [], name);
            return new cache(this, funcs[0], null, name)
          }
  }
  function tearOff(funcs, reflectionInfo, isStatic, name, isIntercepted) {
    var cache;
    return isStatic
        ? function() {
            if (cache === void 0) cache = H.closureFromTearOff(this, funcs, reflectionInfo, true, [], name).prototype;
            return cache;
          }
        : tearOffGetter(funcs, reflectionInfo, name, isIntercepted);
  }
  var functionCounter = 0;
  var tearOffGetter = (typeof dart_precompiled == "function")
      ? tearOffGetterCsp : tearOffGetterNoCsp;
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.typeInformation) init.typeInformation = map();
  if (!init.globalFunctions) init.globalFunctions = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var globalObject = data[3];
    var descriptor = data[4];
    var isRoot = !!data[5];
    var fields = descriptor && descriptor[""];
    var classes = [];
    var functions = [];
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot,
                    globalObject]);
  }
})
([
["_foreign_helper", "dart:_foreign_helper", , H, {
  "": "",
  JS_CONST: {
    "": "Object;code"
  }
}],
["_interceptors", "dart:_interceptors", , J, {
  "": "",
  getInterceptor: [function(object) {
    return void 0;
  }, "call$1", "getInterceptor$closure", 2, 0, null, 0],
  makeDispatchRecord: [function(interceptor, proto, extension, indexability) {
    return {i: interceptor, p: proto, e: extension, x: indexability};
  }, "call$4", "makeDispatchRecord$closure", 8, 0, null, 1, 2, 3, 4],
  getNativeInterceptor: [function(object) {
    var record, proto, objectProto, interceptor;
    record = object[init.dispatchPropertyName];
    if (record == null)
      if ($.initNativeDispatchFlag == null) {
        H.initNativeDispatch();
        record = object[init.dispatchPropertyName];
      }
    if (record != null) {
      proto = record.p;
      if (false === proto)
        return record.i;
      if (true === proto)
        return object;
      objectProto = Object.getPrototypeOf(object);
      if (proto === objectProto)
        return record.i;
      if (record.e === objectProto)
        throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
    }
    interceptor = H.lookupAndCacheInterceptor(object);
    if (interceptor == null)
      return C.UnknownJavaScriptObject_methods;
    return interceptor;
  }, "call$1", "getNativeInterceptor$closure", 2, 0, null, 0],
  Interceptor: {
    "": "Object;",
    $eq: [function(receiver, other) {
      return receiver === other;
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: [function(receiver) {
      return H.Primitives_objectToString(receiver);
    }, "call$0", "get$toString", 0, 0, null],
    noSuchMethod$1: [function(receiver, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    }, "call$1", "get$noSuchMethod", 2, 0, null, 168],
    "%": "ArrayBuffer|AudioParam|CanvasGradient|CanvasPattern|DOMError|FileError|MediaError|MediaKeyError|Navigator|NavigatorUserMediaError|PositionError|SQLError|SVGAnimatedEnumeration|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList"
  },
  JSBool: {
    "": "bool/Interceptor;",
    toString$0: [function(receiver) {
      return String(receiver);
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: true
  },
  JSNull: {
    "": "Interceptor;",
    $eq: [function(receiver, other) {
      return null == other;
    }, "call$1", "get$==", 2, 0, null, 160],
    toString$0: [function(receiver) {
      return "null";
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(receiver) {
      return 0;
    }
  },
  JavaScriptObject: {
    "": "Interceptor;",
    get$hashCode: function(_) {
      return 0;
    }
  },
  PlainJavaScriptObject: {
    "": "JavaScriptObject;"
  },
  UnknownJavaScriptObject: {
    "": "JavaScriptObject;"
  },
  JSArray: {
    "": "List/Interceptor;",
    add$1: [function(receiver, value) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    }, "call$1", "get$add", 2, 0, null, 14],
    remove$1: [function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    }, "call$1", "get$remove", 2, 0, null, 169],
    addAll$1: [function(receiver, collection) {
      var t1;
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        this.add$1(receiver, t1.get$current());
    }, "call$1", "get$addAll", 2, 0, null, 170],
    forEach$1: [function(receiver, f) {
      return H.IterableMixinWorkaround_forEach(receiver, f);
    }, "call$1", "get$forEach", 2, 0, null, 73],
    map$1: [function(receiver, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(receiver, f), [null, null]);
    }, "call$1", "get$map", 2, 0, null, 73],
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 23],
    toString$0: [function(receiver) {
      return H.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
    }, "call$0", "get$toString", 0, 0, null],
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, receiver.length, 0, null);
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
        throw H.wrapException(new P.ArgumentError(newLength));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$value(newLength));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      receiver.length = newLength;
    },
    $index: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    $isList: true,
    $asList: null,
    $isList: true,
    $isEfficientLength: true,
    static: {JSArray_JSArray$fixed: function($length, $E) {
        var t1;
        if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
          throw H.wrapException(P.ArgumentError$("Length must be a non-negative integer: " + H.S($length)));
        t1 = H.setRuntimeTypeInfo(new Array($length), [$E]);
        t1.fixed$length = init;
        return t1;
      }}
  },
  JSNumber: {
    "": "num/Interceptor;",
    remainder$1: [function(receiver, b) {
      return receiver % b;
    }, "call$1", "get$remainder", 2, 0, null, 109],
    toInt$0: [function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$('' + receiver));
    }, "call$0", "get$toInt", 0, 0, null],
    toString$0: [function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(receiver) {
      return receiver & 0x1FFFFFFF;
    },
    $add: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver + other;
    }, "call$1", "get$+", 2, 0, null, 160],
    $sub: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver - other;
    }, "call$1", "get$-", 2, 0, null, 160],
    $div: [function(receiver, other) {
      return receiver / other;
    }, "call$1", "get$/", 2, 0, null, 160],
    _tdivFast$1: [function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this.toInt$0(receiver / other);
    }, "call$1", "get$_tdivFast", 2, 0, null, 160],
    $shl: [function(receiver, other) {
      if (other < 0)
        throw H.wrapException(new P.ArgumentError(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    }, "call$1", "get$<<", 2, 0, null, 160],
    _shrOtherPositive$1: [function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = other > 31 ? 0 : receiver >>> other;
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    }, "call$1", "get$_shrOtherPositive", 2, 0, null, 160],
    $lt: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver < other;
    }, "call$1", "get$<", 2, 0, null, 160],
    $gt: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver > other;
    }, "call$1", "get$>", 2, 0, null, 160],
    $ge: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver >= other;
    }, "call$1", "get$>=", 2, 0, null, 160],
    $isnum: true,
    static: {"": "JSNumber__MIN_INT32,JSNumber__MAX_INT32"}
  },
  JSInt: {
    "": "int/JSNumber;",
    $isnum: true,
    $isint: true
  },
  JSDouble: {
    "": "double/JSNumber;",
    $isnum: true
  },
  JSString: {
    "": "String/Interceptor;",
    codeUnitAt$1: [function(receiver, index) {
      if (index < 0)
        throw H.wrapException(P.RangeError$value(index));
      if (index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      return receiver.charCodeAt(index);
    }, "call$1", "get$codeUnitAt", 2, 0, null, 23],
    $add: [function(receiver, other) {
      if (typeof other !== "string")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver + other;
    }, "call$1", "get$+", 2, 0, null, 160],
    substring$2: [function(receiver, startIndex, endIndex) {
      var t1;
      if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
        H.throwExpression(P.ArgumentError$(startIndex));
      if (endIndex == null)
        endIndex = receiver.length;
      if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
        H.throwExpression(P.ArgumentError$(endIndex));
      t1 = J.getInterceptor$n(startIndex);
      if (t1.$lt(startIndex, 0))
        throw H.wrapException(P.RangeError$value(startIndex));
      if (t1.$gt(startIndex, endIndex))
        throw H.wrapException(P.RangeError$value(startIndex));
      if (J.$gt$n(endIndex, receiver.length))
        throw H.wrapException(P.RangeError$value(endIndex));
      return receiver.substring(startIndex, endIndex);
    }, function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    }, "substring$1", "call$2", null, "get$substring", 2, 2, null, 52, 56, 171],
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    toString$0: [function(receiver) {
      return receiver;
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $isString: true
  }
}],
["_isolate_helper", "dart:_isolate_helper", , H, {
  "": "",
  _callInIsolate: [function(isolate, $function) {
    var result = isolate.eval$1($function);
    init.globalState.topEventLoop.run$0();
    return result;
  }, "call$2", "_callInIsolate$closure", 4, 0, null, 5, 6],
  startRootIsolate: [function(entry) {
    var t1, t2, rootContext;
    t1 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
    t1._Manager$1(entry);
    init.globalState = t1;
    if (init.globalState.isWorker === true)
      return;
    t1 = init.globalState;
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    rootContext = new H._IsolateContext(t2, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate());
    init.globalState.rootContext = rootContext;
    init.globalState.currentContext = rootContext;
    t1 = H.getDynamicRuntimeType();
    t2 = H.buildFunctionType(t1, [t1])._isTest$1(entry);
    if (t2)
      rootContext.eval$1(new H.startRootIsolate_closure(entry));
    else {
      t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(entry);
      if (t1)
        rootContext.eval$1(new H.startRootIsolate_closure0(entry));
      else
        rootContext.eval$1(entry);
    }
    init.globalState.topEventLoop.run$0();
  }, "call$1", "startRootIsolate$closure", 2, 0, null, 7],
  IsolateNatives_computeThisScript: [function() {
    var currentScript = init.currentScript;
    if (currentScript != null)
      return String(currentScript.src);
    if (typeof version == "function" && typeof os == "object" && "system" in os)
      return H.IsolateNatives_computeThisScriptD8();
    if (typeof version == "function" && typeof system == "function")
      return thisFilename();
    return;
  }, "call$0", "IsolateNatives_computeThisScript$closure", 0, 0, null],
  IsolateNatives_computeThisScriptD8: [function() {
    var stack, matches;
    stack = new Error().stack;
    if (stack == null) {
      stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
      if (stack == null)
        throw H.wrapException(P.UnsupportedError$("No stack trace"));
    }
    matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
    if (matches != null)
      return matches[1];
    matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
    if (matches != null)
      return matches[1];
    throw H.wrapException(P.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
  }, "call$0", "IsolateNatives_computeThisScriptD8$closure", 0, 0, null],
  IsolateNatives__processWorkerMessage: [function(sender, e) {
    var msg, t1, functionName, entryPoint, args, message, isSpawnUri, replyTo, t2, context, uri, t3, t4, t5, worker, t6, workerId;
    msg = H._deserializeMessage(e.data);
    t1 = J.getInterceptor$asx(msg);
    switch (t1.$index(msg, "command")) {
      case "start":
        init.globalState.currentManagerId = t1.$index(msg, "id");
        functionName = t1.$index(msg, "functionName");
        entryPoint = functionName == null ? init.globalState.entry : init.globalFunctions[functionName]();
        args = t1.$index(msg, "args");
        message = H._deserializeMessage(t1.$index(msg, "msg"));
        isSpawnUri = t1.$index(msg, "isSpawnUri");
        replyTo = H._deserializeMessage(t1.$index(msg, "replyTo"));
        t1 = init.globalState;
        t2 = t1.nextIsolateId;
        t1.nextIsolateId = t2 + 1;
        context = new H._IsolateContext(t2, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate());
        init.globalState.topEventLoop.events._add$1(new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, replyTo), "worker-start"));
        init.globalState.currentContext = context;
        init.globalState.topEventLoop.run$0();
        break;
      case "spawn-worker":
        t2 = t1.$index(msg, "functionName");
        uri = t1.$index(msg, "uri");
        t3 = t1.$index(msg, "args");
        t4 = t1.$index(msg, "msg");
        t5 = t1.$index(msg, "isSpawnUri");
        t1 = t1.$index(msg, "replyPort");
        if (uri == null)
          uri = $.get$IsolateNatives_thisScript();
        worker = new Worker(uri);
        worker.onmessage = function(e) { H.IsolateNatives__processWorkerMessage(worker, e); };
        t6 = init.globalState;
        workerId = t6.nextManagerId;
        t6.nextManagerId = workerId + 1;
        t6 = $.get$IsolateNatives_workerIds();
        t6.$indexSet(t6, worker, workerId);
        t6 = init.globalState.managers;
        t6.$indexSet(t6, workerId, worker);
        worker.postMessage(H._serializeMessage(H.fillLiteralMap(["command", "start", "id", workerId, "replyTo", H._serializeMessage(t1), "args", t3, "msg", H._serializeMessage(t4), "isSpawnUri", t5, "functionName", t2], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
        break;
      case "message":
        if (t1.$index(msg, "port") != null)
          J.send$1$x(t1.$index(msg, "port"), t1.$index(msg, "msg"));
        init.globalState.topEventLoop.run$0();
        break;
      case "close":
        t1 = init.globalState.managers;
        t2 = $.get$IsolateNatives_workerIds();
        t1.remove$1(t1, t2.$index(t2, sender));
        sender.terminate();
        init.globalState.topEventLoop.run$0();
        break;
      case "log":
        H.IsolateNatives__log(t1.$index(msg, "msg"));
        break;
      case "print":
        if (init.globalState.isWorker === true) {
          t1 = init.globalState.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "print", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        } else
          P.print(t1.$index(msg, "msg"));
        break;
      case "error":
        throw H.wrapException(t1.$index(msg, "msg"));
      default:
    }
  }, "call$2", "IsolateNatives__processWorkerMessage$closure", 4, 0, null, 8, 9],
  IsolateNatives__log: [function(msg) {
    var trace, t1, t2, exception;
    if (init.globalState.isWorker === true) {
      t1 = init.globalState.mainManager;
      t2 = H._serializeMessage(H.fillLiteralMap(["command", "log", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      t1.toString;
      self.postMessage(t2);
    } else
      try {
        $.get$globalThis().console.log(msg);
      } catch (exception) {
        H.unwrapException(exception);
        trace = new H._StackTrace(exception, null);
        throw H.wrapException(P.Exception_Exception(trace));
      }

  }, "call$1", "IsolateNatives__log$closure", 2, 0, null, 10],
  _serializeMessage: [function(message) {
    var t1;
    if (init.globalState.supportsWorkers === true) {
      t1 = new H._JsSerializer(0, new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    } else {
      t1 = new H._JsCopier(new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    }
  }, "call$1", "_serializeMessage$closure", 2, 0, null, 11],
  _deserializeMessage: [function(message) {
    if (init.globalState.supportsWorkers === true)
      return new H._JsDeserializer(null).deserialize$1(message);
    else
      return message;
  }, "call$1", "_deserializeMessage$closure", 2, 0, null, 11],
  _MessageTraverser_isPrimitive: [function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  }, "call$1", "_MessageTraverser_isPrimitive$closure", 2, 0, null, 12],
  _Deserializer_isPrimitive: [function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  }, "call$1", "_Deserializer_isPrimitive$closure", 2, 0, null, 12],
  startRootIsolate_closure: {
    "": "Closure:172;entry_0",
    call$0: [function() {
      this.entry_0.call$1([]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  startRootIsolate_closure0: {
    "": "Closure:172;entry_1",
    call$0: [function() {
      this.entry_1.call$2([], null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Manager: {
    "": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
    _Manager$1: function(entry) {
      var t1, t2, t3, $function;
      t1 = $.get$globalWindow() == null;
      t2 = $.get$globalWorker();
      t3 = t1 && $.get$globalPostMessageDefined() === true;
      this.isWorker = t3;
      if (!t3)
        t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
      else
        t2 = true;
      this.supportsWorkers = t2;
      this.fromCommandLine = t1 && !t3;
      t2 = H._IsolateEvent;
      t3 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t2]);
      t3.ListQueue$1(null, t2);
      this.topEventLoop = new H._EventLoop(t3, 0);
      this.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H._IsolateContext);
      this.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, null);
      if (this.isWorker === true) {
        t1 = new H._MainManagerStub();
        this.mainManager = t1;
        $function = function (e) { H.IsolateNatives__processWorkerMessage(t1, e); };
        $.get$globalThis().onmessage = $function;
        $.get$globalThis().dartPrint = function (object) {};
      }
    }
  },
  _IsolateContext: {
    "": "Object;id,ports,weakPorts,isolateStatics<",
    eval$1: [function(code) {
      var old, result;
      old = init.globalState.currentContext;
      init.globalState.currentContext = this;
      $ = this.isolateStatics;
      result = null;
      try {
        result = code.call$0();
      } finally {
        init.globalState.currentContext = old;
        if (old != null)
          $ = old.get$isolateStatics();
      }
      return result;
    }, "call$1", "get$eval", 2, 0, null, 173],
    lookup$1: [function(portId) {
      var t1 = this.ports;
      return t1.$index(t1, portId);
    }, "call$1", "get$lookup", 2, 0, null, 174],
    register$2: [function(_, portId, port) {
      var t1 = this.ports;
      if (t1.containsKey$1(portId))
        throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
      t1.$indexSet(t1, portId, port);
      this._updateGlobalState$0();
    }, "call$2", "get$register", 4, 0, null, 174, 175],
    _updateGlobalState$0: [function() {
      var t1, t2;
      t1 = this.id;
      if (this.ports._collection$_length - this.weakPorts._collection$_length > 0) {
        t2 = init.globalState.isolates;
        t2.$indexSet(t2, t1, this);
      } else {
        t2 = init.globalState.isolates;
        t2.remove$1(t2, t1);
      }
    }, "call$0", "get$_updateGlobalState", 0, 0, null]
  },
  _EventLoop: {
    "": "Object;events,activeTimerCount",
    dequeue$0: [function() {
      var t1 = this.events;
      if (t1._head === t1._tail)
        return;
      return t1.removeFirst$0();
    }, "call$0", "get$dequeue", 0, 0, null],
    runIteration$0: [function() {
      var $event, t1, t2;
      $event = this.dequeue$0();
      if ($event == null) {
        if (init.globalState.rootContext != null && init.globalState.isolates.containsKey$1(init.globalState.rootContext.id) && init.globalState.fromCommandLine === true && init.globalState.rootContext.ports._collection$_length === 0)
          H.throwExpression(P.Exception_Exception("Program exited with open ReceivePorts."));
        t1 = init.globalState;
        if (t1.isWorker === true && t1.isolates._collection$_length === 0 && t1.topEventLoop.activeTimerCount === 0) {
          t1 = t1.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "close"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        }
        return false;
      }
      $event.process$0();
      return true;
    }, "call$0", "get$runIteration", 0, 0, null],
    _runHelper$0: [function() {
      if ($.get$globalWindow() != null)
        new H._EventLoop__runHelper_next(this).call$0();
      else
        for (; this.runIteration$0();)
          ;
    }, "call$0", "get$_runHelper", 0, 0, null],
    run$0: [function() {
      var e, trace, exception, t1, t2;
      if (init.globalState.isWorker !== true)
        this._runHelper$0();
      else
        try {
          this._runHelper$0();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          trace = new H._StackTrace(exception, null);
          t1 = init.globalState.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        }

    }, "call$0", "get$run", 0, 0, null]
  },
  _EventLoop__runHelper_next: {
    "": "Closure:92;this_0",
    call$0: [function() {
      if (!this.this_0.runIteration$0())
        return;
      P.Timer_Timer(C.Duration_0, this);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _IsolateEvent: {
    "": "Object;isolate,fn,message",
    process$0: [function() {
      this.isolate.eval$1(this.fn);
    }, "call$0", "get$process", 0, 0, null]
  },
  _MainManagerStub: {
    "": "Object;"
  },
  IsolateNatives__processWorkerMessage_closure: {
    "": "Closure:172;entryPoint_0,args_1,message_2,isSpawnUri_3,replyTo_4",
    call$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7;
      t1 = this.entryPoint_0;
      t2 = this.args_1;
      t3 = this.message_2;
      t4 = init.globalState.currentContext.id;
      $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + t4);
      $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + t4);
      t4 = $.RawReceivePortImpl__nextFreeId;
      $.RawReceivePortImpl__nextFreeId = t4 + 1;
      t5 = new H.RawReceivePortImpl(t4, null, false);
      t6 = init.globalState.currentContext;
      t7 = t6.weakPorts;
      t7.add$1(t7, t4);
      t6.register$2(t6, t4, t5);
      t4 = new H.ReceivePortImpl(t5, null);
      t4.ReceivePortImpl$fromRawReceivePort$1(t5);
      $.controlPort = t4;
      J.send$1$x(this.replyTo_4, ["spawned", new H._NativeJsSendPort(t5, init.globalState.currentContext.id)]);
      if (this.isSpawnUri_3 !== true)
        t1.call$1(t3);
      else {
        t4 = H.getDynamicRuntimeType();
        t5 = H.buildFunctionType(t4, [t4, t4])._isTest$1(t1);
        if (t5)
          t1.call$2(t2, t3);
        else {
          t3 = H.buildFunctionType(t4, [t4])._isTest$1(t1);
          if (t3)
            t1.call$1(t2);
          else
            t1.call$0();
        }
      }
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _BaseSendPort: {
    "": "Object;",
    $isSendPort: true
  },
  _NativeJsSendPort: {
    "": "_BaseSendPort;_receivePort,_isolateId",
    send$1: [function(_, message) {
      var t1, t2, t3, isolate, shouldSerialize;
      t1 = {};
      t2 = init.globalState.isolates;
      t3 = this._isolateId;
      isolate = t2.$index(t2, t3);
      if (isolate == null)
        return;
      if (this._receivePort.get$_isClosed())
        return;
      shouldSerialize = init.globalState.currentContext != null && init.globalState.currentContext.id !== t3;
      t1.msg_0 = message;
      if (shouldSerialize)
        t1.msg_0 = H._serializeMessage(message);
      t2 = init.globalState.topEventLoop;
      t3 = "receive " + H.S(message);
      t2.events._add$1(new H._IsolateEvent(isolate, new H._NativeJsSendPort_send_closure(t1, this, shouldSerialize), t3));
    }, "call$1", "get$send", 2, 0, null, 11],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$is_NativeJsSendPort && J.$eq(this._receivePort, other._receivePort);
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      return this._receivePort.get$_id();
    },
    $is_NativeJsSendPort: true,
    $isSendPort: true
  },
  _NativeJsSendPort_send_closure: {
    "": "Closure:172;box_0,this_1,shouldSerialize_2",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_1._receivePort;
      if (!t1.get$_isClosed()) {
        if (this.shouldSerialize_2) {
          t2 = this.box_0;
          t2.msg_0 = H._deserializeMessage(t2.msg_0);
        }
        t1.__isolate_helper$_add$1(this.box_0.msg_0);
      }
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _WorkerSendPort: {
    "": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
    send$1: [function(_, message) {
      var workerMessage, t1, manager;
      workerMessage = H._serializeMessage(H.fillLiteralMap(["command", "message", "port", this, "msg", message], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      if (init.globalState.isWorker === true) {
        init.globalState.mainManager.toString;
        self.postMessage(workerMessage);
      } else {
        t1 = init.globalState.managers;
        manager = t1.$index(t1, this._workerId);
        if (manager != null)
          manager.postMessage(workerMessage);
      }
    }, "call$1", "get$send", 2, 0, null, 11],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$is_WorkerSendPort && J.$eq(this._workerId, other._workerId) && J.$eq(this._isolateId, other._isolateId) && J.$eq(this._receivePortId, other._receivePortId);
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      var t1, t2, t3;
      t1 = J.$shl$n(this._workerId, 16);
      t2 = J.$shl$n(this._isolateId, 8);
      t3 = this._receivePortId;
      if (typeof t3 !== "number")
        return H.iae(t3);
      return (t1 ^ t2 ^ t3) >>> 0;
    },
    $is_WorkerSendPort: true,
    $isSendPort: true
  },
  RawReceivePortImpl: {
    "": "Object;_id<,_handler,_isClosed<",
    _handler$1: function(arg0) {
      return this._handler.call$1(arg0);
    },
    close$0: [function(_) {
      var t1, t2;
      if (this._isClosed)
        return;
      this._isClosed = true;
      this._handler = null;
      t1 = init.globalState.currentContext;
      t2 = t1.ports;
      t2.remove$1(t2, this._id);
      t1._updateGlobalState$0();
    }, "call$0", "get$close", 0, 0, null],
    __isolate_helper$_add$1: [function(dataEvent) {
      if (this._isClosed)
        return;
      this._handler$1(dataEvent);
    }, "call$1", "get$__isolate_helper$_add", 2, 0, null, 176],
    static: {"": "RawReceivePortImpl__nextFreeId"}
  },
  ReceivePortImpl: {
    "": "Stream;_rawPort,__isolate_helper$_controller",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1 = this.__isolate_helper$_controller;
      t1.toString;
      return H.setRuntimeTypeInfo(new P._ControllerStream(t1), [null]).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", "call$4$cancelOnError$onDone$onError", null, "get$listen", 2, 7, null, 52, 52, 52, 177, 178, 179, 99],
    close$0: [function(_) {
      var t1 = this._rawPort;
      t1.close$0(t1);
      t1 = this.__isolate_helper$_controller;
      t1.close$0(t1);
    }, "call$0", "get$close", 0, 0, 92],
    ReceivePortImpl$fromRawReceivePort$1: function(_rawPort) {
      var t1 = P.StreamController_StreamController(this.get$close(this), null, null, null, true, null);
      this.__isolate_helper$_controller = t1;
      this._rawPort._handler = t1.get$add(t1);
    }
  },
  _JsSerializer: {
    "": "_Serializer;_nextFreeRefId,_visited",
    visitSendPort$1: [function(x) {
      if (!!x.$is_NativeJsSendPort)
        return ["sendport", init.globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
      if (!!x.$is_WorkerSendPort)
        return ["sendport", x._workerId, x._isolateId, x._receivePortId];
      throw H.wrapException("Illegal underlying port " + H.S(x));
    }, "call$1", "get$visitSendPort", 2, 0, null, 12]
  },
  _JsCopier: {
    "": "_Copier;_visited",
    visitSendPort$1: [function(x) {
      if (!!x.$is_NativeJsSendPort)
        return new H._NativeJsSendPort(x._receivePort, x._isolateId);
      if (!!x.$is_WorkerSendPort)
        return new H._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
      throw H.wrapException("Illegal underlying port " + H.S(x));
    }, "call$1", "get$visitSendPort", 2, 0, null, 12]
  },
  _JsDeserializer: {
    "": "_Deserializer;_deserialized",
    deserializeSendPort$1: [function(list) {
      var t1, managerId, isolateId, receivePortId, isolate, receivePort;
      t1 = J.getInterceptor$asx(list);
      managerId = t1.$index(list, 1);
      isolateId = t1.$index(list, 2);
      receivePortId = t1.$index(list, 3);
      if (J.$eq(managerId, init.globalState.currentManagerId)) {
        t1 = init.globalState.isolates;
        isolate = t1.$index(t1, isolateId);
        if (isolate == null)
          return;
        receivePort = isolate.lookup$1(receivePortId);
        if (receivePort == null)
          return;
        return new H._NativeJsSendPort(receivePort, isolateId);
      } else
        return new H._WorkerSendPort(managerId, receivePortId, isolateId);
    }, "call$1", "get$deserializeSendPort", 2, 0, null, 45]
  },
  _JsVisitedMap: {
    "": "Object;tagged",
    $index: [function(_, object) {
      return object.__MessageTraverser__attached_info__;
    }, "call$1", "get$[]", 2, 0, null, 0],
    $indexSet: [function(_, object, info) {
      this.tagged.push(object);
      object.__MessageTraverser__attached_info__ = info;
    }, "call$2", "get$[]=", 4, 0, null, 0, 180],
    reset$0: [function(_) {
      this.tagged = [];
    }, "call$0", "get$reset", 0, 0, null],
    cleanup$0: [function() {
      var $length, i, t1;
      for ($length = this.tagged.length, i = 0; i < $length; ++i) {
        t1 = this.tagged;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1[i].__MessageTraverser__attached_info__ = null;
      }
      this.tagged = null;
    }, "call$0", "get$cleanup", 0, 0, null]
  },
  _MessageTraverserVisitedMap: {
    "": "Object;",
    $index: [function(_, object) {
      return;
    }, "call$1", "get$[]", 2, 0, null, 0],
    $indexSet: [function(_, object, info) {
    }, "call$2", "get$[]=", 4, 0, null, 0, 180],
    reset$0: [function(_) {
    }, "call$0", "get$reset", 0, 0, null],
    cleanup$0: [function() {
      return;
    }, "call$0", "get$cleanup", 0, 0, null]
  },
  _MessageTraverser: {
    "": "Object;",
    traverse$1: [function(x) {
      var result, t1;
      if (H._MessageTraverser_isPrimitive(x))
        return this.visitPrimitive$1(x);
      t1 = this._visited;
      t1.reset$0(t1);
      result = null;
      try {
        result = this._dispatch$1(x);
      } finally {
        this._visited.cleanup$0();
      }
      return result;
    }, "call$1", "get$traverse", 2, 0, null, 12],
    _dispatch$1: [function(x) {
      var t1;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return this.visitPrimitive$1(x);
      t1 = J.getInterceptor(x);
      if (typeof x === "object" && x !== null && (x.constructor === Array || !!t1.$isList))
        return this.visitList$1(x);
      if (typeof x === "object" && x !== null && !!t1.$isMap)
        return this.visitMap$1(x);
      if (typeof x === "object" && x !== null && !!t1.$isSendPort)
        return this.visitSendPort$1(x);
      return this.visitObject$1(x);
    }, "call$1", "get$_dispatch", 2, 0, null, 12],
    visitObject$1: [function(x) {
      throw H.wrapException("Message serialization: Illegal value " + H.S(x) + " passed");
    }, "call$1", "get$visitObject", 2, 0, null, 12]
  },
  _Copier: {
    "": "_MessageTraverser;",
    visitPrimitive$1: [function(x) {
      return x;
    }, "call$1", "get$visitPrimitive", 2, 0, null, 12],
    visitList$1: [function(list) {
      var t1, copy, len, t2, i, t3;
      t1 = this._visited;
      copy = t1.$index(t1, list);
      if (copy != null)
        return copy;
      t1 = J.getInterceptor$asx(list);
      len = t1.get$length(list);
      if (typeof len !== "number")
        return H.iae(len);
      copy = Array(len);
      copy.fixed$length = init;
      t2 = this._visited;
      t2.$indexSet(t2, list, copy);
      for (t2 = copy.length, i = 0; i < len; ++i) {
        t3 = this._dispatch$1(t1.$index(list, i));
        if (i >= t2)
          return H.ioore(copy, i);
        copy[i] = t3;
      }
      return copy;
    }, "call$1", "get$visitList", 2, 0, null, 45],
    visitMap$1: [function(map) {
      var t1, t2, copy;
      t1 = {};
      t2 = this._visited;
      copy = t2.$index(t2, map);
      t1.copy_0 = copy;
      if (copy != null)
        return copy;
      copy = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1.copy_0 = copy;
      t2 = this._visited;
      t2.$indexSet(t2, map, copy);
      map.forEach$1(map, new H._Copier_visitMap_closure(t1, this));
      return t1.copy_0;
    }, "call$1", "get$visitMap", 2, 0, null, 181],
    visitSendPort$1: [function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$visitSendPort", 2, 0, null, 12]
  },
  _Copier_visitMap_closure: {
    "": "Closure:183;box_0,this_1",
    call$2: [function(key, val) {
      var t1 = this.this_1;
      J.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
    }, "call$2", null, 4, 0, null, 19, 182, "call"],
    $isFunction: true
  },
  _Serializer: {
    "": "_MessageTraverser;",
    visitPrimitive$1: [function(x) {
      return x;
    }, "call$1", "get$visitPrimitive", 2, 0, null, 12],
    visitList$1: [function(list) {
      var t1, copyId, id;
      t1 = this._visited;
      copyId = t1.$index(t1, list);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = id + 1;
      t1 = this._visited;
      t1.$indexSet(t1, list, id);
      return ["list", id, this._serializeList$1(list)];
    }, "call$1", "get$visitList", 2, 0, null, 45],
    visitMap$1: [function(map) {
      var t1, copyId, id, keys;
      t1 = this._visited;
      copyId = t1.$index(t1, map);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = id + 1;
      t1 = this._visited;
      t1.$indexSet(t1, map, id);
      t1 = map.get$keys();
      keys = this._serializeList$1(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)));
      t1 = map.get$values(map);
      return ["map", id, keys, this._serializeList$1(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)))];
    }, "call$1", "get$visitMap", 2, 0, null, 181],
    _serializeList$1: [function(list) {
      var t1, len, result, i, t2;
      t1 = J.getInterceptor$asx(list);
      len = t1.get$length(list);
      result = [];
      C.JSArray_methods.set$length(result, len);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i) {
        t2 = this._dispatch$1(t1.$index(list, i));
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t2;
      }
      return result;
    }, "call$1", "get$_serializeList", 2, 0, null, 45],
    visitSendPort$1: [function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$visitSendPort", 2, 0, null, 12]
  },
  _Deserializer: {
    "": "Object;",
    deserialize$1: [function(x) {
      if (H._Deserializer_isPrimitive(x))
        return x;
      this._deserialized = P.HashMap_HashMap(null, null, null, null, null);
      return this._deserializeHelper$1(x);
    }, "call$1", "get$deserialize", 2, 0, null, 12],
    _deserializeHelper$1: [function(x) {
      var t1, id;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return x;
      t1 = J.getInterceptor$asx(x);
      switch (t1.$index(x, 0)) {
        case "ref":
          id = t1.$index(x, 1);
          t1 = this._deserialized;
          return t1.$index(t1, id);
        case "list":
          return this._deserializeList$1(x);
        case "map":
          return this._deserializeMap$1(x);
        case "sendport":
          return this.deserializeSendPort$1(x);
        default:
          return this.deserializeObject$1(x);
      }
    }, "call$1", "get$_deserializeHelper", 2, 0, null, 12],
    _deserializeList$1: [function(x) {
      var t1, id, dartList, len, i;
      t1 = J.getInterceptor$asx(x);
      id = t1.$index(x, 1);
      dartList = t1.$index(x, 2);
      t1 = this._deserialized;
      t1.$indexSet(t1, id, dartList);
      t1 = J.getInterceptor$asx(dartList);
      len = t1.get$length(dartList);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i)
        t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
      return dartList;
    }, "call$1", "get$_deserializeList", 2, 0, null, 12],
    _deserializeMap$1: [function(x) {
      var result, t1, id, t2, keys, values, len, i;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1 = J.getInterceptor$asx(x);
      id = t1.$index(x, 1);
      t2 = this._deserialized;
      t2.$indexSet(t2, id, result);
      keys = t1.$index(x, 2);
      values = t1.$index(x, 3);
      t1 = J.getInterceptor$asx(keys);
      len = t1.get$length(keys);
      if (typeof len !== "number")
        return H.iae(len);
      t2 = J.getInterceptor$asx(values);
      i = 0;
      for (; i < len; ++i)
        result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
      return result;
    }, "call$1", "get$_deserializeMap", 2, 0, null, 12],
    deserializeObject$1: [function(x) {
      throw H.wrapException("Unexpected serialized object");
    }, "call$1", "get$deserializeObject", 2, 0, null, 12]
  },
  TimerImpl: {
    "": "Object;_once,_inEventLoop,_handle",
    TimerImpl$2: function(milliseconds, callback) {
      var t1, t2;
      if (milliseconds === 0)
        t1 = $.get$globalThis().setTimeout == null || init.globalState.isWorker === true;
      else
        t1 = false;
      if (t1) {
        this._handle = 1;
        t1 = init.globalState.topEventLoop;
        t2 = init.globalState.currentContext;
        t1.events._add$1(new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
        this._inEventLoop = true;
      } else {
        t1 = $.get$globalThis();
        if (t1.setTimeout != null) {
          t2 = init.globalState.topEventLoop;
          t2.activeTimerCount = t2.activeTimerCount + 1;
          this._handle = t1.setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
        } else
          throw H.wrapException(P.UnsupportedError$("Timer greater than 0."));
      }
    },
    static: {TimerImpl$: function(milliseconds, callback) {
        var t1 = new H.TimerImpl(true, false, null);
        t1.TimerImpl$2(milliseconds, callback);
        return t1;
      }}
  },
  TimerImpl_internalCallback: {
    "": "Closure:92;this_0,callback_1",
    call$0: [function() {
      this.this_0._handle = null;
      this.callback_1.call$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  TimerImpl_internalCallback0: {
    "": "Closure:92;this_2,callback_3",
    call$0: [function() {
      this.this_2._handle = null;
      var t1 = init.globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      this.callback_3.call$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  }
}],
["_js_helper", "dart:_js_helper", , H, {
  "": "",
  isJsIndexable: [function(object, record) {
    var result, t1;
    if (record != null) {
      result = record.x;
      if (result != null)
        return result;
    }
    t1 = J.getInterceptor(object);
    return typeof object === "object" && object !== null && !!t1.$isJavaScriptIndexingBehavior;
  }, "call$2", "isJsIndexable$closure", 4, 0, null, 0, 13],
  S: [function(value) {
    var res;
    if (typeof value === "string")
      return value;
    if (typeof value === "number") {
      if (value !== 0)
        return "" + value;
    } else if (true === value)
      return "true";
    else if (false === value)
      return "false";
    else if (value == null)
      return "null";
    res = J.toString$0(value);
    if (typeof res !== "string")
      throw H.wrapException(P.ArgumentError$(value));
    return res;
  }, "call$1", "S$closure", 2, 0, null, 14],
  Primitives_objectHashCode: [function(object) {
    var hash = object.$identityHash;
    if (hash == null) {
      hash = Math.random() * 0x3fffffff | 0;
      object.$identityHash = hash;
    }
    return hash;
  }, "call$1", "Primitives_objectHashCode$closure", 2, 0, null, 0],
  Primitives_objectTypeName: [function(object) {
    var $name, decompiled, t1;
    $name = C.JS_CONST_IX5(J.getInterceptor(object));
    if ($name === "Object") {
      decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
      if (typeof decompiled === "string")
        $name = decompiled;
    }
    t1 = J.getInterceptor$s($name);
    if (t1.codeUnitAt$1($name, 0) === 36)
      $name = t1.substring$1($name, 1);
    t1 = H.getRuntimeTypeInfo(object);
    return H.S($name) + H.joinArguments(t1, 0, null);
  }, "call$1", "Primitives_objectTypeName$closure", 2, 0, null, 0],
  Primitives_objectToString: [function(object) {
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  }, "call$1", "Primitives_objectToString$closure", 2, 0, null, 0],
  Primitives_numMicroseconds: [function() {
    if (typeof window != "undefined" && window !== null) {
      var performance = window.performance;
      if (performance != null && typeof performance.webkitNow == "function")
        return C.JSNumber_methods.toInt$0(Math.floor(1000 * performance.webkitNow()));
    }
    return 1000 * Date.now();
  }, "call$0", "Primitives_numMicroseconds$closure", 0, 0, null],
  Primitives__fromCharCodeApply: [function(array) {
    var end, t1, result, i, subarray, t2;
    end = array.length;
    for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
      if (t1)
        subarray = array;
      else {
        t2 = i + 500;
        t2 = t2 < end ? t2 : end;
        subarray = array.slice(i, t2);
      }
      result += String.fromCharCode.apply(null, subarray);
    }
    return result;
  }, "call$1", "Primitives__fromCharCodeApply$closure", 2, 0, null, 15],
  Primitives_stringFromCodePoints: [function(codePoints) {
    var a, t1, i;
    a = [];
    a.$builtinTypeInfo = [J.JSInt];
    for (t1 = new H.ListIterator(codePoints, codePoints.length, 0, null); t1.moveNext$0();) {
      i = t1._current;
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i <= 65535)
        a.push(i);
      else if (i <= 1114111) {
        a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
        a.push(56320 + (i & 1023));
      } else
        throw H.wrapException(P.ArgumentError$(i));
    }
    return H.Primitives__fromCharCodeApply(a);
  }, "call$1", "Primitives_stringFromCodePoints$closure", 2, 0, null, 16],
  Primitives_stringFromCharCodes: [function(charCodes) {
    var t1, i;
    for (t1 = new H.ListIterator(charCodes, charCodes.length, 0, null); t1.moveNext$0();) {
      i = t1._current;
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i < 0)
        throw H.wrapException(P.ArgumentError$(i));
      if (i > 65535)
        return H.Primitives_stringFromCodePoints(charCodes);
    }
    return H.Primitives__fromCharCodeApply(charCodes);
  }, "call$1", "Primitives_stringFromCharCodes$closure", 2, 0, null, 17],
  Primitives_lazyAsJsDate: [function(receiver) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    return receiver.date;
  }, "call$1", "Primitives_lazyAsJsDate$closure", 2, 0, null, 18],
  Primitives_getProperty: [function(object, key) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    return object[key];
  }, "call$2", "Primitives_getProperty$closure", 4, 0, null, 0, 19],
  Primitives_setProperty: [function(object, key, value) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    object[key] = value;
  }, "call$3", "Primitives_setProperty$closure", 6, 0, null, 0, 19, 14],
  Primitives_functionNoSuchMethod: [function($function, positionalArguments, namedArguments) {
    var t1, $arguments, namedArgumentList;
    t1 = {};
    t1.argumentCount_0 = 0;
    $arguments = [];
    namedArgumentList = [];
    if (positionalArguments != null) {
      t1.argumentCount_0 = 0 + positionalArguments.length;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
    }
    t1.names_1 = "";
    if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
      namedArguments.forEach$1(namedArguments, new H.Primitives_functionNoSuchMethod_closure(t1, $arguments, namedArgumentList));
    return J.noSuchMethod$1($function, new H.JSInvocationMirror(C.Symbol_call, "call$" + t1.argumentCount_0 + t1.names_1, 0, $arguments, namedArgumentList, null));
  }, "call$3", "Primitives_functionNoSuchMethod$closure", 6, 0, null, 6, 20, 21],
  Primitives_applyFunction: [function($function, positionalArguments, namedArguments) {
    var t1, jsFunction, info, t2, defaultArguments, t3, t4, i, t5, $arguments, argumentCount;
    t1 = {};
    if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments)) {
      jsFunction = J.getInterceptor($function)["call*"];
      if (jsFunction == null)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      info = H.ReflectionInfo_ReflectionInfo(jsFunction);
      if (info == null || !info.areOptionalParametersNamed)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      positionalArguments = P.List_List$from(positionalArguments, true, null);
      t2 = info.requiredParameterCount;
      if (t2 !== positionalArguments.length)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      defaultArguments = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t3 = info.optionalParameterCount, t4 = info.data, i = 0; i < t3; ++i) {
        t5 = i + t2;
        defaultArguments.$indexSet(defaultArguments, init.metadata[t4[t5 + t3 + 3]], init.metadata[info.defaultValue$1(info, t5)]);
      }
      t1.bad_0 = false;
      namedArguments.forEach$1(namedArguments, new H.Primitives_applyFunction_closure(t1, defaultArguments));
      if (t1.bad_0)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      J.addAll$1$ax(positionalArguments, defaultArguments.get$values(defaultArguments));
      return jsFunction.apply($function, positionalArguments);
    }
    $arguments = [];
    argumentCount = 0 + positionalArguments.length;
    C.JSArray_methods.addAll$1($arguments, positionalArguments);
    jsFunction = $function["call$" + argumentCount];
    if (jsFunction == null)
      return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
    return jsFunction.apply($function, $arguments);
  }, "call$3", "Primitives_applyFunction$closure", 6, 0, null, 6, 20, 21],
  iae: [function(argument) {
    throw H.wrapException(P.ArgumentError$(argument));
  }, "call$1", "iae$closure", 2, 0, null, 22],
  ioore: [function(receiver, index) {
    if (receiver == null)
      J.get$length$asx(receiver);
    if (typeof index !== "number" || Math.floor(index) !== index)
      H.iae(index);
    throw H.wrapException(P.RangeError$value(index));
  }, "call$2", "ioore$closure", 4, 0, null, 18, 23],
  wrapException: [function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper;
    return wrapper;
  }, "call$1", "wrapException$closure", 2, 0, null, 24],
  toStringWrapper: [function() {
    return J.toString$0(this.dartException);
  }, "call$0", "toStringWrapper$closure", 0, 0, null],
  throwExpression: [function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper;
    throw wrapper;
  }, "call$1", "throwExpression$closure", 2, 0, null, 24],
  unwrapException: [function(ex) {
    var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
    t1 = new H.unwrapException_saveStackTrace(ex);
    if (ex == null)
      return;
    if (typeof ex !== "object")
      return ex;
    if ("dartException" in ex)
      return t1.call$1(ex.dartException);
    else if (!("message" in ex))
      return ex;
    message = ex.message;
    if ("number" in ex && typeof ex.number == "number") {
      number = ex.number;
      ieErrorCode = number & 65535;
      if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
        switch (ieErrorCode) {
          case 438:
            return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
          case 445:
          case 5007:
            t2 = H.S(message) + " (Error " + ieErrorCode + ")";
            return t1.call$1(new H.NullError(t2, null));
          default:
        }
    }
    if (ex instanceof TypeError) {
      t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
      t3 = $.get$TypeErrorDecoder_notClosurePattern();
      t4 = $.get$TypeErrorDecoder_nullCallPattern();
      nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
      t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
      t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
      t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
      $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
      t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
      t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
      match = t2.matchTypeError$1(message);
      if (match != null)
        return t1.call$1(H.JsNoSuchMethodError$(message, match));
      else {
        match = t3.matchTypeError$1(message);
        if (match != null) {
          match.method = "call";
          return t1.call$1(H.JsNoSuchMethodError$(message, match));
        } else {
          match = t4.matchTypeError$1(message);
          if (match == null) {
            match = nullLiteralCall.matchTypeError$1(message);
            if (match == null) {
              match = t5.matchTypeError$1(message);
              if (match == null) {
                match = t6.matchTypeError$1(message);
                if (match == null) {
                  match = t7.matchTypeError$1(message);
                  if (match == null) {
                    match = nullLiteralCall.matchTypeError$1(message);
                    if (match == null) {
                      match = t8.matchTypeError$1(message);
                      if (match == null) {
                        match = t9.matchTypeError$1(message);
                        t2 = match != null;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
          if (t2) {
            t2 = match == null ? null : match.method;
            return t1.call$1(new H.NullError(message, t2));
          }
        }
      }
      t2 = typeof message === "string" ? message : "";
      return t1.call$1(new H.UnknownJsTypeError(t2));
    }
    if (ex instanceof RangeError) {
      if (typeof message === "string" && message.indexOf("call stack") !== -1)
        return new P.StackOverflowError();
      return t1.call$1(new P.ArgumentError(null));
    }
    if (typeof InternalError == "function" && ex instanceof InternalError)
      if (typeof message === "string" && message === "too much recursion")
        return new P.StackOverflowError();
    return ex;
  }, "call$1", "unwrapException$closure", 2, 0, null, 24],
  objectHashCode: [function(object) {
    if (object == null || typeof object != 'object')
      return J.get$hashCode$(object);
    else
      return H.Primitives_objectHashCode(object);
  }, "call$1", "objectHashCode$closure", 2, 0, null, 0],
  fillLiteralMap: [function(keyValuePairs, result) {
    var $length, index, index0, index1;
    $length = keyValuePairs.length;
    for (index = 0; index < $length; index = index1) {
      index0 = index + 1;
      index1 = index0 + 1;
      result.$indexSet(result, keyValuePairs[index], keyValuePairs[index0]);
    }
    return result;
  }, "call$2", "fillLiteralMap$closure", 4, 0, null, 26, 27],
  invokeClosure: [function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
    var t1 = J.getInterceptor(numberOfArguments);
    if (t1.$eq(numberOfArguments, 0))
      return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
    else if (t1.$eq(numberOfArguments, 1))
      return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
    else if (t1.$eq(numberOfArguments, 2))
      return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
    else if (t1.$eq(numberOfArguments, 3))
      return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
    else if (t1.$eq(numberOfArguments, 4))
      return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
    else
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
  }, "call$7", "invokeClosure$closure", 14, 0, null, 28, 5, 29, 30, 31, 32, 33],
  convertDartClosureToJS: [function(closure, arity) {
    var $function;
    if (closure == null)
      return;
    $function = closure.$identity;
    if (!!$function)
      return $function;
    $function = (function(closure, arity, context, invoke) {  return function(a1, a2, a3, a4) {     return invoke(closure, context, arity, a1, a2, a3, a4);  };})(closure,arity,init.globalState.currentContext,H.invokeClosure);
    closure.$identity = $function;
    return $function;
  }, "call$2", "convertDartClosureToJS$closure", 4, 0, null, 28, 34],
  Closure_fromTearOff: [function(receiver, functions, reflectionInfo, isStatic, jsArguments, propertyName) {
    var $function, callName, functionType, $prototype, $constructor, t1, isIntercepted, trampoline, signatureFunction, getReceiver, i, stub, stubCallName, t2;
    $function = functions[0];
    $function.$stubName;
    callName = $function.$callName;
    $function.$reflectionInfo = reflectionInfo;
    functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
    $prototype = isStatic ? Object.create(new H.TearOffClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, null).constructor.prototype);
    $prototype.$initialize = $prototype.constructor;
    if (isStatic)
      $constructor = function(){this.$initialize()};
    else if (typeof dart_precompiled == "function") {
      t1 = function(a,b,c,d) {this.$initialize(a,b,c,d)};
      $constructor = t1;
    } else {
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t1, 1);
      t1 = new Function("a", "b", "c", "d", "this.$initialize(a,b,c,d);" + t1);
      $constructor = t1;
    }
    $prototype.constructor = $constructor;
    $constructor.prototype = $prototype;
    t1 = !isStatic;
    if (t1) {
      isIntercepted = jsArguments.length == 1 && true;
      trampoline = H.Closure_forwardCallTo($function, isIntercepted);
    } else {
      $prototype.$name = propertyName;
      trampoline = $function;
      isIntercepted = false;
    }
    if (typeof functionType == "number")
      signatureFunction = (function(s){return function(){return init.metadata[s]}})(functionType);
    else if (t1 && typeof functionType == "function") {
      getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
      signatureFunction = function(f,r){return function(){return f.apply({$receiver:r(this)},arguments)}}(functionType,getReceiver);
    } else
      throw H.wrapException("Error in reflectionInfo.");
    $prototype.$signature = signatureFunction;
    $prototype[callName] = trampoline;
    for (t1 = functions.length, i = 1; i < t1; ++i) {
      stub = functions[i];
      stubCallName = stub.$callName;
      if (stubCallName != null) {
        t2 = isStatic ? stub : H.Closure_forwardCallTo(stub, isIntercepted);
        $prototype[stubCallName] = t2;
      }
    }
    $prototype["call*"] = $function;
    return $constructor;
  }, "call$6", "Closure_fromTearOff$closure", 12, 0, null, 18, 35, 36, 37, 38, 39],
  Closure_cspForwardCall: [function(arity, $function) {
    var getSelf = H.BoundClosure_selfOf;
    switch (arity) {
      case 0:
        return function(F,S){return function(){return F.call(S(this))}}($function,getSelf);
      case 1:
        return function(F,S){return function(a){return F.call(S(this),a)}}($function,getSelf);
      case 2:
        return function(F,S){return function(a,b){return F.call(S(this),a,b)}}($function,getSelf);
      case 3:
        return function(F,S){return function(a,b,c){return F.call(S(this),a,b,c)}}($function,getSelf);
      case 4:
        return function(F,S){return function(a,b,c,d){return F.call(S(this),a,b,c,d)}}($function,getSelf);
      case 5:
        return function(F,S){return function(a,b,c,d,e){return F.call(S(this),a,b,c,d,e)}}($function,getSelf);
      default:
        return function(f,s){return function(){return f.apply(s(this),arguments)}}($function,getSelf);
    }
  }, "call$2", "Closure_cspForwardCall$closure", 4, 0, null, 34, 6],
  Closure_forwardCallTo: [function($function, isIntercepted) {
    var arity, t1, t2, $arguments;
    if (isIntercepted)
      return H.Closure_forwardInterceptedCallTo($function);
    arity = $function.length;
    if (typeof dart_precompiled == "function")
      return H.Closure_cspForwardCall(arity, $function);
    else if (arity === 0) {
      t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null) {
        t1 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t1;
      }
      t1 = "return function(){return F.call(this." + H.S(t1) + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function("F", t1 + H.S(t2) + "}")($function);
    } else if (1 <= arity && arity < 27) {
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = "return function(" + $arguments + "){return F.call(this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      if (t2 == null) {
        t2 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t2;
      }
      t2 = t1 + H.S(t2) + "," + $arguments + ");";
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t1, 1);
      return new Function("F", t2 + H.S(t1) + "}")($function);
    } else
      return H.Closure_cspForwardCall(arity, $function);
  }, "call$2", "Closure_forwardCallTo$closure", 4, 0, null, 6, 40],
  Closure_cspForwardInterceptedCall: [function(arity, $name, $function) {
    var getSelf, getReceiver;
    getSelf = H.BoundClosure_selfOf;
    getReceiver = H.BoundClosure_receiverOf;
    switch (arity) {
      case 0:
        throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
      case 1:
        return function(n,s,r){return function(){return s(this)[n](r(this))}}($name,getSelf,getReceiver);
      case 2:
        return function(n,s,r){return function(a){return s(this)[n](r(this),a)}}($name,getSelf,getReceiver);
      case 3:
        return function(n,s,r){return function(a,b){return s(this)[n](r(this),a,b)}}($name,getSelf,getReceiver);
      case 4:
        return function(n,s,r){return function(a,b,c){return s(this)[n](r(this),a,b,c)}}($name,getSelf,getReceiver);
      case 5:
        return function(n,s,r){return function(a,b,c,d){return s(this)[n](r(this),a,b,c,d)}}($name,getSelf,getReceiver);
      case 6:
        return function(n,s,r){return function(a,b,c,d,e){return s(this)[n](r(this),a,b,c,d,e)}}($name,getSelf,getReceiver);
      default:
        return function(f,s,r,a){return function(){a=[r(this)];Array.prototype.push.apply(a,arguments);return f.apply(s(this),a)}}($function,getSelf,getReceiver);
    }
  }, "call$3", "Closure_cspForwardInterceptedCall$closure", 6, 0, null, 34, 41, 6],
  Closure_forwardInterceptedCallTo: [function($function) {
    var stubName, arity, t1, t2, $arguments;
    stubName = $function.$stubName;
    arity = $function.length;
    if (typeof dart_precompiled == "function")
      return H.Closure_cspForwardInterceptedCall(arity, stubName, $function);
    else if (arity === 1) {
      t1 = "return this." + H.S(H.BoundClosure_selfFieldName()) + "." + stubName + "(this." + H.S(H.BoundClosure_receiverFieldName()) + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2));
    } else if (1 < arity && arity < 28) {
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(H.BoundClosure_selfFieldName()) + "." + stubName + "(this." + H.S(H.BoundClosure_receiverFieldName()) + "," + $arguments + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2) + "}")();
    } else
      return H.Closure_cspForwardInterceptedCall(arity, stubName, $function);
  }, "call$1", "Closure_forwardInterceptedCallTo$closure", 2, 0, null, 6],
  closureFromTearOff: [function(receiver, functions, reflectionInfo, isStatic, jsArguments, $name) {
    functions.fixed$length = init;
    reflectionInfo.fixed$length = init;
    return H.Closure_fromTearOff(receiver, functions, reflectionInfo, !!isStatic, jsArguments, $name);
  }, "call$6", "closureFromTearOff$closure", 12, 0, null, 18, 35, 36, 37, 38, 41],
  propertyTypeCastError: [function(value, property) {
    var t1 = J.getInterceptor$asx(property);
    throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
  }, "call$2", "propertyTypeCastError$closure", 4, 0, null, 14, 43],
  interceptedTypeCast: [function(value, property) {
    var t1;
    if (value != null)
      t1 = typeof value === "object" && J.getInterceptor(value)[property];
    else
      t1 = true;
    if (t1)
      return value;
    H.propertyTypeCastError(value, property);
  }, "call$2", "interceptedTypeCast$closure", 4, 0, null, 14, 43],
  throwCyclicInit: [function(staticName) {
    throw H.wrapException(P.CyclicInitializationError$("Cyclic initialization for static " + H.S(staticName)));
  }, "call$1", "throwCyclicInit$closure", 2, 0, null, 44],
  buildFunctionType: [function(returnType, parameterTypes, optionalParameterTypes) {
    return new H.RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, null);
  }, "call$3", "buildFunctionType$closure", 6, 0, null, 46, 47, 48],
  getDynamicRuntimeType: [function() {
    return C.C_DynamicRuntimeType;
  }, "call$0", "getDynamicRuntimeType$closure", 0, 0, null],
  createRuntimeType: [function($name) {
    return new H.TypeImpl($name, null);
  }, "call$1", "createRuntimeType$closure", 2, 0, null, 41],
  setRuntimeTypeInfo: [function(target, typeInfo) {
    if (target != null)
      target.$builtinTypeInfo = typeInfo;
    return target;
  }, "call$2", "setRuntimeTypeInfo$closure", 4, 0, null, 49, 50],
  getRuntimeTypeInfo: [function(target) {
    if (target == null)
      return;
    return target.$builtinTypeInfo;
  }, "call$1", "getRuntimeTypeInfo$closure", 2, 0, null, 49],
  getRuntimeTypeArguments: [function(target, substitutionName) {
    return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
  }, "call$2", "getRuntimeTypeArguments$closure", 4, 0, null, 49, 51],
  getRuntimeTypeArgument: [function(target, substitutionName, index) {
    var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
    return $arguments == null ? null : $arguments[index];
  }, "call$3", "getRuntimeTypeArgument$closure", 6, 0, null, 49, 51, 23],
  getTypeArgumentByIndex: [function(target, index) {
    var rti = H.getRuntimeTypeInfo(target);
    return rti == null ? null : rti[index];
  }, "call$2", "getTypeArgumentByIndex$closure", 4, 0, null, 49, 23],
  runtimeTypeToString: [function(type, onTypeVariable) {
    if (type == null)
      return "dynamic";
    else if (typeof type === "object" && type !== null && type.constructor === Array)
      return type[0].builtin$cls + H.joinArguments(type, 1, onTypeVariable);
    else if (typeof type == "function")
      return type.builtin$cls;
    else if (typeof type === "number" && Math.floor(type) === type)
      return C.JSInt_methods.toString$0(type);
    else
      return;
  }, "call$2$onTypeVariable", "runtimeTypeToString$closure", 2, 3, null, 52, 53, 54],
  joinArguments: [function(types, startIndex, onTypeVariable) {
    var buffer, index, firstArgument, allDynamic, argument, str;
    if (types == null)
      return "";
    buffer = P.StringBuffer$("");
    for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
      if (firstArgument)
        firstArgument = false;
      else
        buffer._contents = buffer._contents + ", ";
      argument = types[index];
      if (argument != null)
        allDynamic = false;
      str = H.runtimeTypeToString(argument, onTypeVariable);
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
    }
    return allDynamic ? "" : "<" + H.S(buffer) + ">";
  }, "call$3$onTypeVariable", "joinArguments$closure", 4, 3, null, 52, 55, 56, 54],
  substitute: [function(substitution, $arguments) {
    if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
      $arguments = substitution;
    else if (typeof substitution == "function") {
      substitution = H.invokeOn(substitution, null, $arguments);
      if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
        $arguments = substitution;
      else if (typeof substitution == "function")
        $arguments = H.invokeOn(substitution, null, $arguments);
    }
    return $arguments;
  }, "call$2", "substitute$closure", 4, 0, null, 57, 58],
  areSubtypes: [function(s, t) {
    var len, i;
    if (s == null || t == null)
      return true;
    len = s.length;
    for (i = 0; i < len; ++i)
      if (!H.isSubtype(s[i], t[i]))
        return false;
    return true;
  }, "call$2", "areSubtypes$closure", 4, 0, null, 59, 60],
  computeSignature: [function(signature, context, contextName) {
    return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
  }, "call$3", "computeSignature$closure", 6, 0, null, 61, 62, 63],
  isSubtype: [function(s, t) {
    var targetSignatureFunction, t1, typeOfS, t2, typeOfT, $name, substitution;
    if (s === t)
      return true;
    if (s == null || t == null)
      return true;
    if ("func" in t) {
      if (!("func" in s)) {
        if ("$is_" + H.S(t.func) in s)
          return true;
        targetSignatureFunction = s.$signature;
        if (targetSignatureFunction == null)
          return false;
        s = targetSignatureFunction.apply(s, null);
      }
      return H.isFunctionSubtype(s, t);
    }
    if (t.builtin$cls === "Function" && "func" in s)
      return true;
    t1 = typeof s === "object" && s !== null && s.constructor === Array;
    typeOfS = t1 ? s[0] : s;
    t2 = typeof t === "object" && t !== null && t.constructor === Array;
    typeOfT = t2 ? t[0] : t;
    $name = H.runtimeTypeToString(typeOfT, null);
    if (typeOfT !== typeOfS) {
      if (!("$is" + H.S($name) in typeOfS))
        return false;
      substitution = typeOfS["$as" + H.S(H.runtimeTypeToString(typeOfT, null))];
    } else
      substitution = null;
    if (!t1 && substitution == null || !t2)
      return true;
    t1 = t1 ? s.slice(1) : null;
    t2 = t2 ? t.slice(1) : null;
    return H.areSubtypes(H.substitute(substitution, t1), t2);
  }, "call$2", "isSubtype$closure", 4, 0, null, 59, 60],
  areAssignable: [function(s, t, allowShorter) {
    var sLength, tLength, i, t1, t2;
    if (t == null && s == null)
      return true;
    if (t == null)
      return allowShorter;
    if (s == null)
      return false;
    sLength = s.length;
    tLength = t.length;
    if (allowShorter) {
      if (sLength < tLength)
        return false;
    } else if (sLength !== tLength)
      return false;
    for (i = 0; i < tLength; ++i) {
      t1 = s[i];
      t2 = t[i];
      if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
        return false;
    }
    return true;
  }, "call$3", "areAssignable$closure", 6, 0, null, 59, 60, 64],
  areAssignableMaps: [function(s, t) {
    var t1, names, i, $name, tType, sType;
    if (t == null)
      return true;
    if (s == null)
      return false;
    t1 = Object.getOwnPropertyNames(t);
    t1.fixed$length = init;
    names = t1;
    for (t1 = names.length, i = 0; i < t1; ++i) {
      $name = names[i];
      if (!Object.hasOwnProperty.call(s, $name))
        return false;
      tType = t[$name];
      sType = s[$name];
      if (!(H.isSubtype(tType, sType) || H.isSubtype(sType, tType)))
        return false;
    }
    return true;
  }, "call$2", "areAssignableMaps$closure", 4, 0, null, 59, 60],
  isFunctionSubtype: [function(s, t) {
    var sReturnType, tReturnType, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
    if (!("func" in s))
      return false;
    if ("void" in s) {
      if (!("void" in t) && "ret" in t)
        return false;
    } else if (!("void" in t)) {
      sReturnType = s.ret;
      tReturnType = t.ret;
      if (!(H.isSubtype(sReturnType, tReturnType) || H.isSubtype(tReturnType, sReturnType)))
        return false;
    }
    sParameterTypes = s.args;
    tParameterTypes = t.args;
    sOptionalParameterTypes = s.opt;
    tOptionalParameterTypes = t.opt;
    sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
    tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
    sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
    tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
    if (sParametersLen > tParametersLen)
      return false;
    if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
      return false;
    if (sParametersLen === tParametersLen) {
      if (!H.areAssignable(sParameterTypes, tParameterTypes, false))
        return false;
      if (!H.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true))
        return false;
    } else {
      for (pos = 0; pos < sParametersLen; ++pos) {
        t1 = sParameterTypes[pos];
        t2 = tParameterTypes[pos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tOptionalParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
    }
    return H.areAssignableMaps(s.named, t.named);
  }, "call$2", "isFunctionSubtype$closure", 4, 0, null, 59, 60],
  invokeOn: [function($function, receiver, $arguments) {
    return $function.apply(receiver, $arguments);
  }, "call$3", "invokeOn$closure", 6, 0, null, 6, 18, 58],
  toStringForNativeObject: [function(obj) {
    var t1 = $.getTagFunction;
    return "Instance of " + (t1 == null ? "<Unknown>" : t1.call$1(obj));
  }, "call$1", "toStringForNativeObject$closure", 2, 0, null, 65],
  hashCodeForNativeObject: [function(object) {
    return H.Primitives_objectHashCode(object);
  }, "call$1", "hashCodeForNativeObject$closure", 2, 0, null, 0],
  defineProperty: [function(obj, property, value) {
    Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
  }, "call$3", "defineProperty$closure", 6, 0, null, 65, 43, 14],
  lookupAndCacheInterceptor: [function(obj) {
    var tag, record, interceptor, interceptorClass, mark, t1;
    tag = $.getTagFunction.call$1(obj);
    record = $.dispatchRecordsForInstanceTags[tag];
    if (record != null) {
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    interceptor = $.interceptorsForUncacheableTags[tag];
    if (interceptor != null)
      return interceptor;
    interceptorClass = init.interceptorsByTag[tag];
    if (interceptorClass == null) {
      tag = $.alternateTagFunction.call$2(obj, tag);
      if (tag != null) {
        record = $.dispatchRecordsForInstanceTags[tag];
        if (record != null) {
          Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
          return record.i;
        }
        interceptor = $.interceptorsForUncacheableTags[tag];
        if (interceptor != null)
          return interceptor;
        interceptorClass = init.interceptorsByTag[tag];
      }
    }
    if (interceptorClass == null)
      return;
    interceptor = interceptorClass.prototype;
    mark = tag[0];
    if (mark === "!") {
      record = H.makeLeafDispatchRecord(interceptor);
      $.dispatchRecordsForInstanceTags[tag] = record;
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    if (mark === "~") {
      $.interceptorsForUncacheableTags[tag] = interceptor;
      return interceptor;
    }
    if (mark === "-") {
      t1 = H.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    }
    if (mark === "+")
      return H.patchInteriorProto(obj, interceptor);
    if (mark === "*")
      throw H.wrapException(P.UnimplementedError$(tag));
    if (init.leafTags[tag] === true) {
      t1 = H.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    } else
      return H.patchInteriorProto(obj, interceptor);
  }, "call$1", "lookupAndCacheInterceptor$closure", 2, 0, null, 65],
  patchInteriorProto: [function(obj, interceptor) {
    var proto, record;
    proto = Object.getPrototypeOf(obj);
    record = J.makeDispatchRecord(interceptor, proto, null, null);
    Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
    return interceptor;
  }, "call$2", "patchInteriorProto$closure", 4, 0, null, 65, 1],
  makeLeafDispatchRecord: [function(interceptor) {
    return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  }, "call$1", "makeLeafDispatchRecord$closure", 2, 0, null, 1],
  makeDefaultDispatchRecord: [function(tag, interceptorClass, proto) {
    var interceptor = interceptorClass.prototype;
    if (init.leafTags[tag] === true)
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    else
      return J.makeDispatchRecord(interceptor, proto, null, null);
  }, "call$3", "makeDefaultDispatchRecord$closure", 6, 0, null, 66, 67, 2],
  initNativeDispatch: [function() {
    if (true === $.initNativeDispatchFlag)
      return;
    $.initNativeDispatchFlag = true;
    H.initNativeDispatchContinue();
  }, "call$0", "initNativeDispatch$closure", 0, 0, null],
  initNativeDispatchContinue: [function() {
    var map, tags, i, tag, proto, record, interceptorClass;
    $.dispatchRecordsForInstanceTags = Object.create(null);
    $.interceptorsForUncacheableTags = Object.create(null);
    H.initHooks();
    map = init.interceptorsByTag;
    tags = Object.getOwnPropertyNames(map);
    if (typeof window != "undefined") {
      window;
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        proto = $.prototypeForTagFunction.call$1(tag);
        if (proto != null) {
          record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
          if (record != null)
            Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        }
      }
    }
    for (i = 0; i < tags.length; ++i) {
      tag = tags[i];
      if (/^[A-Za-z_]/.test(tag)) {
        interceptorClass = map[tag];
        map["!" + tag] = interceptorClass;
        map["~" + tag] = interceptorClass;
        map["-" + tag] = interceptorClass;
        map["+" + tag] = interceptorClass;
        map["*" + tag] = interceptorClass;
      }
    }
  }, "call$0", "initNativeDispatchContinue$closure", 0, 0, null],
  initHooks: [function() {
    var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
    hooks = C.JS_CONST_aQP();
    hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_rr7, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_gkc, H.applyHooksTransformer(C.JS_CONST_U4w, H.applyHooksTransformer(C.JS_CONST_QJm(C.JS_CONST_IX5), hooks)))))));
    if (typeof dartNativeDispatchHooksTransformer != "undefined") {
      transformers = dartNativeDispatchHooksTransformer;
      if (typeof transformers == "function")
        transformers = [transformers];
      if (transformers.constructor == Array)
        for (i = 0; i < transformers.length; ++i) {
          transformer = transformers[i];
          if (typeof transformer == "function")
            hooks = transformer(hooks) || hooks;
        }
    }
    getTag = hooks.getTag;
    getUnknownTag = hooks.getUnknownTag;
    prototypeForTag = hooks.prototypeForTag;
    $.getTagFunction = new H.initHooks_closure(getTag);
    $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
    $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
  }, "call$0", "initHooks$closure", 0, 0, null],
  applyHooksTransformer: [function(transformer, hooks) {
    return transformer(hooks) || hooks;
  }, "call$2", "applyHooksTransformer$closure", 4, 0, null, 68, 69],
  JSInvocationMirror: {
    "": "Object;__js_helper$_memberName,_internalName,_kind,_arguments,_namedArgumentNames,_namedIndices",
    get$memberName: function() {
      return this.__js_helper$_memberName;
    },
    get$positionalArguments: function() {
      var t1, argumentCount, list, index;
      if (this._kind === 1)
        return C.List_empty;
      t1 = this._arguments;
      argumentCount = t1.length - this._namedArgumentNames.length;
      if (argumentCount === 0)
        return C.List_empty;
      list = [];
      for (index = 0; index < argumentCount; ++index) {
        if (index >= t1.length)
          return H.ioore(t1, index);
        list.push(t1[index]);
      }
      list.immutable$list = true;
      list.fixed$length = true;
      return list;
    },
    get$namedArguments: function() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4;
      if (this._kind !== 0)
        return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol, null]);
      t1 = this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount;
      if (namedArgumentCount === 0)
        return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol, null]);
      map = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol, null);
      for (i = 0; i < namedArgumentCount; ++i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t3 = t1[i];
        t4 = namedArgumentsStartIndex + i;
        if (t4 < 0 || t4 >= t2.length)
          return H.ioore(t2, t4);
        map.$indexSet(map, new H.Symbol0(t3), t2[t4]);
      }
      return map;
    },
    static: {"": "JSInvocationMirror_METHOD,JSInvocationMirror_GETTER,JSInvocationMirror_SETTER"}
  },
  ReflectionInfo: {
    "": "Object;jsFunction,data,isAccessor,requiredParameterCount,optionalParameterCount,areOptionalParametersNamed,functionType",
    defaultValue$1: [function(_, parameter) {
      var t1 = this.requiredParameterCount;
      if (parameter < t1)
        return;
      return this.data[3 + parameter - t1];
    }, "call$1", "get$defaultValue", 2, 0, null, 184],
    static: {"": "ReflectionInfo_REQUIRED_PARAMETERS_INFO,ReflectionInfo_OPTIONAL_PARAMETERS_INFO,ReflectionInfo_FUNCTION_TYPE_INDEX,ReflectionInfo_FIRST_DEFAULT_ARGUMENT", ReflectionInfo_ReflectionInfo: function(jsFunction) {
        var data, requiredParametersInfo, requiredParameterCount, optionalParametersInfo;
        data = jsFunction.$reflectionInfo;
        if (data == null)
          return;
        data.fixed$length = init;
        data = data;
        requiredParametersInfo = data[0];
        requiredParameterCount = requiredParametersInfo >> 1;
        optionalParametersInfo = data[1];
        return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 1) === 1, requiredParameterCount, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2]);
      }}
  },
  Primitives_functionNoSuchMethod_closure: {
    "": "Closure:185;box_0,arguments_1,namedArgumentList_2",
    call$2: [function($name, argument) {
      var t1 = this.box_0;
      t1.names_1 = t1.names_1 + "$" + H.S($name);
      this.namedArgumentList_2.push($name);
      this.arguments_1.push(argument);
      t1.argumentCount_0 = t1.argumentCount_0 + 1;
    }, "call$2", null, 4, 0, null, 41, 22, "call"],
    $isFunction: true
  },
  Primitives_applyFunction_closure: {
    "": "Closure:185;box_0,defaultArguments_1",
    call$2: [function(parameter, value) {
      var t1 = this.defaultArguments_1;
      if (t1.containsKey$1(parameter))
        t1.$indexSet(t1, parameter, value);
      else
        this.box_0.bad_0 = true;
    }, "call$2", null, 4, 0, null, 184, 14, "call"],
    $isFunction: true
  },
  TypeErrorDecoder: {
    "": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver<",
    matchTypeError$1: [function(message) {
      var match, result, t1;
      match = new RegExp(this._pattern).exec(message);
      if (match == null)
        return;
      result = {};
      t1 = this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }, "call$1", "get$matchTypeError", 2, 0, null, 11],
    static: {"": "TypeErrorDecoder_noSuchMethodPattern,TypeErrorDecoder_notClosurePattern,TypeErrorDecoder_nullCallPattern,TypeErrorDecoder_nullLiteralCallPattern,TypeErrorDecoder_undefinedCallPattern,TypeErrorDecoder_undefinedLiteralCallPattern,TypeErrorDecoder_nullPropertyPattern,TypeErrorDecoder_nullLiteralPropertyPattern,TypeErrorDecoder_undefinedPropertyPattern,TypeErrorDecoder_undefinedLiteralPropertyPattern", TypeErrorDecoder_extractPattern: [function(message) {
        var match, $arguments, argumentsExpr, expr, method, receiver;
        message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
        match = message.match(/\\\$[a-zA-Z]+\\\$/g);
        if (match == null)
          match = [];
        $arguments = match.indexOf("\\$arguments\\$");
        argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
        expr = match.indexOf("\\$expr\\$");
        method = match.indexOf("\\$method\\$");
        receiver = match.indexOf("\\$receiver\\$");
        return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
      }, "call$1", "TypeErrorDecoder_extractPattern$closure", 2, 0, null, 11], TypeErrorDecoder_provokeCallErrorOn: [function(expression) {
        return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
      }, "call$1", "TypeErrorDecoder_provokeCallErrorOn$closure", 2, 0, null, 25], TypeErrorDecoder_provokePropertyErrorOn: [function(expression) {
        return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
      }, "call$1", "TypeErrorDecoder_provokePropertyErrorOn$closure", 2, 0, null, 25]}
  },
  NullError: {
    "": "Error;_message,_method",
    toString$0: [function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NullError: " + H.S(this._message);
      return "NullError: Cannot call \"" + H.S(t1) + "\" on null";
    }, "call$0", "get$toString", 0, 0, null],
    $isError: true
  },
  JsNoSuchMethodError: {
    "": "Error;_message,_method,_receiver<",
    toString$0: [function(_) {
      var t1, t2;
      t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this._message);
      t2 = this._receiver;
      if (t2 == null)
        return "NoSuchMethodError: Cannot call \"" + t1 + "\" (" + H.S(this._message) + ")";
      return "NoSuchMethodError: Cannot call \"" + t1 + "\" on \"" + t2 + "\" (" + H.S(this._message) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    $isError: true,
    static: {JsNoSuchMethodError$: function(_message, match) {
        var t1, t2;
        t1 = match == null;
        t2 = t1 ? null : match.method;
        t1 = t1 ? null : match.receiver;
        return new H.JsNoSuchMethodError(_message, t2, t1);
      }}
  },
  UnknownJsTypeError: {
    "": "Error;_message",
    toString$0: [function(_) {
      var t1 = this._message;
      return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
    }, "call$0", "get$toString", 0, 0, null]
  },
  unwrapException_saveStackTrace: {
    "": "Closure:130;ex_0",
    call$1: [function(error) {
      var t1 = J.getInterceptor(error);
      if (typeof error === "object" && error !== null && !!t1.$isError)
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex_0;
      return error;
    }, "call$1", null, 2, 0, null, 87, "call"],
    $isFunction: true
  },
  _StackTrace: {
    "": "Object;_exception,_trace",
    toString$0: [function(_) {
      var t1, trace;
      t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = typeof t1 === "object" ? t1.stack : null;
      t1 = trace == null ? "" : trace;
      this._trace = t1;
      return t1;
    }, "call$0", "get$toString", 0, 0, null]
  },
  invokeClosure_closure: {
    "": "Closure:172;closure_0",
    call$0: [function() {
      return this.closure_0.call$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  invokeClosure_closure0: {
    "": "Closure:172;closure_1,arg1_2",
    call$0: [function() {
      return this.closure_1.call$1(this.arg1_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  invokeClosure_closure1: {
    "": "Closure:172;closure_3,arg1_4,arg2_5",
    call$0: [function() {
      return this.closure_3.call$2(this.arg1_4, this.arg2_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  invokeClosure_closure2: {
    "": "Closure:172;closure_6,arg1_7,arg2_8,arg3_9",
    call$0: [function() {
      return this.closure_6.call$3(this.arg1_7, this.arg2_8, this.arg3_9);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  invokeClosure_closure3: {
    "": "Closure:172;closure_10,arg1_11,arg2_12,arg3_13,arg4_14",
    call$0: [function() {
      return this.closure_10.call$4(this.arg1_11, this.arg2_12, this.arg3_13, this.arg4_14);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Closure: {
    "": "Object;",
    toString$0: [function(_) {
      return "Closure";
    }, "call$0", "get$toString", 0, 0, null],
    $isFunction: true
  },
  TearOffClosure: {
    "": "Closure;"
  },
  BoundClosure: {
    "": "TearOffClosure;_self<,__js_helper$_target,_receiver<,__js_helper$_name",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isBoundClosure)
        return false;
      return this._self === other._self && this.__js_helper$_target === other.__js_helper$_target && this._receiver === other._receiver;
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      var t1, receiverHashCode;
      t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return (receiverHashCode ^ H.Primitives_objectHashCode(this.__js_helper$_target)) >>> 0;
    },
    $isBoundClosure: true,
    static: {"": "BoundClosure_selfFieldNameCache,BoundClosure_receiverFieldNameCache", BoundClosure_selfOf: [function(closure) {
        return closure.get$_self();
      }, "call$1", "BoundClosure_selfOf$closure", 2, 0, null, 28], BoundClosure_receiverOf: [function(closure) {
        return closure.get$_receiver();
      }, "call$1", "BoundClosure_receiverOf$closure", 2, 0, null, 28], BoundClosure_selfFieldName: [function() {
        var t1 = $.BoundClosure_selfFieldNameCache;
        if (t1 == null) {
          t1 = H.BoundClosure_computeFieldNamed("self");
          $.BoundClosure_selfFieldNameCache = t1;
        }
        return t1;
      }, "call$0", "BoundClosure_selfFieldName$closure", 0, 0, null], BoundClosure_receiverFieldName: [function() {
        var t1 = $.BoundClosure_receiverFieldNameCache;
        if (t1 == null) {
          t1 = H.BoundClosure_computeFieldNamed("receiver");
          $.BoundClosure_receiverFieldNameCache = t1;
        }
        return t1;
      }, "call$0", "BoundClosure_receiverFieldName$closure", 0, 0, null], BoundClosure_computeFieldNamed: [function(fieldName) {
        var template, t1, names, i, $name;
        template = new H.BoundClosure("self", "target", "receiver", "name");
        t1 = Object.getOwnPropertyNames(template);
        t1.fixed$length = init;
        names = t1;
        for (t1 = names.length, i = 0; i < t1; ++i) {
          $name = names[i];
          if (template[$name] === fieldName)
            return $name;
        }
      }, "call$1", "BoundClosure_computeFieldNamed$closure", 2, 0, null, 42]}
  },
  CastErrorImplementation: {
    "": "Error;message",
    toString$0: [function(_) {
      return this.message;
    }, "call$0", "get$toString", 0, 0, null],
    $isError: true,
    static: {CastErrorImplementation$: function(actualType, expectedType) {
        return new H.CastErrorImplementation("CastError: Casting value of type " + actualType + " to incompatible type " + H.S(expectedType));
      }}
  },
  RuntimeError: {
    "": "Error;message",
    toString$0: [function(_) {
      return "RuntimeError: " + H.S(this.message);
    }, "call$0", "get$toString", 0, 0, null],
    static: {RuntimeError$: function(message) {
        return new H.RuntimeError(message);
      }}
  },
  RuntimeType: {
    "": "Object;"
  },
  RuntimeFunctionType: {
    "": "RuntimeType;returnType,parameterTypes,optionalParameterTypes,namedParameters",
    _isTest$1: [function(expression) {
      var functionTypeObject = this._extractFunctionTypeObjectFrom$1(expression);
      return functionTypeObject == null ? false : H.isFunctionSubtype(functionTypeObject, this.toRti$0());
    }, "call$1", "get$_isTest", 2, 0, null, 25],
    _extractFunctionTypeObjectFrom$1: [function(o) {
      var interceptor = J.getInterceptor(o);
      return "$signature" in interceptor ? interceptor.$signature() : null;
    }, "call$1", "get$_extractFunctionTypeObjectFrom", 2, 0, null, 128],
    toRti$0: [function() {
      var result, t1, t2, namedRti, keys, i, $name;
      result = { "func": "dynafunc" };
      t1 = this.returnType;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isVoidRuntimeType)
        result.void = true;
      else if (typeof t1 !== "object" || t1 === null || !t2.$isDynamicRuntimeType)
        result.ret = t1.toRti$0();
      t1 = this.parameterTypes;
      if (t1 != null && t1.length !== 0)
        result.args = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.optionalParameterTypes;
      if (t1 != null && t1.length !== 0)
        result.opt = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.namedParameters;
      if (t1 != null) {
        namedRti = {};
        keys = H.extractKeys(t1);
        for (t2 = keys.length, i = 0; i < t2; ++i) {
          $name = keys[i];
          namedRti[$name] = t1[$name].toRti$0();
        }
        result.named = namedRti;
      }
      return result;
    }, "call$0", "get$toRti", 0, 0, null],
    toString$0: [function(_) {
      var t1, t2, result, needsComma, i, type, keys, $name;
      t1 = this.parameterTypes;
      if (t1 != null)
        for (t2 = t1.length, result = "(", needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
          type = t1[i];
          if (needsComma)
            result += ", ";
          result += H.S(type);
        }
      else {
        result = "(";
        needsComma = false;
      }
      t1 = this.optionalParameterTypes;
      if (t1 != null && t1.length !== 0) {
        result = (needsComma ? result + ", " : result) + "[";
        for (t2 = t1.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
          type = t1[i];
          if (needsComma)
            result += ", ";
          result += H.S(type);
        }
        result += "]";
      } else {
        t1 = this.namedParameters;
        if (t1 != null) {
          result = (needsComma ? result + ", " : result) + "{";
          keys = H.extractKeys(t1);
          for (t2 = keys.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            $name = keys[i];
            if (needsComma)
              result += ", ";
            result += H.S(t1[$name].toRti$0()) + " " + $name;
          }
          result += "}";
        }
      }
      return result + (") -> " + H.S(this.returnType));
    }, "call$0", "get$toString", 0, 0, null],
    static: {"": "RuntimeFunctionType_inAssert", RuntimeFunctionType_listToRti: [function(list) {
        var result, t1, i;
        list = list;
        result = [];
        for (t1 = list.length, i = 0; i < t1; ++i)
          result.push(list[i].toRti$0());
        return result;
      }, "call$1", "RuntimeFunctionType_listToRti$closure", 2, 0, null, 45]}
  },
  DynamicRuntimeType: {
    "": "RuntimeType;",
    toString$0: [function(_) {
      return "dynamic";
    }, "call$0", "get$toString", 0, 0, null],
    toRti$0: [function() {
      return;
    }, "call$0", "get$toRti", 0, 0, null],
    $isDynamicRuntimeType: true
  },
  TypeImpl: {
    "": "Object;_typeName,_unmangledName",
    toString$0: [function(_) {
      var t1, unmangledName, unmangledName0;
      t1 = this._unmangledName;
      if (t1 != null)
        return t1;
      unmangledName = this._typeName;
      unmangledName0 = init.mangledGlobalNames[unmangledName];
      unmangledName = unmangledName0 == null ? unmangledName : unmangledName0;
      this._unmangledName = unmangledName;
      return unmangledName;
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(_) {
      return J.get$hashCode$(this._typeName);
    },
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isTypeImpl && J.$eq(this._typeName, other._typeName);
    }, "call$1", "get$==", 2, 0, null, 160],
    $isTypeImpl: true
  },
  initHooks_closure: {
    "": "Closure:130;getTag_0",
    call$1: [function(o) {
      return this.getTag_0(o);
    }, "call$1", null, 2, 0, null, 128, "call"],
    $isFunction: true
  },
  initHooks_closure0: {
    "": "Closure:186;getUnknownTag_1",
    call$2: [function(o, tag) {
      return this.getUnknownTag_1(o, tag);
    }, "call$2", null, 4, 0, null, 128, 66, "call"],
    $isFunction: true
  },
  initHooks_closure1: {
    "": "Closure:187;prototypeForTag_2",
    call$1: [function(tag) {
      return this.prototypeForTag_2(tag);
    }, "call$1", null, 2, 0, null, 66, "call"],
    $isFunction: true
  }
}],
["canvas", "../game/canvas/canvas.dart", , D, {
  "": "",
  AdjustedContext: {
    "": "Object;context,yAdjust,xAdjust",
    rect$4: [function(_, x, y, width, height) {
      var t1, t2, t3, t4;
      t1 = this.context;
      t2 = $.Camera_instance;
      t3 = t2.x;
      t4 = t2.screenRatio;
      J.rect$4$x(t1, (x - t3) * t4 + this.xAdjust, (y - t2.y) * t4 + this.yAdjust, width * t4, height * t4);
    }, "call$4", "get$rect", 8, 0, null, 12, 138, 139, 140],
    lineTo$2: [function(_, x, y) {
      var t1, t2, t3, t4;
      t1 = this.context;
      t2 = $.Camera_instance;
      t3 = t2.x;
      t4 = t2.screenRatio;
      J.lineTo$2$x(t1, (x - t3) * t4 + this.xAdjust, (y - t2.y) * t4 + this.yAdjust);
    }, "call$2", "get$lineTo", 4, 0, null, 12, 138],
    drawImageScaledFromSource$9: [function(_, source, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight) {
      var t1, t2, t3, t4;
      t1 = this.context;
      t2 = $.Camera_instance;
      t3 = t2.x;
      t4 = t2.screenRatio;
      J.drawImageScaledFromSource$9$x(t1, source, sourceX, sourceY, sourceWidth, sourceHeight, (destX - t3) * t4 + this.xAdjust, (destY - t2.y) * t4 + this.yAdjust, destWidth * t4, destHeight * t4);
    }, "call$9", "get$drawImageScaledFromSource", 18, 0, null, 90, 144, 145, 146, 147, 148, 149, 150, 151],
    AdjustedContext$3: function(viewportWidth, viewportHeight, screenRatio) {
      var t1 = 1 - screenRatio;
      this.yAdjust = viewportHeight * t1;
      this.xAdjust = viewportWidth * t1 * 0.3;
    }
  },
  Camera: {
    "": "Object;x>,y*,screenRatio",
    static: {"": "Camera_instance"}
  }
}],
["chrome.app", "package:chrome/gen/app.dart", , B, {
  "": "",
  _createLaunchData: [function(jsProxy) {
    return jsProxy == null ? null : new B.LaunchData(jsProxy);
  }, "call$1", "_createLaunchData$closure", 2, 0, 70, 71],
  ChromeApp: {
    "": "Object;runtime,window"
  },
  ChromeAppRuntime: {
    "": "ChromeApi;_onLaunched,_onRestarted",
    static: {"": "ChromeAppRuntime__app_runtime"}
  },
  LaunchData: {
    "": "ChromeObject;jsProxy"
  },
  ChromeAppWindow: {
    "": "ChromeApi;_onBoundsChanged,_onClosed,_onFullscreened,_onMaximized,_onMinimized,_onRestored",
    _throwNotAvailable$0: [function() {
      throw H.wrapException(P.UnsupportedError$("'chrome.app.window' is not available"));
    }, "call$0", "get$_throwNotAvailable", 0, 0, null],
    static: {"": "ChromeAppWindow__app_window"}
  },
  AppWindow: {
    "": "ChromeObject;jsProxy"
  }
}],
["chrome.src.common", "package:chrome/src/common.dart", , F, {
  "": "",
  ChromeStreamController: {
    "": "Object;_api,_eventName,_controller,_handlerAdded,_listener",
    _ensureHandlerAdded$0: [function() {
      if (!this._handlerAdded) {
        J.$index$asx(this._api, this._eventName).callMethod$2("addListener", [this._listener]);
        this._handlerAdded = true;
      }
    }, "call$0", "get$_ensureHandlerAdded", 0, 0, 92],
    _removeHandler$0: [function() {
      if (this._handlerAdded) {
        J.$index$asx(this._api, this._eventName).callMethod$2("removeListener", [this._listener]);
        this._handlerAdded = false;
      }
    }, "call$0", "get$_removeHandler", 0, 0, 92],
    ChromeStreamController$oneArg$4: function(_api, _eventName, transformer, returnVal, $T) {
      var t1 = this.get$_ensureHandlerAdded();
      this._controller = P.StreamController_StreamController$broadcast(this.get$_removeHandler(), t1, false, $T);
      this._listener = new F.ChromeStreamController$oneArg_closure(this, transformer, returnVal);
    },
    ChromeStreamController$noArgs$2: function(_api, _eventName, $T) {
      var t1 = this.get$_ensureHandlerAdded();
      this._controller = P.StreamController_StreamController$broadcast(this.get$_removeHandler(), t1, false, $T);
      this._listener = new F.ChromeStreamController$noArgs_closure(this);
    },
    static: {ChromeStreamController$noArgs: function(_api, _eventName, $T) {
        var t1 = H.setRuntimeTypeInfo(new F.ChromeStreamController(_api, _eventName, P.StreamController_StreamController$broadcast(null, null, false, $T), false, null), [$T]);
        t1.ChromeStreamController$noArgs$2(_api, _eventName, $T);
        return t1;
      }, ChromeStreamController$oneArg: function(_api, _eventName, transformer, returnVal, $T) {
        var t1 = H.setRuntimeTypeInfo(new F.ChromeStreamController(_api, _eventName, P.StreamController_StreamController$broadcast(null, null, false, $T), false, null), [$T]);
        t1.ChromeStreamController$oneArg$4(_api, _eventName, transformer, returnVal, $T);
        return t1;
      }}
  },
  ChromeStreamController$noArgs_closure: {
    "": "Closure:172;this_0",
    call$0: [function() {
      var t1 = this.this_0._controller;
      if (t1._state >= 4)
        H.throwExpression(t1._addEventError$0());
      t1._sendData$1(null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  ChromeStreamController$oneArg_closure: {
    "": "Closure:188;this_0,transformer_1,returnVal_2",
    call$1: [function(arg1) {
      var t1, t2;
      t1 = this.this_0._controller;
      t2 = this.transformer_1.call$1(arg1);
      if (t1._state >= 4)
        H.throwExpression(t1._addEventError$0());
      t1._sendData$1(t2);
      return this.returnVal_2;
    }, function() {
      return this.call$1(null);
    }, "call$0", "call$1", null, null, 0, 2, null, 52, 30, "call"],
    $isFunction: true
  }
}],
["chrome.src.common_exp", "package:chrome/src/common_exp.dart", , Z, {
  "": "",
  ChromeObject: {
    "": "Object;",
    toString$0: [function(_) {
      return J.toString$0(this.jsProxy);
    }, "call$0", "get$toString", 0, 0, null]
  },
  ChromeApi: {
    "": "Object;"
  }
}],
["dart._collection.dev", "dart:_collection-dev", , H, {
  "": "",
  IterableMixinWorkaround_forEach: [function(iterable, f) {
    var t1;
    for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
      f.call$1(t1._current);
  }, "call$2", "IterableMixinWorkaround_forEach$closure", 4, 0, null, 72, 73],
  IterableMixinWorkaround_toStringIterable: [function(iterable, leftDelimiter, rightDelimiter) {
    var result, i, t1;
    for (i = 0; t1 = $.get$IterableMixinWorkaround__toStringList(), i < t1.length; ++i)
      if (t1[i] === iterable)
        return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
    result = P.StringBuffer$("");
    try {
      $.get$IterableMixinWorkaround__toStringList().push(iterable);
      result.write$1(leftDelimiter);
      result.writeAll$2(iterable, ", ");
      result.write$1(rightDelimiter);
    } finally {
      t1 = $.get$IterableMixinWorkaround__toStringList();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
    }
    return result.get$_contents();
  }, "call$3", "IterableMixinWorkaround_toStringIterable$closure", 6, 0, null, 72, 74, 75],
  IterableMixinWorkaround_setRangeList: [function(list, start, end, from, skipCount) {
    var $length;
    if (start < 0 || start > list.length)
      H.throwExpression(P.RangeError$range(start, 0, list.length));
    if (end < start || end > list.length)
      H.throwExpression(P.RangeError$range(end, start, list.length));
    $length = end - start;
    if ($length === 0)
      return;
    if (skipCount < 0)
      throw H.wrapException(new P.ArgumentError(skipCount));
    if (skipCount + $length > from.length)
      throw H.wrapException(P.StateError$("Not enough elements"));
    H.Lists_copy(from, skipCount, list, start, $length);
  }, "call$5", "IterableMixinWorkaround_setRangeList$closure", 10, 0, null, 45, 76, 77, 78, 79],
  Lists_copy: [function(src, srcStart, dst, dstStart, count) {
    var i, j, t1, t2;
    if (srcStart < dstStart)
      for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length; i >= srcStart; --i, --j) {
        if (i < 0 || i >= t1)
          return H.ioore(src, i);
        C.JSArray_methods.$indexSet(dst, j, src[i]);
      }
    else
      for (t1 = srcStart + count, t2 = src.length, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
        if (i < 0 || i >= t2)
          return H.ioore(src, i);
        C.JSArray_methods.$indexSet(dst, j, src[i]);
      }
  }, "call$5", "Lists_copy$closure", 10, 0, null, 80, 81, 82, 83, 84],
  ListIterable: {
    "": "IterableBase;",
    get$iterator: function(_) {
      return new H.ListIterator(this, this.get$length(this), 0, null);
    },
    forEach$1: [function(_, action) {
      var $length, i;
      $length = this.get$length(this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(this.elementAt$1(this, i));
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    }, "call$1", "get$forEach", 2, 0, null, 189],
    map$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(this, f), [null, null]);
    }, "call$1", "get$map", 2, 0, null, 73],
    $asIterableBase: null,
    $isEfficientLength: true
  },
  ListIterator: {
    "": "Object;_iterable,_length,_index,_current",
    get$current: function() {
      return this._current;
    },
    moveNext$0: [function() {
      var t1, t2, $length, t3;
      t1 = this._iterable;
      t2 = J.getInterceptor$asx(t1);
      $length = t2.get$length(t1);
      if (!J.$eq(this._length, $length))
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = this._index;
      if (typeof $length !== "number")
        return H.iae($length);
      if (t3 >= $length) {
        this._current = null;
        return false;
      }
      this._current = t2.elementAt$1(t1, t3);
      this._index = this._index + 1;
      return true;
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  MappedIterable: {
    "": "IterableBase;_iterable,_f",
    get$iterator: function(_) {
      var t1 = this._iterable;
      t1 = new H.MappedIterator(null, t1.get$iterator(t1), this._f);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    get$length: function(_) {
      var t1 = this._iterable;
      return t1.get$length(t1);
    },
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    static: {MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
        if (!!iterable.$isEfficientLength)
          return H.setRuntimeTypeInfo(new H.EfficientLengthMappedIterable(iterable, $function), [$S, $T]);
        return H.setRuntimeTypeInfo(new H.MappedIterable(iterable, $function), [$S, $T]);
      }}
  },
  EfficientLengthMappedIterable: {
    "": "MappedIterable;_iterable,_f",
    $asMappedIterable: null,
    $isEfficientLength: true
  },
  MappedIterator: {
    "": "Iterator;_current,_iterator,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: [function() {
      var t1 = this._iterator;
      if (t1.moveNext$0()) {
        this._current = this._f$1(t1.get$current());
        return true;
      }
      this._current = null;
      return false;
    }, "call$0", "get$moveNext", 0, 0, null],
    get$current: function() {
      return this._current;
    },
    $asIterator: function($S, $T) {
      return [$T];
    }
  },
  MappedListIterable: {
    "": "ListIterable;_dev$_source,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    get$length: function(_) {
      return J.get$length$asx(this._dev$_source);
    },
    elementAt$1: [function(_, index) {
      return this._f$1(J.elementAt$1$ax(this._dev$_source, index));
    }, "call$1", "get$elementAt", 2, 0, null, 23],
    $asListIterable: function($S, $T) {
      return [$T];
    },
    $isEfficientLength: true
  },
  FixedLengthListMixin: {
    "": "Object;"
  },
  Symbol0: {
    "": "Object;_name<",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isSymbol0 && J.$eq(this._name, other._name);
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      return 536870911 & 664597 * J.get$hashCode$(this._name);
    },
    toString$0: [function(_) {
      return "Symbol(\"" + H.S(this._name) + "\")";
    }, "call$0", "get$toString", 0, 0, null],
    $isSymbol0: true,
    static: {"": "Symbol_validationPattern"}
  }
}],
["dart._js_names", "dart:_js_names", , H, {
  "": "",
  extractKeys: [function(victim) {
    var t1 = H.setRuntimeTypeInfo((function(victim, hasOwnProperty) {
  var result = [];
  for (var key in victim) {
    if (hasOwnProperty.call(victim, key)) result.push(key);
  }
  return result;
})(victim, Object.prototype.hasOwnProperty), [null]);
    t1.fixed$length = init;
    return t1;
  }, "call$1", "extractKeys$closure", 2, 0, null, 85]
}],
["dart.async", "dart:async", , P, {
  "": "",
  _invokeErrorHandler: [function(errorHandler, error, stackTrace) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    if (t1)
      return errorHandler.call$2(error, stackTrace);
    else
      return errorHandler.call$1(error);
  }, "call$3", "_invokeErrorHandler$closure", 6, 0, null, 86, 87, 88],
  _registerErrorHandler: [function(errorHandler, zone) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    zone.toString;
    if (t1)
      return errorHandler;
    else
      return errorHandler;
  }, "call$2", "_registerErrorHandler$closure", 4, 0, null, 86, 89],
  _asyncRunCallback: [function() {
    var callback, t1, exception, milliseconds;
    for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
      callback = t1.removeFirst$0();
      try {
        callback.call$0();
      } catch (exception) {
        H.unwrapException(exception);
        milliseconds = C.JSInt_methods._tdivFast$1(C.Duration_0._duration, 1000);
        H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, P._asyncRunCallback$closure());
        throw exception;
      }

    }
    $._callbacksAreEnqueued = false;
  }, "call$0", "_asyncRunCallback$closure", 0, 0, 92],
  _scheduleAsyncCallback: [function(callback) {
    $.get$_asyncCallbacks()._add$1(callback);
    if (!$._callbacksAreEnqueued) {
      P._createTimer(C.Duration_0, P._asyncRunCallback$closure());
      $._callbacksAreEnqueued = true;
    }
  }, "call$1", "_scheduleAsyncCallback$closure", 2, 0, null, 93],
  scheduleMicrotask: [function(callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone) {
      t1.toString;
      P._rootScheduleMicrotask(t1, null, t1, callback);
      return;
    }
    P._rootScheduleMicrotask(t1, null, t1, t1.bindCallback$2$runGuarded(callback, true));
  }, "call$1", "scheduleMicrotask$closure", 2, 0, null, 93],
  StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
    return sync ? H.setRuntimeTypeInfo(new P._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null), [$T]) : H.setRuntimeTypeInfo(new P._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null), [$T]);
  },
  StreamController_StreamController$broadcast: function(onCancel, onListen, sync, $T) {
    var t1;
    if (sync) {
      t1 = H.setRuntimeTypeInfo(new P._SyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
      t1._async$_previous = t1;
      t1._async$_next = t1;
    } else {
      t1 = H.setRuntimeTypeInfo(new P._AsyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
      t1._async$_previous = t1;
      t1._async$_next = t1;
    }
    return t1;
  },
  _runGuarded: [function(notificationHandler) {
    var result, e, s, t1, t2, exception;
    if (notificationHandler == null)
      return;
    try {
      result = notificationHandler.call$0();
      t1 = result;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isFuture)
        return result;
      return;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      t1 = $.Zone__current;
      t1.toString;
      P._rootHandleUncaughtError(t1, null, t1, e, s);
    }

  }, "call$1", "_runGuarded$closure", 2, 0, null, 94],
  _nullDataHandler: [function(value) {
  }, "call$1", "_nullDataHandler$closure", 2, 0, 95, 14],
  _nullErrorHandler: [function(error, stackTrace) {
    var t1 = $.Zone__current;
    t1.toString;
    P._rootHandleUncaughtError(t1, null, t1, error, stackTrace);
  }, function(error) {
    return P._nullErrorHandler(error, null);
  }, null, "call$2", "call$1", "_nullErrorHandler$closure", 2, 2, 96, 52, 87, 88],
  _nullDoneHandler: [function() {
    return;
  }, "call$0", "_nullDoneHandler$closure", 0, 0, 92],
  _runUserCode: [function(userCode, onSuccess, onError) {
    var e, s, exception, t1;
    try {
      onSuccess.call$1(userCode.call$0());
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      onError.call$2(e, s);
    }

  }, "call$3", "_runUserCode$closure", 6, 0, null, 97, 98, 99],
  _cancelAndError: [function(subscription, future, error, stackTrace) {
    var cancelFuture, t1;
    cancelFuture = subscription.cancel$0();
    t1 = J.getInterceptor(cancelFuture);
    if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
      cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
    else
      future._completeError$2(error, stackTrace);
  }, "call$4", "_cancelAndError$closure", 8, 0, null, 100, 101, 87, 88],
  _cancelAndErrorClosure: [function(subscription, future) {
    return new P._cancelAndErrorClosure_closure(subscription, future);
  }, "call$2", "_cancelAndErrorClosure$closure", 4, 0, null, 100, 101],
  Timer_Timer: function(duration, callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone) {
      t1.toString;
      return P._rootCreateTimer(t1, null, t1, duration, callback);
    }
    return P._rootCreateTimer(t1, null, t1, duration, t1.bindCallback$2$runGuarded(callback, true));
  },
  _createTimer: [function(duration, callback) {
    var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
    return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
  }, "call$2", "_createTimer$closure", 4, 0, null, 102, 93],
  _rootHandleUncaughtError: [function($self, $parent, zone, error, stackTrace) {
    P._rootRun($self, null, $self, new P._rootHandleUncaughtError_closure(error, stackTrace));
  }, "call$5", "_rootHandleUncaughtError$closure", 10, 0, null, 103, 104, 89, 87, 88],
  _rootRun: [function($self, $parent, zone, f) {
    var old, t1, t2;
    t1 = $.Zone__current;
    t2 = zone;
    if (t1 == null ? t2 == null : t1 === t2)
      return f.call$0();
    old = t1;
    try {
      $.Zone__current = zone;
      t1 = f.call$0();
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$4", "_rootRun$closure", 8, 0, null, 103, 104, 89, 73],
  _rootRunUnary: [function($self, $parent, zone, f, arg) {
    var old, t1, t2;
    t1 = $.Zone__current;
    t2 = zone;
    if (t1 == null ? t2 == null : t1 === t2)
      return f.call$1(arg);
    old = t1;
    try {
      $.Zone__current = zone;
      t1 = f.call$1(arg);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$5", "_rootRunUnary$closure", 10, 0, null, 103, 104, 89, 73, 105],
  _rootRunBinary: [function($self, $parent, zone, f, arg1, arg2) {
    var old, t1, t2;
    t1 = $.Zone__current;
    t2 = zone;
    if (t1 == null ? t2 == null : t1 === t2)
      return f.call$2(arg1, arg2);
    old = t1;
    try {
      $.Zone__current = zone;
      t1 = f.call$2(arg1, arg2);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$6", "_rootRunBinary$closure", 12, 0, null, 103, 104, 89, 73, 30, 31],
  _rootScheduleMicrotask: [function($self, $parent, zone, f) {
    P._scheduleAsyncCallback(C.C__RootZone !== zone ? zone.bindCallback$1(f) : f);
  }, "call$4", "_rootScheduleMicrotask$closure", 8, 0, null, 103, 104, 89, 73],
  _rootCreateTimer: [function($self, $parent, zone, duration, callback) {
    return P._createTimer(duration, C.C__RootZone !== zone ? zone.bindCallback$1(callback) : callback);
  }, "call$5", "_rootCreateTimer$closure", 10, 0, null, 103, 104, 89, 102, 93],
  _AsyncError: {
    "": "Object;error>,stackTrace<",
    $isError: true
  },
  _BroadcastSubscription: {
    "": "_ControllerSubscription;_eventState@,_async$_next@,_async$_previous@,_async$_controller,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    get$_async$_controller: function() {
      return this._async$_controller;
    },
    _expectsEvent$1: [function(eventId) {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 1) === eventId;
    }, "call$1", "get$_expectsEvent", 2, 0, null, 190],
    _toggleEventId$0: [function() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$xor();
      this._eventState = t1 ^ 1;
    }, "call$0", "get$_toggleEventId", 0, 0, null],
    get$_isFiring: function() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 2) !== 0;
    },
    _setRemoveAfterFiring$0: [function() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$or();
      this._eventState = t1 | 4;
    }, "call$0", "get$_setRemoveAfterFiring", 0, 0, null],
    get$_removeAfterFiring: function() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 4) !== 0;
    },
    _onPause$0: [function() {
      return;
    }, "call$0", "get$_onPause", 0, 0, 92],
    _onResume$0: [function() {
      return;
    }, "call$0", "get$_onResume", 0, 0, 92],
    $as_ControllerSubscription: null,
    static: {"": "_BroadcastSubscription__STATE_EVENT_ID,_BroadcastSubscription__STATE_FIRING,_BroadcastSubscription__STATE_REMOVE_AFTER_FIRING"}
  },
  _BroadcastStreamController: {
    "": "Object;_async$_next@,_async$_previous@",
    _removeListener$1: [function(subscription) {
      var previous, next;
      previous = subscription.get$_async$_previous();
      next = subscription.get$_async$_next();
      previous.set$_async$_next(next);
      next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    }, "call$1", "get$_removeListener", 2, 0, null, 100],
    _subscribe$1: [function(cancelOnError) {
      var t1, t2, subscription;
      if ((this._state & 4) !== 0)
        throw H.wrapException(new P.StateError("Subscribing to closed stream"));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      subscription = new P._BroadcastSubscription(null, null, null, this, null, null, null, t1, t2, null, null);
      subscription.$builtinTypeInfo = this.$builtinTypeInfo;
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
      t2 = this._async$_previous;
      subscription._async$_previous = t2;
      subscription._async$_next = this;
      t2.set$_async$_next(subscription);
      this._async$_previous = subscription;
      subscription._eventState = this._state & 1;
      if (this._async$_next === subscription)
        P._runGuarded(this._onListen);
      return subscription;
    }, "call$1", "get$_subscribe", 2, 0, null, 178],
    _recordCancel$1: [function(subscription) {
      if (subscription.get$_async$_next() === subscription)
        return;
      if (subscription.get$_isFiring())
        subscription._setRemoveAfterFiring$0();
      else {
        this._removeListener$1(subscription);
        if ((this._state & 2) === 0 && this._async$_next === this)
          this._callOnCancel$0();
      }
    }, "call$1", "get$_recordCancel", 2, 0, null, 100],
    _recordPause$1: [function(subscription) {
    }, "call$1", "get$_recordPause", 2, 0, null, 100],
    _recordResume$1: [function(subscription) {
    }, "call$1", "get$_recordResume", 2, 0, null, 100],
    _addEventError$0: [function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add new events after calling close");
      return new P.StateError("Cannot add new events while doing an addStream");
    }, "call$0", "get$_addEventError", 0, 0, null],
    _async$_add$1: [function(data) {
      this._sendData$1(data);
    }, "call$1", "get$_async$_add", 2, 0, null, 159],
    _addError$2: [function(error, stackTrace) {
      this._sendError$2(error, stackTrace);
    }, "call$2", "get$_addError", 4, 0, null, 87, 88],
    _forEachListener$1: [function(action) {
      var t1, link, id, link0;
      t1 = this._state;
      if ((t1 & 2) !== 0)
        throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
      link = this._async$_next;
      if (link === this)
        return;
      id = t1 & 1;
      this._state = t1 ^ 3;
      for (; link !== this;)
        if (link._expectsEvent$1(id)) {
          t1 = link.get$_eventState();
          if (typeof t1 !== "number")
            return t1.$or();
          link.set$_eventState(t1 | 2);
          action.call$1(link);
          link._toggleEventId$0();
          link0 = link.get$_async$_next();
          if (link.get$_removeAfterFiring())
            this._removeListener$1(link);
          t1 = link.get$_eventState();
          if (typeof t1 !== "number")
            return t1.$and();
          link.set$_eventState(t1 & 4294967293);
          link = link0;
        } else
          link = link.get$_async$_next();
      this._state = this._state & 4294967293;
      if (this._async$_next === this)
        this._callOnCancel$0();
    }, "call$1", "get$_forEachListener", 2, 0, null, 189],
    _callOnCancel$0: [function() {
      if ((this._state & 4) !== 0 && this._doneFuture._state === 0)
        this._doneFuture._asyncComplete$1(null);
      P._runGuarded(this._onCancel);
    }, "call$0", "get$_callOnCancel", 0, 0, null]
  },
  _SyncBroadcastStreamController: {
    "": "_BroadcastStreamController;_onListen,_onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
    _sendData$1: [function(data) {
      var t1 = this._async$_next;
      if (t1 === this)
        return;
      if (t1.get$_async$_next() === this) {
        this._state = this._state | 2;
        this._async$_next._async$_add$1(data);
        this._state = this._state & 4294967293;
        if (this._async$_next === this)
          this._callOnCancel$0();
        return;
      }
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(this, data));
    }, "call$1", "get$_sendData", 2, 0, null, 159],
    _sendError$2: [function(error, stackTrace) {
      if (this._async$_next === this)
        return;
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
    }, "call$2", "get$_sendError", 4, 0, null, 87, 88],
    $as_BroadcastStreamController: null
  },
  _SyncBroadcastStreamController__sendData_closure: {
    "": "Closure;this_0,data_1",
    call$1: [function(subscription) {
      subscription._async$_add$1(this.data_1);
    }, "call$1", null, 2, 0, null, 100, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  _SyncBroadcastStreamController__sendError_closure: {
    "": "Closure;this_0,error_1,stackTrace_2",
    call$1: [function(subscription) {
      subscription._addError$2(this.error_1, this.stackTrace_2);
    }, "call$1", null, 2, 0, null, 100, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  _AsyncBroadcastStreamController: {
    "": "_BroadcastStreamController;_onListen,_onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
    _sendData$1: [function(data) {
      var link;
      for (link = this._async$_next; link !== this; link = link.get$_async$_next())
        link._addPending$1(new P._DelayedData(data, null));
    }, "call$1", "get$_sendData", 2, 0, null, 159],
    _sendError$2: [function(error, stackTrace) {
      var link;
      for (link = this._async$_next; link !== this; link = link.get$_async$_next())
        link._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2", "get$_sendError", 4, 0, null, 87, 88],
    $as_BroadcastStreamController: null
  },
  Future: {
    "": "Object;",
    $isFuture: true
  },
  _Completer: {
    "": "Object;"
  },
  _AsyncCompleter: {
    "": "_Completer;future",
    completeError$2: [function(error, stackTrace) {
      var t1;
      if (error == null)
        throw H.wrapException(new P.ArgumentError("Error must not be null"));
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._asyncCompleteError$2(error, stackTrace);
    }, function(error) {
      return this.completeError$2(error, null);
    }, "completeError$1", "call$2", "call$1", "get$completeError", 2, 2, 191, 52, 87, 88],
    $as_Completer: null
  },
  _Future: {
    "": "Object;_state,_zone<,_resultOrListeners,_nextListener@,_onValueCallback,_errorTestCallback,_onErrorCallback,_whenCompleteActionCallback",
    get$_isComplete: function() {
      return this._state >= 4;
    },
    get$_hasError: function() {
      return this._state === 8;
    },
    set$_isChained: function(value) {
      if (value)
        this._state = 2;
      else
        this._state = 0;
    },
    get$_onValue: function() {
      return this._state === 2 ? null : this._onValueCallback;
    },
    _onValue$1: function(arg0) {
      return this.get$_onValue().call$1(arg0);
    },
    get$_errorTest: function() {
      return this._state === 2 ? null : this._errorTestCallback;
    },
    get$_onError: function() {
      return this._state === 2 ? null : this._onErrorCallback;
    },
    get$_whenCompleteAction: function() {
      return this._state === 2 ? null : this._whenCompleteActionCallback;
    },
    _whenCompleteAction$0: function() {
      return this.get$_whenCompleteAction().call$0();
    },
    then$2$onError: [function(f, onError) {
      var t1, result;
      t1 = $.Zone__current;
      t1.toString;
      result = H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, f, null, P._registerErrorHandler(onError, t1), null), [null]);
      this._addListener$1(result);
      return result;
    }, function(f) {
      return this.then$2$onError(f, null);
    }, "then$1", "call$2$onError", null, "get$then", 2, 3, null, 52, 73, 99],
    whenComplete$1: [function(action) {
      var t1, result;
      t1 = $.Zone__current;
      t1.toString;
      result = new P._Future(0, t1, null, null, null, null, null, action);
      result.$builtinTypeInfo = this.$builtinTypeInfo;
      this._addListener$1(result);
      return result;
    }, "call$1", "get$whenComplete", 2, 0, null, 189],
    get$_async$_value: function() {
      return this._resultOrListeners;
    },
    get$_error: function() {
      return this._resultOrListeners;
    },
    _setValue$1: [function(value) {
      this._state = 4;
      this._resultOrListeners = value;
    }, "call$1", "get$_setValue", 2, 0, null, 14],
    _setError$2: [function(error, stackTrace) {
      this._state = 8;
      this._resultOrListeners = new P._AsyncError(error, stackTrace);
    }, "call$2", "get$_setError", 4, 0, null, 87, 88],
    _addListener$1: [function(listener) {
      var t1;
      if (this._state >= 4) {
        t1 = this._zone;
        t1.toString;
        P._rootScheduleMicrotask(t1, null, t1, new P._Future__addListener_closure(this, listener));
      } else {
        listener.set$_nextListener(this._resultOrListeners);
        this._resultOrListeners = listener;
      }
    }, "call$1", "get$_addListener", 2, 0, null, 154],
    _removeListeners$0: [function() {
      var current, prev, next;
      current = this._resultOrListeners;
      this._resultOrListeners = null;
      for (prev = null; current != null; prev = current, current = next) {
        next = current.get$_nextListener();
        current.set$_nextListener(prev);
      }
      return prev;
    }, "call$0", "get$_removeListeners", 0, 0, null],
    _complete$1: [function(value) {
      var t1, listeners;
      t1 = J.getInterceptor(value);
      if (typeof value === "object" && value !== null && !!t1.$isFuture) {
        P._Future__chainFutures(value, this);
        return;
      }
      listeners = this._removeListeners$0();
      this._setValue$1(value);
      P._Future__propagateToListeners(this, listeners);
    }, "call$1", "get$_complete", 2, 0, null, 14],
    _completeError$2: [function(error, stackTrace) {
      var listeners = this._removeListeners$0();
      this._setError$2(error, stackTrace);
      P._Future__propagateToListeners(this, listeners);
    }, function(error) {
      return this._completeError$2(error, null);
    }, "_completeError$1", "call$2", "call$1", "get$_completeError", 2, 2, 96, 52, 87, 88],
    _asyncComplete$1: [function(value) {
      var t1, t2;
      t1 = J.getInterceptor(value);
      t2 = typeof value === "object" && value !== null && !!t1.$isFuture;
      if (t2)
        ;
      if (t2)
        t1 = typeof value !== "object" || value === null || !t1.$is_Future || value._state < 4;
      else
        t1 = false;
      if (t1) {
        this._complete$1(value);
        return;
      }
      if (this._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      this._state = 1;
      t1 = this._zone;
      t1.toString;
      P._rootScheduleMicrotask(t1, null, t1, new P._Future__asyncComplete_closure(this, value));
    }, "call$1", "get$_asyncComplete", 2, 0, null, 14],
    _asyncCompleteError$2: [function(error, stackTrace) {
      var t1;
      if (this._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      this._state = 1;
      t1 = this._zone;
      t1.toString;
      P._rootScheduleMicrotask(t1, null, t1, new P._Future__asyncCompleteError_closure(this, error, stackTrace));
    }, "call$2", "get$_asyncCompleteError", 4, 0, null, 87, 88],
    $is_Future: true,
    $isFuture: true,
    static: {"": "_Future__INCOMPLETE,_Future__PENDING_COMPLETE,_Future__CHAINED,_Future__VALUE,_Future__ERROR", _Future$: function($T) {
        return H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [$T]);
      }, _Future__chainFutures: [function(source, target) {
        var t1;
        target.set$_isChained(true);
        t1 = J.getInterceptor(source);
        if (typeof source === "object" && source !== null && !!t1.$is_Future)
          if (source._state >= 4)
            P._Future__propagateToListeners(source, target);
          else
            source._addListener$1(target);
        else
          source.then$2$onError(new P._Future__chainFutures_closure(target), new P._Future__chainFutures_closure0(target));
      }, "call$2", "_Future__chainFutures$closure", 4, 0, null, 90, 49], _Future__propagateMultipleListeners: [function(source, listeners) {
        var listeners0;
        do {
          listeners0 = listeners.get$_nextListener();
          listeners.set$_nextListener(null);
          P._Future__propagateToListeners(source, listeners);
          if (listeners0 != null) {
            listeners = listeners0;
            continue;
          } else
            break;
        } while (true);
      }, "call$2", "_Future__propagateMultipleListeners$closure", 4, 0, null, 90, 91], _Future__propagateToListeners: [function(source, listeners) {
        var t1, t2, t3, hasError, asyncError, t4, t5, chainSource, listeners0;
        t1 = {};
        t1.source_4 = source;
        for (t2 = source; true;) {
          t3 = {};
          if (!t2.get$_isComplete())
            return;
          hasError = t1.source_4.get$_hasError();
          if (hasError && listeners == null) {
            asyncError = t1.source_4.get$_error();
            t2 = t1.source_4.get$_zone();
            t3 = J.get$error$x(asyncError);
            t4 = asyncError.get$stackTrace();
            t2.toString;
            P._rootHandleUncaughtError(t2, null, t2, t3, t4);
            return;
          }
          if (listeners == null)
            return;
          if (listeners.get$_nextListener() != null) {
            P._Future__propagateMultipleListeners(t1.source_4, listeners);
            return;
          }
          if (hasError) {
            t2 = t1.source_4.get$_zone();
            t4 = listeners.get$_zone();
            t2.toString;
            t4.toString;
            t2 = t4 == null ? t2 != null : t4 !== t2;
          } else
            t2 = false;
          if (t2) {
            asyncError = t1.source_4.get$_error();
            t2 = t1.source_4.get$_zone();
            t3 = J.get$error$x(asyncError);
            t4 = asyncError.get$stackTrace();
            t2.toString;
            P._rootHandleUncaughtError(t2, null, t2, t3, t4);
            return;
          }
          t2 = $.Zone__current;
          t4 = listeners.get$_zone();
          if (t2 == null ? t4 != null : t2 !== t4) {
            t2 = listeners.get$_zone();
            t2.toString;
            P._rootRun(t2, null, t2, new P._Future__propagateToListeners_closure(t1, listeners));
            return;
          }
          t3.listenerHasValue_1 = null;
          t3.listenerValueOrError_2 = null;
          t3.isPropagationAborted_3 = false;
          t2 = listeners.get$_zone();
          t2.toString;
          P._rootRun(t2, null, t2, new P._Future__propagateToListeners_closure0(t1, t3, hasError, listeners));
          if (t3.isPropagationAborted_3)
            return;
          t2 = t3.listenerHasValue_1 === true;
          if (t2) {
            t4 = t3.listenerValueOrError_2;
            t5 = J.getInterceptor(t4);
            t5 = typeof t4 === "object" && t4 !== null && !!t5.$isFuture;
            t4 = t5;
          } else
            t4 = false;
          if (t4) {
            chainSource = t3.listenerValueOrError_2;
            t2 = J.getInterceptor(chainSource);
            if (typeof chainSource === "object" && chainSource !== null && !!t2.$is_Future && chainSource._state >= 4) {
              listeners.set$_isChained(true);
              t1.source_4 = chainSource;
              t2 = chainSource;
              continue;
            }
            P._Future__chainFutures(chainSource, listeners);
            return;
          }
          if (t2) {
            listeners0 = listeners._removeListeners$0();
            listeners._setValue$1(t3.listenerValueOrError_2);
          } else {
            listeners0 = listeners._removeListeners$0();
            asyncError = t3.listenerValueOrError_2;
            listeners._setError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
          }
          t1.source_4 = listeners;
          t2 = listeners;
          listeners = listeners0;
        }
      }, "call$2", "_Future__propagateToListeners$closure", 4, 0, null, 90, 91]}
  },
  _Future__addListener_closure: {
    "": "Closure:172;this_0,listener_1",
    call$0: [function() {
      P._Future__propagateToListeners(this.this_0, this.listener_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__chainFutures_closure: {
    "": "Closure:130;target_0",
    call$1: [function(value) {
      this.target_0._complete$1(value);
    }, "call$1", null, 2, 0, null, 14, "call"],
    $isFunction: true
  },
  _Future__chainFutures_closure0: {
    "": "Closure:192;target_1",
    call$2: [function(error, stackTrace) {
      this.target_1._completeError$2(error, stackTrace);
    }, function(error) {
      return this.call$2(error, null);
    }, "call$1", "call$2", null, null, 2, 2, null, 52, 87, 88, "call"],
    $isFunction: true
  },
  _Future__asyncComplete_closure: {
    "": "Closure:172;this_0,value_1",
    call$0: [function() {
      this.this_0._complete$1(this.value_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__asyncCompleteError_closure: {
    "": "Closure:172;this_0,error_1,stackTrace_2",
    call$0: [function() {
      this.this_0._completeError$2(this.error_1, this.stackTrace_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__propagateToListeners_closure: {
    "": "Closure:172;box_2,listener_3",
    call$0: [function() {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__propagateToListeners_closure0: {
    "": "Closure:172;box_2,box_1,hasError_4,listener_5",
    call$0: [function() {
      var t1, value, asyncError, test, matchesTest, errorCallback, e, s, t2, t3, t4, t5, completeResult, exception;
      t1 = {};
      try {
        t2 = this.box_2;
        if (!this.hasError_4) {
          value = t2.source_4.get$_async$_value();
          t3 = this.listener_5;
          t4 = this.box_1;
          if (t3.get$_onValue() != null) {
            t4.listenerValueOrError_2 = t3._onValue$1(value);
            t4.listenerHasValue_1 = true;
          } else {
            t4.listenerValueOrError_2 = value;
            t4.listenerHasValue_1 = true;
          }
        } else {
          asyncError = t2.source_4.get$_error();
          t3 = this.listener_5;
          test = t3.get$_errorTest();
          matchesTest = true;
          if (test != null)
            matchesTest = test.call$1(J.get$error$x(asyncError));
          t4 = matchesTest === true && t3.get$_onError() != null;
          t5 = this.box_1;
          if (t4) {
            errorCallback = t3.get$_onError();
            t5.listenerValueOrError_2 = P._invokeErrorHandler(errorCallback, J.get$error$x(asyncError), asyncError.get$stackTrace());
            t5.listenerHasValue_1 = true;
          } else {
            t5.listenerValueOrError_2 = asyncError;
            t5.listenerHasValue_1 = false;
          }
          t4 = t5;
        }
        if (t3.get$_whenCompleteAction() != null) {
          completeResult = t3._whenCompleteAction$0();
          t1.completeResult_0 = completeResult;
          t5 = J.getInterceptor(completeResult);
          if (typeof completeResult === "object" && completeResult !== null && !!t5.$isFuture) {
            t3.set$_isChained(true);
            t1.completeResult_0.then$2$onError(new P._Future__propagateToListeners__closure(t2, t3), new P._Future__propagateToListeners__closure0(t1, t3));
            t4.isPropagationAborted_3 = true;
          }
        }
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        if (this.hasError_4) {
          t1 = J.get$error$x(this.box_2.source_4.get$_error());
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = this.box_1;
        if (t1)
          t2.listenerValueOrError_2 = this.box_2.source_4.get$_error();
        else
          t2.listenerValueOrError_2 = new P._AsyncError(e, s);
        t2.listenerHasValue_1 = false;
      }

    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__propagateToListeners__closure: {
    "": "Closure:130;box_2,listener_6",
    call$1: [function(ignored) {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_6);
    }, "call$1", null, 2, 0, null, 193, "call"],
    $isFunction: true
  },
  _Future__propagateToListeners__closure0: {
    "": "Closure:192;box_0,listener_7",
    call$2: [function(error, stackTrace) {
      var t1, t2, t3, completeResult;
      t1 = this.box_0;
      t2 = t1.completeResult_0;
      t3 = J.getInterceptor(t2);
      if (typeof t2 !== "object" || t2 === null || !t3.$is_Future) {
        completeResult = P._Future$(null);
        t1.completeResult_0 = completeResult;
        completeResult._setError$2(error, stackTrace);
      }
      P._Future__propagateToListeners(t1.completeResult_0, this.listener_7);
    }, function(error) {
      return this.call$2(error, null);
    }, "call$1", "call$2", null, null, 2, 2, null, 52, 87, 88, "call"],
    $isFunction: true
  },
  Stream: {
    "": "Object;",
    map$1: [function(_, convert) {
      return H.setRuntimeTypeInfo(new P._MapStream(convert, this), [H.getRuntimeTypeArgument(this, "Stream", 0), null]);
    }, "call$1", "get$map", 2, 0, null, 194],
    forEach$1: [function(_, action) {
      var t1, future;
      t1 = {};
      future = P._Future$(null);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
      return future;
    }, "call$1", "get$forEach", 2, 0, null, 189],
    get$length: function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSInt);
      t1.count_0 = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  },
  Stream_forEach_closure: {
    "": "Closure;box_0,this_1,action_2,future_3",
    call$1: [function(element) {
      P._runUserCode(new P.Stream_forEach__closure(this.action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this.box_0.subscription_0, this.future_3));
    }, "call$1", null, 2, 0, null, 169, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_forEach__closure: {
    "": "Closure:172;action_4,element_5",
    call$0: [function() {
      return this.action_4.call$1(this.element_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_forEach__closure0: {
    "": "Closure:130;",
    call$1: [function(_) {
    }, "call$1", null, 2, 0, null, 195, "call"],
    $isFunction: true
  },
  Stream_forEach_closure0: {
    "": "Closure:172;future_6",
    call$0: [function() {
      this.future_6._complete$1(null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_length_closure: {
    "": "Closure:130;box_0",
    call$1: [function(_) {
      var t1 = this.box_0;
      t1.count_0 = t1.count_0 + 1;
    }, "call$1", null, 2, 0, null, 195, "call"],
    $isFunction: true
  },
  Stream_length_closure0: {
    "": "Closure:172;box_0,future_1",
    call$0: [function() {
      this.future_1._complete$1(this.box_0.count_0);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  StreamSubscription: {
    "": "Object;"
  },
  _StreamController: {
    "": "Object;",
    get$_pendingEvents: function() {
      if ((this._state & 8) === 0)
        return this._varData;
      return this._varData.get$varData();
    },
    _ensurePendingEvents$0: [function() {
      var t1, state;
      if ((this._state & 8) === 0) {
        t1 = this._varData;
        if (t1 == null) {
          t1 = new P._StreamImplEvents(null, null, 0);
          this._varData = t1;
        }
        return t1;
      }
      state = this._varData;
      state.get$varData();
      return state.get$varData();
    }, "call$0", "get$_ensurePendingEvents", 0, 0, null],
    get$_subscription: function() {
      if ((this._state & 8) !== 0)
        return this._varData.get$varData();
      return this._varData;
    },
    _badEventState$0: [function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    }, "call$0", "get$_badEventState", 0, 0, null],
    add$1: [function(_, value) {
      var t1 = this._state;
      if (t1 >= 4)
        throw H.wrapException(this._badEventState$0());
      if ((t1 & 1) !== 0)
        this._sendData$1(value);
      else if ((t1 & 3) === 0) {
        t1 = this._ensurePendingEvents$0();
        t1.add$1(t1, new P._DelayedData(value, null));
      }
    }, "call$1", "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T", void: true, args: [T]};
      }, this.$receiver, "_StreamController");
    }, 14],
    close$0: [function(_) {
      var t1, t2;
      t1 = this._state;
      if ((t1 & 4) !== 0)
        return this._doneFuture;
      if (t1 >= 4)
        throw H.wrapException(this._badEventState$0());
      t1 |= 4;
      this._state = t1;
      if (this._doneFuture == null) {
        t2 = P._Future$(null);
        this._doneFuture = t2;
        if ((t1 & 2) !== 0)
          t2._complete$1(null);
      }
      t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendDone$0();
      else if ((t1 & 3) === 0) {
        t1 = this._ensurePendingEvents$0();
        t1.add$1(t1, C.C__DelayedDone);
      }
      return this._doneFuture;
    }, "call$0", "get$close", 0, 0, null],
    _async$_add$1: [function(value) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendData$1(value);
      else if ((t1 & 3) === 0) {
        t1 = this._ensurePendingEvents$0();
        t1.add$1(t1, new P._DelayedData(value, null));
      }
    }, "call$1", "get$_async$_add", 2, 0, null, 14],
    _addError$2: [function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0) {
        t1 = this._ensurePendingEvents$0();
        t1.add$1(t1, new P._DelayedError(error, stackTrace, null));
      }
    }, "call$2", "get$_addError", 4, 0, null, 87, 88],
    _subscribe$1: [function(cancelOnError) {
      var t1, t2, subscription, pendingEvents, addState;
      if ((this._state & 3) !== 0)
        throw H.wrapException(new P.StateError("Stream has already been listened to."));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      subscription = H.setRuntimeTypeInfo(new P._ControllerSubscription(this, null, null, null, t1, t2, null, null), [null]);
      pendingEvents = this.get$_pendingEvents();
      t2 = this._state | 1;
      this._state = t2;
      if ((t2 & 8) !== 0) {
        addState = this._varData;
        addState.set$varData(subscription);
        addState.resume$0();
      } else
        this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
      return subscription;
    }, "call$1", "get$_subscribe", 2, 0, null, 178],
    _recordCancel$1: [function(subscription) {
      var t1, future;
      if ((this._state & 8) !== 0)
        this._varData.cancel$0();
      this._varData = null;
      this._state = this._state & 4294967286 | 2;
      t1 = new P._StreamController__recordCancel_complete(this);
      future = P._runGuarded(this.get$_onCancel());
      if (future != null)
        future = future.whenComplete$1(t1);
      else
        t1.call$0();
      return future;
    }, "call$1", "get$_recordCancel", 2, 0, null, 100],
    _recordPause$1: [function(subscription) {
      var addState;
      if ((this._state & 8) !== 0) {
        addState = this._varData;
        addState.pause$0(addState);
      }
      P._runGuarded(this.get$_onPause());
    }, "call$1", "get$_recordPause", 2, 0, null, 100],
    _recordResume$1: [function(subscription) {
      if ((this._state & 8) !== 0)
        this._varData.resume$0();
      P._runGuarded(this.get$_onResume());
    }, "call$1", "get$_recordResume", 2, 0, null, 100]
  },
  _StreamController__subscribe_closure: {
    "": "Closure:172;this_0",
    call$0: [function() {
      P._runGuarded(this.this_0.get$_onListen());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _StreamController__recordCancel_complete: {
    "": "Closure:92;this_0",
    call$0: [function() {
      var t1 = this.this_0._doneFuture;
      if (t1 != null && t1._state === 0)
        t1._asyncComplete$1(null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _SyncStreamControllerDispatch: {
    "": "Object;",
    _sendData$1: [function(data) {
      this.get$_subscription()._async$_add$1(data);
    }, "call$1", "get$_sendData", 2, 0, null, 159],
    _sendError$2: [function(error, stackTrace) {
      this.get$_subscription()._addError$2(error, stackTrace);
    }, "call$2", "get$_sendError", 4, 0, null, 87, 88],
    _sendDone$0: [function() {
      this.get$_subscription()._close$0();
    }, "call$0", "get$_sendDone", 0, 0, null]
  },
  _AsyncStreamControllerDispatch: {
    "": "Object;",
    _sendData$1: [function(data) {
      this.get$_subscription()._addPending$1(new P._DelayedData(data, null));
    }, "call$1", "get$_sendData", 2, 0, null, 159],
    _sendError$2: [function(error, stackTrace) {
      this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2", "get$_sendError", 4, 0, null, 87, 88],
    _sendDone$0: [function() {
      this.get$_subscription()._addPending$1(C.C__DelayedDone);
    }, "call$0", "get$_sendDone", 0, 0, null]
  },
  _AsyncStreamController: {
    "": "_StreamController__AsyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture",
    $as_StreamController__AsyncStreamControllerDispatch: null
  },
  _StreamController__AsyncStreamControllerDispatch: {
    "": "_StreamController+_AsyncStreamControllerDispatch;",
    $as_StreamController: null
  },
  _SyncStreamController: {
    "": "_StreamController__SyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture",
    $as_StreamController__SyncStreamControllerDispatch: null
  },
  _StreamController__SyncStreamControllerDispatch: {
    "": "_StreamController+_SyncStreamControllerDispatch;",
    $as_StreamController: null
  },
  _ControllerStream: {
    "": "_StreamImpl;_async$_controller",
    _createSubscription$1: [function(cancelOnError) {
      return this._async$_controller._subscribe$1(cancelOnError);
    }, "call$1", "get$_createSubscription", 2, 0, null, 178],
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
    },
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$is_ControllerStream)
        return false;
      return other._async$_controller === this._async$_controller;
    }, "call$1", "get$==", 2, 0, null, 160],
    $is_ControllerStream: true,
    $as_StreamImpl: null
  },
  _ControllerSubscription: {
    "": "_BufferingStreamSubscription;_async$_controller<,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    _onCancel$0: [function() {
      return this.get$_async$_controller()._recordCancel$1(this);
    }, "call$0", "get$_onCancel", 0, 0, null],
    _onPause$0: [function() {
      this.get$_async$_controller()._recordPause$1(this);
    }, "call$0", "get$_onPause", 0, 0, 92],
    _onResume$0: [function() {
      this.get$_async$_controller()._recordResume$1(this);
    }, "call$0", "get$_onResume", 0, 0, 92],
    $as_BufferingStreamSubscription: null
  },
  _EventSink: {
    "": "Object;"
  },
  _BufferingStreamSubscription: {
    "": "Object;_async$_onData,_onError<,_onDone,_zone<,_state,_cancelFuture,_pending",
    _setPendingEvents$1: [function(pendingEvents) {
      if (pendingEvents == null)
        return;
      this._pending = pendingEvents;
      if (!pendingEvents.get$isEmpty(pendingEvents)) {
        this._state = (this._state | 64) >>> 0;
        this._pending.schedule$1(this);
      }
    }, "call$1", "get$_setPendingEvents", 2, 0, null, 196],
    onData$1: [function(handleData) {
      this._zone.toString;
      this._async$_onData = handleData;
    }, "call$1", "get$onData", 2, 0, null, 197],
    onError$1: [function(_, handleError) {
      this._onError = P._registerErrorHandler(handleError, this._zone);
    }, "call$1", "get$onError", 2, 0, null, 198],
    onDone$1: [function(handleDone) {
      this._zone.toString;
      this._onDone = handleDone;
    }, "call$1", "get$onDone", 2, 0, null, 199],
    pause$1: [function(_, resumeSignal) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      this._state = (t1 + 128 | 4) >>> 0;
      if (t1 < 128 && this._pending != null)
        this._pending.cancelSchedule$0();
      if ((t1 & 4) === 0 && (this._state & 32) === 0)
        this._guardCallback$1(this.get$_onPause());
    }, function($receiver) {
      return this.pause$1($receiver, null);
    }, "pause$0", "call$1", null, "get$pause", 0, 2, null, 52, 200],
    resume$0: [function() {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 -= 128;
        this._state = t1;
        if (t1 < 128) {
          if ((t1 & 64) !== 0) {
            t1 = this._pending;
            t1 = !t1.get$isEmpty(t1);
          } else
            t1 = false;
          if (t1)
            this._pending.schedule$1(this);
          else {
            t1 = (this._state & 4294967291) >>> 0;
            this._state = t1;
            if ((t1 & 32) === 0)
              this._guardCallback$1(this.get$_onResume());
          }
        }
      }
    }, "call$0", "get$resume", 0, 0, null],
    cancel$0: [function() {
      var t1 = (this._state & 4294967279) >>> 0;
      this._state = t1;
      if ((t1 & 8) !== 0)
        return this._cancelFuture;
      this._cancel$0();
      return this._cancelFuture;
    }, "call$0", "get$cancel", 0, 0, null],
    _cancel$0: [function() {
      var t1 = (this._state | 8) >>> 0;
      this._state = t1;
      if ((t1 & 64) !== 0)
        this._pending.cancelSchedule$0();
      if ((this._state & 32) === 0)
        this._pending = null;
      this._cancelFuture = this._onCancel$0();
    }, "call$0", "get$_cancel", 0, 0, null],
    _async$_add$1: [function(data) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendData$1(data);
      else
        this._addPending$1(new P._DelayedData(data, null));
    }, "call$1", "get$_async$_add", 2, 0, null, 159],
    _addError$2: [function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2", "get$_addError", 4, 0, null, 87, 88],
    _close$0: [function() {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      this._state = t1;
      if (t1 < 32)
        this._sendDone$0();
      else
        this._addPending$1(C.C__DelayedDone);
    }, "call$0", "get$_close", 0, 0, null],
    _onPause$0: [function() {
    }, "call$0", "get$_onPause", 0, 0, 92],
    _onResume$0: [function() {
    }, "call$0", "get$_onResume", 0, 0, 92],
    _onCancel$0: [function() {
    }, "call$0", "get$_onCancel", 0, 0, null],
    _addPending$1: [function($event) {
      var pending, t1;
      pending = this._pending;
      if (pending == null) {
        pending = new P._StreamImplEvents(null, null, 0);
        this._pending = pending;
      }
      pending.add$1(pending, $event);
      t1 = this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        this._state = t1;
        if (t1 < 128)
          this._pending.schedule$1(this);
      }
    }, "call$1", "get$_addPending", 2, 0, null, 201],
    _sendData$1: [function(data) {
      var t1 = this._state;
      this._state = (t1 | 32) >>> 0;
      this._zone.runUnaryGuarded$2(this._async$_onData, data);
      this._state = (this._state & 4294967263) >>> 0;
      this._checkState$1((t1 & 4) !== 0);
    }, "call$1", "get$_sendData", 2, 0, null, 159],
    _sendError$2: [function(error, stackTrace) {
      var t1, t2, t3;
      t1 = this._state;
      t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        this._state = (t1 | 16) >>> 0;
        this._cancel$0();
        t1 = this._cancelFuture;
        t3 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t3.$isFuture)
          t1.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        this._checkState$1((t1 & 4) !== 0);
      }
    }, "call$2", "get$_sendError", 4, 0, null, 87, 88],
    _sendDone$0: [function() {
      var t1, t2, t3;
      t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
      this._cancel$0();
      this._state = (this._state | 16) >>> 0;
      t2 = this._cancelFuture;
      t3 = J.getInterceptor(t2);
      if (typeof t2 === "object" && t2 !== null && !!t3.$isFuture)
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    }, "call$0", "get$_sendDone", 0, 0, null],
    _guardCallback$1: [function(callback) {
      var t1 = this._state;
      this._state = (t1 | 32) >>> 0;
      callback.call$0();
      this._state = (this._state & 4294967263) >>> 0;
      this._checkState$1((t1 & 4) !== 0);
    }, "call$1", "get$_guardCallback", 2, 0, null, 93],
    _checkState$1: [function(wasInputPaused) {
      var t1, isInputPaused;
      if ((this._state & 64) !== 0) {
        t1 = this._pending;
        t1 = t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = (this._state & 4294967231) >>> 0;
        this._state = t1;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t1 = this._pending;
            t1 = t1 == null || t1.get$isEmpty(t1);
          } else
            t1 = false;
        else
          t1 = false;
        if (t1)
          this._state = (this._state & 4294967291) >>> 0;
      }
      for (; true; wasInputPaused = isInputPaused) {
        t1 = this._state;
        if ((t1 & 8) !== 0) {
          this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          this._onPause$0();
        else
          this._onResume$0();
        this._state = (this._state & 4294967263) >>> 0;
      }
      t1 = this._state;
      if ((t1 & 64) !== 0 && t1 < 128)
        this._pending.schedule$1(this);
    }, "call$1", "get$_checkState", 2, 0, null, 202],
    static: {"": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR,_BufferingStreamSubscription__STATE_CLOSED,_BufferingStreamSubscription__STATE_INPUT_PAUSED,_BufferingStreamSubscription__STATE_CANCELED,_BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL,_BufferingStreamSubscription__STATE_IN_CALLBACK,_BufferingStreamSubscription__STATE_HAS_PENDING,_BufferingStreamSubscription__STATE_PAUSE_COUNT,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT"}
  },
  _BufferingStreamSubscription__sendError_sendError: {
    "": "Closure:92;this_0,error_1,stackTrace_2",
    call$0: [function() {
      var t1, t2, t3, t4, t5;
      t1 = this.this_0;
      t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 32) >>> 0;
      t2 = t1._zone;
      t3 = $.Zone__current;
      t2.toString;
      t3.toString;
      if (t3 == null ? t2 != null : t3 !== t2)
        P._rootHandleUncaughtError(t3, null, t3, this.error_1, this.stackTrace_2);
      else {
        t3 = t1._onError;
        t4 = H.getDynamicRuntimeType();
        t4 = H.buildFunctionType(t4, [t4, t4])._isTest$1(t3);
        t5 = this.error_1;
        if (t4)
          t2.runBinaryGuarded$3(t3, t5, this.stackTrace_2);
        else
          t2.runUnaryGuarded$2(t3, t5);
      }
      t1._state = (t1._state & 4294967263) >>> 0;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _BufferingStreamSubscription__sendDone_sendDone: {
    "": "Closure:92;this_0",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _StreamImpl: {
    "": "Stream;",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var subscription = this._createSubscription$1(true === cancelOnError);
      subscription.onData$1(onData);
      subscription.onError$1(subscription, onError);
      subscription.onDone$1(onDone);
      return subscription;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", "call$4$cancelOnError$onDone$onError", null, "get$listen", 2, 7, null, 52, 52, 52, 177, 178, 179, 99],
    _createSubscription$1: [function(cancelOnError) {
      var t1, t2;
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      t2 = new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      return t2;
    }, "call$1", "get$_createSubscription", 2, 0, null, 178],
    $asStream: null
  },
  _DelayedEvent: {
    "": "Object;next@"
  },
  _DelayedData: {
    "": "_DelayedEvent;value,next",
    perform$1: [function(dispatch) {
      dispatch._sendData$1(this.value);
    }, "call$1", "get$perform", 2, 0, null, 203]
  },
  _DelayedError: {
    "": "_DelayedEvent;error>,stackTrace<,next",
    perform$1: [function(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }, "call$1", "get$perform", 2, 0, null, 203]
  },
  _DelayedDone: {
    "": "Object;",
    perform$1: [function(dispatch) {
      dispatch._sendDone$0();
    }, "call$1", "get$perform", 2, 0, null, 203],
    get$next: function() {
      return;
    },
    set$next: function(_) {
      throw H.wrapException(P.StateError$("No events after a done."));
    }
  },
  _PendingEvents: {
    "": "Object;",
    schedule$1: [function(dispatch) {
      var t1 = this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
      this._state = 1;
    }, "call$1", "get$schedule", 2, 0, null, 203],
    cancelSchedule$0: [function() {
      if (this._state === 1)
        this._state = 3;
    }, "call$0", "get$cancelSchedule", 0, 0, null]
  },
  _PendingEvents_schedule_closure: {
    "": "Closure:172;this_0,dispatch_1",
    call$0: [function() {
      var t1, oldState;
      t1 = this.this_0;
      oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _StreamImplEvents: {
    "": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
    get$isEmpty: function(_) {
      return this.lastPendingEvent == null;
    },
    add$1: [function(_, $event) {
      var t1 = this.lastPendingEvent;
      if (t1 == null) {
        this.lastPendingEvent = $event;
        this.firstPendingEvent = $event;
      } else {
        t1.set$next($event);
        this.lastPendingEvent = $event;
      }
    }, "call$1", "get$add", 2, 0, null, 201],
    handleNext$1: [function(dispatch) {
      var $event, t1;
      $event = this.firstPendingEvent;
      t1 = $event.get$next();
      this.firstPendingEvent = t1;
      if (t1 == null)
        this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }, "call$1", "get$handleNext", 2, 0, null, 203]
  },
  _cancelAndError_closure: {
    "": "Closure:172;future_0,error_1,stackTrace_2",
    call$0: [function() {
      return this.future_0._completeError$2(this.error_1, this.stackTrace_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _cancelAndErrorClosure_closure: {
    "": "Closure:204;subscription_0,future_1",
    call$2: [function(error, stackTrace) {
      return P._cancelAndError(this.subscription_0, this.future_1, error, stackTrace);
    }, "call$2", null, 4, 0, null, 87, 88, "call"],
    $isFunction: true
  },
  _ForwardingStream: {
    "": "Stream;",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1, t2, t3, t4, result;
      cancelOnError = true === cancelOnError;
      t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 0);
      t2 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
      t3 = $.Zone__current;
      t4 = cancelOnError ? 1 : 0;
      result = H.setRuntimeTypeInfo(new P._ForwardingStreamSubscription(this, null, null, null, null, t3, t4, null, null), [t1, t2]);
      result._ForwardingStreamSubscription$2(this, cancelOnError, t1, t2);
      result.onData$1(onData);
      result.onError$1(result, onError);
      result.onDone$1(onDone);
      return result;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", "call$4$cancelOnError$onDone$onError", null, "get$listen", 2, 7, null, 52, 52, 52, 177, 178, 179, 99],
    _handleData$2: [function(data, sink) {
      sink._async$_add$1(data);
    }, "call$2", "get$_handleData", 4, 0, null, 159, 205],
    $asStream: function($S, $T) {
      return [$T];
    }
  },
  _ForwardingStreamSubscription: {
    "": "_BufferingStreamSubscription;_stream,_subscription,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    _async$_add$1: [function(data) {
      if ((this._state & 2) !== 0)
        return;
      P._BufferingStreamSubscription.prototype._async$_add$1.call(this, data);
    }, "call$1", "get$_async$_add", 2, 0, null, 159],
    _addError$2: [function(error, stackTrace) {
      if ((this._state & 2) !== 0)
        return;
      P._BufferingStreamSubscription.prototype._addError$2.call(this, error, stackTrace);
    }, "call$2", "get$_addError", 4, 0, null, 87, 88],
    _onPause$0: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.pause$0(t1);
    }, "call$0", "get$_onPause", 0, 0, 92],
    _onResume$0: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.resume$0();
    }, "call$0", "get$_onResume", 0, 0, 92],
    _onCancel$0: [function() {
      var t1 = this._subscription;
      if (t1 != null) {
        this._subscription = null;
        t1.cancel$0();
      }
      return;
    }, "call$0", "get$_onCancel", 0, 0, null],
    _handleData$1: [function(data) {
      this._stream._handleData$2(data, this);
    }, "call$1", "get$_handleData", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S", void: true, args: [S]};
      }, this.$receiver, "_ForwardingStreamSubscription");
    }, 159],
    _handleError$2: [function(error, stackTrace) {
      this._addError$2(error, stackTrace);
    }, "call$2", "get$_handleError", 4, 0, 206, 87, 88],
    _handleDone$0: [function() {
      this._close$0();
    }, "call$0", "get$_handleDone", 0, 0, 92],
    _ForwardingStreamSubscription$2: function(_stream, cancelOnError, $S, $T) {
      var t1, t2;
      t1 = this.get$_handleData();
      t2 = this.get$_handleError();
      this._subscription = this._stream._source.listen$3$onDone$onError(t1, this.get$_handleDone(), t2);
    },
    $as_BufferingStreamSubscription: function($S, $T) {
      return [$T];
    }
  },
  _MapStream: {
    "": "_ForwardingStream;_transform,_source",
    _transform$1: function(arg0) {
      return this._transform.call$1(arg0);
    },
    _handleData$2: [function(inputEvent, sink) {
      var outputEvent, e, s, exception, t1;
      outputEvent = null;
      try {
        outputEvent = this._transform$1(inputEvent);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        sink._addError$2(e, s);
        return;
      }

      sink._async$_add$1(outputEvent);
    }, "call$2", "get$_handleData", 4, 0, null, 207, 205],
    $as_ForwardingStream: null
  },
  _BaseZone: {
    "": "Object;",
    runGuarded$1: [function(f) {
      var e, s, t1, exception;
      try {
        t1 = this.run$1(f);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$1", "get$runGuarded", 2, 0, null, 73],
    runUnaryGuarded$2: [function(f, arg) {
      var e, s, t1, exception;
      try {
        t1 = this.runUnary$2(f, arg);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$2", "get$runUnaryGuarded", 4, 0, null, 73, 105],
    runBinaryGuarded$3: [function(f, arg1, arg2) {
      var e, s, t1, exception;
      try {
        t1 = this.runBinary$3(f, arg1, arg2);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$3", "get$runBinaryGuarded", 6, 0, null, 73, 30, 31],
    bindCallback$2$runGuarded: [function(f, runGuarded) {
      var registered = this.registerCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindCallback_closure(this, registered);
      else
        return new P._BaseZone_bindCallback_closure0(this, registered);
    }, function(f) {
      return this.bindCallback$2$runGuarded(f, true);
    }, "bindCallback$1", "call$2$runGuarded", null, "get$bindCallback", 2, 3, null, 208, 73, 209],
    bindUnaryCallback$2$runGuarded: [function(f, runGuarded) {
      var registered = this.registerUnaryCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindUnaryCallback_closure(this, registered);
      else
        return new P._BaseZone_bindUnaryCallback_closure0(this, registered);
    }, "call$2$runGuarded", "get$bindUnaryCallback", 2, 3, null, 208, 73, 209]
  },
  _BaseZone_bindCallback_closure: {
    "": "Closure:172;this_0,registered_1",
    call$0: [function() {
      return this.this_0.runGuarded$1(this.registered_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _BaseZone_bindCallback_closure0: {
    "": "Closure:172;this_2,registered_3",
    call$0: [function() {
      return this.this_2.run$1(this.registered_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _BaseZone_bindUnaryCallback_closure: {
    "": "Closure:130;this_0,registered_1",
    call$1: [function(arg) {
      return this.this_0.runUnaryGuarded$2(this.registered_1, arg);
    }, "call$1", null, 2, 0, null, 105, "call"],
    $isFunction: true
  },
  _BaseZone_bindUnaryCallback_closure0: {
    "": "Closure:130;this_2,registered_3",
    call$1: [function(arg) {
      return this.this_2.runUnary$2(this.registered_3, arg);
    }, "call$1", null, 2, 0, null, 105, "call"],
    $isFunction: true
  },
  _rootHandleUncaughtError_closure: {
    "": "Closure:172;error_0,stackTrace_1",
    call$0: [function() {
      P._scheduleAsyncCallback(new P._rootHandleUncaughtError__closure(this.error_0, this.stackTrace_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _rootHandleUncaughtError__closure: {
    "": "Closure:172;error_2,stackTrace_3",
    call$0: [function() {
      var t1, trace, t2;
      t1 = this.error_2;
      P.print("Uncaught Error: " + H.S(t1));
      trace = this.stackTrace_3;
      if (trace == null) {
        t2 = J.getInterceptor(t1);
        t2 = typeof t1 === "object" && t1 !== null && !!t2.$isError;
      } else
        t2 = false;
      if (t2)
        trace = t1.get$stackTrace();
      if (trace != null)
        P.print("Stack Trace: \n" + H.S(trace) + "\n");
      throw H.wrapException(t1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _RootZone: {
    "": "_BaseZone;",
    $index: [function(_, key) {
      return;
    }, "call$1", "get$[]", 2, 0, null, 19],
    handleUncaughtError$2: [function(error, stackTrace) {
      return P._rootHandleUncaughtError(this, null, this, error, stackTrace);
    }, "call$2", "get$handleUncaughtError", 4, 0, null, 87, 88],
    run$1: [function(f) {
      return P._rootRun(this, null, this, f);
    }, "call$1", "get$run", 2, 0, null, 73],
    runUnary$2: [function(f, arg) {
      return P._rootRunUnary(this, null, this, f, arg);
    }, "call$2", "get$runUnary", 4, 0, null, 73, 105],
    runBinary$3: [function(f, arg1, arg2) {
      return P._rootRunBinary(this, null, this, f, arg1, arg2);
    }, "call$3", "get$runBinary", 6, 0, null, 73, 30, 31],
    registerCallback$1: [function(f) {
      return f;
    }, "call$1", "get$registerCallback", 2, 0, null, 73],
    registerUnaryCallback$1: [function(f) {
      return f;
    }, "call$1", "get$registerUnaryCallback", 2, 0, null, 73]
  }
}],
["dart.collection", "dart:collection", , P, {
  "": "",
  _defaultEquals: [function(a, b) {
    return J.$eq(a, b);
  }, "call$2", "_defaultEquals$closure", 4, 0, 107, 108, 109],
  _defaultHashCode: [function(a) {
    return J.get$hashCode$(a);
  }, "call$1", "_defaultHashCode$closure", 2, 0, 110, 108],
  HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
    return H.setRuntimeTypeInfo(new P._HashMap(0, null, null, null, null), [$K, $V]);
  },
  HashSet_HashSet$identity: function($E) {
    return H.setRuntimeTypeInfo(new P._IdentityHashSet(0, null, null, null, null), [$E]);
  },
  _iterableToString: [function(iterable) {
    var parts, t1;
    t1 = $.get$_toStringVisiting();
    if (t1.contains$1(t1, iterable))
      return "(...)";
    t1 = $.get$_toStringVisiting();
    t1.add$1(t1, iterable);
    parts = [];
    try {
      P._iterablePartsToStrings(iterable, parts);
    } finally {
      t1 = $.get$_toStringVisiting();
      t1.remove$1(t1, iterable);
    }
    t1 = P.StringBuffer$("(");
    t1.writeAll$2(parts, ", ");
    t1.write$1(")");
    return t1._contents;
  }, "call$1", "_iterableToString$closure", 2, 0, null, 72],
  _iterablePartsToStrings: [function(iterable, parts) {
    var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
    it = iterable.get$iterator(iterable);
    $length = 0;
    count = 0;
    while (true) {
      if (!($length < 80 || count < 3))
        break;
      if (!it.moveNext$0())
        return;
      next = H.S(it.get$current());
      parts.push(next);
      $length += next.length + 2;
      ++count;
    }
    if (!it.moveNext$0()) {
      if (count <= 5)
        return;
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      ultimateString = parts.pop();
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      penultimateString = parts.pop();
    } else {
      penultimate = it.get$current();
      ++count;
      if (!it.moveNext$0()) {
        if (count <= 4) {
          parts.push(H.S(penultimate));
          return;
        }
        ultimateString = H.S(penultimate);
        if (0 >= parts.length)
          return H.ioore(parts, 0);
        penultimateString = parts.pop();
        $length += ultimateString.length + 2;
      } else {
        ultimate = it.get$current();
        ++count;
        for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
          ultimate0 = it.get$current();
          ++count;
          if (count > 100) {
            while (true) {
              if (!($length > 75 && count > 3))
                break;
              if (0 >= parts.length)
                return H.ioore(parts, 0);
              $length -= parts.pop().length + 2;
              --count;
            }
            parts.push("...");
            return;
          }
        }
        penultimateString = H.S(penultimate);
        ultimateString = H.S(ultimate);
        $length += ultimateString.length + penultimateString.length + 4;
      }
    }
    if (count > parts.length + 2) {
      $length += 5;
      elision = "...";
    } else
      elision = null;
    while (true) {
      if (!($length > 80 && parts.length > 3))
        break;
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      $length -= parts.pop().length + 2;
      if (elision == null) {
        $length += 5;
        elision = "...";
      }
    }
    if (elision != null)
      parts.push(elision);
    parts.push(penultimateString);
    parts.push(ultimateString);
  }, "call$2", "_iterablePartsToStrings$closure", 4, 0, null, 72, 111],
  LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
    return H.setRuntimeTypeInfo(new P._LinkedHashMap(0, null, null, null, null, null, 0), [$K, $V]);
  },
  LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
    return H.setRuntimeTypeInfo(new P._LinkedHashSet(0, null, null, null, null, null, 0), [$E]);
  },
  Maps_mapToString: [function(m) {
    var t1, result, i, t2;
    t1 = {};
    for (i = 0; t2 = $.get$Maps__toStringList(), i < t2.length; ++i)
      if (t2[i] === m)
        return "{...}";
    result = P.StringBuffer$("");
    try {
      $.get$Maps__toStringList().push(m);
      result.write$1("{");
      t1.first_0 = true;
      J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
      result.write$1("}");
    } finally {
      t1 = $.get$Maps__toStringList();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
    }
    return result.get$_contents();
  }, "call$1", "Maps_mapToString$closure", 2, 0, null, 112],
  _HashMap: {
    "": "Object;_collection$_length,_strings,_nums,_rest,_keys",
    get$length: function(_) {
      return this._collection$_length;
    },
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._HashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    $index: [function(_, key) {
      var strings, t1, entry, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          t1 = null;
        else {
          entry = strings[key];
          t1 = entry === strings ? null : entry;
        }
        return t1;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          t1 = null;
        else {
          entry = nums[key];
          t1 = entry === nums ? null : entry;
        }
        return t1;
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      }
    }, "call$1", "get$[]", 2, 0, null, 19],
    $indexSet: [function(_, key, value) {
      var strings, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._HashMap__newHashTable();
          this._strings = strings;
        }
        this._addHashTableEntry$3(strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          nums = P._HashMap__newHashTable();
          this._nums = nums;
        }
        this._addHashTableEntry$3(nums, key, value);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._HashMap__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null) {
          P._HashMap__setTableEntry(rest, hash, [key, value]);
          this._collection$_length = this._collection$_length + 1;
          this._keys = null;
        } else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            this._collection$_length = this._collection$_length + 1;
            this._keys = null;
          }
        }
      }
    }, "call$2", "get$[]=", 4, 0, null, 19, 14],
    forEach$1: [function(_, action) {
      var keys, $length, i, key;
      keys = this._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        key = keys[i];
        action.call$2(key, this.$index(this, key));
        if (keys !== this._keys)
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    }, "call$1", "get$forEach", 2, 0, null, 189],
    _computeKeys$0: [function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._keys;
      if (t1 != null)
        return t1;
      result = Array(this._collection$_length);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._keys = result;
      return result;
    }, "call$0", "get$_computeKeys", 0, 0, null],
    _addHashTableEntry$3: [function(table, key, value) {
      if (table[key] == null) {
        this._collection$_length = this._collection$_length + 1;
        this._keys = null;
      }
      P._HashMap__setTableEntry(table, key, value);
    }, "call$3", "get$_addHashTableEntry", 6, 0, null, 106, 19, 14],
    _computeHashCode$1: [function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 19],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq(bucket[i], key))
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 210, 19],
    $isMap: true,
    static: {_HashMap__setTableEntry: [function(table, key, value) {
        if (value == null)
          table[key] = table;
        else
          table[key] = value;
      }, "call$3", "_HashMap__setTableEntry$closure", 6, 0, null, 106, 19, 14], _HashMap__newHashTable: [function() {
        var table = Object.create(null);
        P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
        delete table["<non-identifier-key>"];
        return table;
      }, "call$0", "_HashMap__newHashTable$closure", 0, 0, null]}
  },
  _HashMap_values_closure: {
    "": "Closure:130;this_0",
    call$1: [function(each) {
      var t1 = this.this_0;
      return t1.$index(t1, each);
    }, "call$1", null, 2, 0, null, 211, "call"],
    $isFunction: true
  },
  HashMapKeyIterable: {
    "": "IterableBase;_map",
    get$length: function(_) {
      return this._map._collection$_length;
    },
    get$iterator: function(_) {
      var t1 = this._map;
      return new P.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
    },
    forEach$1: [function(_, f) {
      var t1, keys, $length, i;
      t1 = this._map;
      keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    }, "call$1", "get$forEach", 2, 0, null, 73],
    $asIterableBase: null,
    $isEfficientLength: true
  },
  HashMapKeyIterator: {
    "": "Object;_map,_keys,_offset,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var keys, offset, t1;
      keys = this._keys;
      offset = this._offset;
      t1 = this._map;
      if (keys !== t1._keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = keys[offset];
        this._offset = offset + 1;
        return true;
      }
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  _LinkedHashMap: {
    "": "Object;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._LinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    containsKey$1: [function(key) {
      var strings, nums, rest;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      }
    }, "call$1", "get$containsKey", 2, 0, null, 19],
    $index: [function(_, key) {
      var strings, cell, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return;
        cell = strings[key];
        return cell == null ? null : cell.get$_value();
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return;
        cell = nums[key];
        return cell == null ? null : cell.get$_value();
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].get$_value();
      }
    }, "call$1", "get$[]", 2, 0, null, 19],
    $indexSet: [function(_, key, value) {
      var strings, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._LinkedHashMap__newHashTable();
          this._strings = strings;
        }
        this._addHashTableEntry$3(strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          nums = P._LinkedHashMap__newHashTable();
          this._nums = nums;
        }
        this._addHashTableEntry$3(nums, key, value);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._LinkedHashMap__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$2(key, value)];
        else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].set$_value(value);
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      }
    }, "call$2", "get$[]=", 4, 0, null, 19, 14],
    remove$1: [function(_, key) {
      var rest, bucket, index, cell;
      if (typeof key === "string" && key !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, key);
      else if (typeof key === "number" && (key & 0x3ffffff) === key)
        return this._removeHashTableEntry$2(this._nums, key);
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this._unlinkCell$1(cell);
        return cell.get$_value();
      }
    }, "call$1", "get$remove", 2, 0, null, 19],
    forEach$1: [function(_, action) {
      var cell, modifications;
      cell = this._first;
      modifications = this._modifications;
      for (; cell != null;) {
        action.call$2(cell.get$_key(), cell.get$_value());
        if (modifications !== this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell.get$_next();
      }
    }, "call$1", "get$forEach", 2, 0, null, 189],
    _addHashTableEntry$3: [function(table, key, value) {
      var cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.set$_value(value);
    }, "call$3", "get$_addHashTableEntry", 6, 0, null, 106, 19, 14],
    _removeHashTableEntry$2: [function(table, key) {
      var cell;
      if (table == null)
        return;
      cell = table[key];
      if (cell == null)
        return;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.get$_value();
    }, "call$2", "get$_removeHashTableEntry", 4, 0, null, 106, 19],
    _newLinkedCell$2: [function(key, value) {
      var cell, last;
      cell = new P.LinkedHashMapCell(key, value, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._collection$_length = this._collection$_length + 1;
      this._modifications = this._modifications + 1 & 67108863;
      return cell;
    }, "call$2", "get$_newLinkedCell", 4, 0, null, 19, 14],
    _unlinkCell$1: [function(cell) {
      var previous, next;
      previous = cell.get$_previous();
      next = cell.get$_next();
      if (previous == null)
        this._first = next;
      else
        previous.set$_next(next);
      if (next == null)
        this._last = previous;
      else
        next.set$_previous(previous);
      this._collection$_length = this._collection$_length - 1;
      this._modifications = this._modifications + 1 & 67108863;
    }, "call$1", "get$_unlinkCell", 2, 0, null, 212],
    _computeHashCode$1: [function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 19],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_key(), key))
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 210, 19],
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    $isMap: true,
    static: {_LinkedHashMap__newHashTable: [function() {
        var table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        return table;
      }, "call$0", "_LinkedHashMap__newHashTable$closure", 0, 0, null]}
  },
  _LinkedHashMap_values_closure: {
    "": "Closure:130;this_0",
    call$1: [function(each) {
      var t1 = this.this_0;
      return t1.$index(t1, each);
    }, "call$1", null, 2, 0, null, 211, "call"],
    $isFunction: true
  },
  LinkedHashMapCell: {
    "": "Object;_key<,_value@,_next@,_previous@"
  },
  LinkedHashMapKeyIterable: {
    "": "IterableBase;_map",
    get$length: function(_) {
      return this._map._collection$_length;
    },
    get$iterator: function(_) {
      var t1, t2;
      t1 = this._map;
      t2 = new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
      t2._cell = t1._first;
      return t2;
    },
    forEach$1: [function(_, f) {
      var t1, cell, modifications;
      t1 = this._map;
      cell = t1._first;
      modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.get$_key());
        if (modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        cell = cell.get$_next();
      }
    }, "call$1", "get$forEach", 2, 0, null, 73],
    $asIterableBase: null,
    $isEfficientLength: true
  },
  LinkedHashMapKeyIterator: {
    "": "Object;_map,_modifications,_cell,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var t1 = this._map;
      if (this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_key();
          this._cell = this._cell.get$_next();
          return true;
        }
      }
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  _HashSet: {
    "": "_HashSetBase;",
    get$iterator: function(_) {
      return new P.HashSetIterator(this, this._computeElements$0(), 0, null);
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    contains$1: [function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        return nums == null ? false : nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    }, "call$1", "get$contains", 2, 0, null, 0],
    lookup$1: [function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(this, object) ? object : null;
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return;
      return J.$index$asx(bucket, index);
    }, "call$1", "get$lookup", 2, 0, null, 0],
    add$1: [function(_, element) {
      var rest, table, hash, bucket;
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      this._collection$_length = this._collection$_length + 1;
      this._elements = null;
      return true;
    }, "call$1", "get$add", 2, 0, null, 169],
    remove$1: [function(_, object) {
      var rest, bucket, index;
      rest = this._rest;
      if (rest == null)
        return false;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      this._collection$_length = this._collection$_length - 1;
      this._elements = null;
      bucket.splice(index, 1);
      return true;
    }, "call$1", "get$remove", 2, 0, null, 0],
    _computeElements$0: [function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._elements;
      if (t1 != null)
        return t1;
      result = Array(this._collection$_length);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._elements = result;
      return result;
    }, "call$0", "get$_computeElements", 0, 0, null],
    _computeHashCode$1: [function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 169],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i], element))
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 210, 169],
    $as_HashSetBase: null,
    $isEfficientLength: true
  },
  _IdentityHashSet: {
    "": "_HashSet;_collection$_length,_strings,_nums,_rest,_elements",
    _computeHashCode$1: [function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 19],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i];
        if (t1 == null ? element == null : t1 === element)
          return i;
      }
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 210, 169],
    $as_HashSet: null
  },
  HashSetIterator: {
    "": "Object;_set,_elements,_offset,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var elements, offset, t1;
      elements = this._elements;
      offset = this._offset;
      t1 = this._set;
      if (elements !== t1._elements)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = elements[offset];
        this._offset = offset + 1;
        return true;
      }
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  _LinkedHashSet: {
    "": "_HashSetBase;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
    get$iterator: function(_) {
      var t1 = new P.LinkedHashSetIterator(this, this._modifications, null, null);
      t1._cell = this._first;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    contains$1: [function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    }, "call$1", "get$contains", 2, 0, null, 0],
    lookup$1: [function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(this, object) ? object : null;
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return;
        return J.$index$asx(bucket, index).get$_element();
      }
    }, "call$1", "get$lookup", 2, 0, null, 0],
    forEach$1: [function(_, action) {
      var cell, modifications;
      cell = this._first;
      modifications = this._modifications;
      for (; cell != null;) {
        action.call$1(cell.get$_element());
        if (modifications !== this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell.get$_next();
      }
    }, "call$1", "get$forEach", 2, 0, null, 189],
    add$1: [function(_, element) {
      var nums, table, rest, hash, bucket;
      if ((element & 0x3ffffff) === element) {
        nums = this._nums;
        if (nums == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._nums = table;
          nums = table;
        }
        return this._addHashTableEntry$2(nums, element);
      } else {
        rest = this._rest;
        if (rest == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._rest = table;
          rest = table;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._newLinkedCell$1(element));
        }
        return true;
      }
    }, "call$1", "get$add", 2, 0, null, 169],
    _addHashTableEntry$2: [function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._newLinkedCell$1(element);
      return true;
    }, "call$2", "get$_addHashTableEntry", 4, 0, null, 106, 169],
    _newLinkedCell$1: [function(element) {
      var cell, last;
      cell = new P.LinkedHashSetCell(element, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._collection$_length = this._collection$_length + 1;
      this._modifications = this._modifications + 1 & 67108863;
      return cell;
    }, "call$1", "get$_newLinkedCell", 2, 0, null, 169],
    _computeHashCode$1: [function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 169],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (bucket[i].get$_element() === element)
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 210, 169],
    $as_HashSetBase: null,
    $isEfficientLength: true
  },
  LinkedHashSetCell: {
    "": "Object;_element<,_next@,_previous@"
  },
  LinkedHashSetIterator: {
    "": "Object;_set,_modifications,_cell,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var t1 = this._set;
      if (this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_element();
          this._cell = this._cell.get$_next();
          return true;
        }
      }
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  _HashSetBase: {
    "": "IterableBase;",
    toString$0: [function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    }, "call$0", "get$toString", 0, 0, null],
    $asIterableBase: null,
    $isEfficientLength: true
  },
  IterableBase: {
    "": "Object;",
    map$1: [function(_, f) {
      return H.MappedIterable_MappedIterable(this, f, H.getRuntimeTypeArgument(this, "IterableBase", 0), null);
    }, "call$1", "get$map", 2, 0, null, 73],
    forEach$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current());
    }, "call$1", "get$forEach", 2, 0, null, 73],
    get$length: function(_) {
      var it, count;
      it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    elementAt$1: [function(_, index) {
      var t1, remaining, element, t2;
      if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0();) {
        element = t1.get$current();
        t2 = J.getInterceptor(remaining);
        if (t2.$eq(remaining, 0))
          return element;
        remaining = t2.$sub(remaining, 1);
      }
      throw H.wrapException(P.RangeError$value(index));
    }, "call$1", "get$elementAt", 2, 0, null, 23],
    toString$0: [function(_) {
      return P._iterableToString(this);
    }, "call$0", "get$toString", 0, 0, null]
  },
  ListMixin: {
    "": "Object;",
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver), 0, null);
    },
    elementAt$1: [function(receiver, index) {
      return this.$index(receiver, index);
    }, "call$1", "get$elementAt", 2, 0, null, 23],
    forEach$1: [function(receiver, action) {
      var $length, i;
      $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    }, "call$1", "get$forEach", 2, 0, null, 189],
    map$1: [function(receiver, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(receiver, f), [null, null]);
    }, "call$1", "get$map", 2, 0, null, 73],
    toString$0: [function(receiver) {
      var result, t1;
      t1 = $.get$_toStringVisiting();
      if (t1.contains$1(t1, receiver))
        return "[...]";
      result = P.StringBuffer$("");
      try {
        t1 = $.get$_toStringVisiting();
        t1.add$1(t1, receiver);
        result.write$1("[");
        result.writeAll$2(receiver, ", ");
        result.write$1("]");
      } finally {
        t1 = $.get$_toStringVisiting();
        t1.remove$1(t1, receiver);
      }
      return result.get$_contents();
    }, "call$0", "get$toString", 0, 0, null],
    $isList: true,
    $asList: null,
    $isEfficientLength: true
  },
  Maps_mapToString_closure: {
    "": "Closure:183;box_0,result_1",
    call$2: [function(k, v) {
      var t1 = this.box_0;
      if (!t1.first_0)
        this.result_1.write$1(", ");
      t1.first_0 = false;
      t1 = this.result_1;
      t1.write$1(k);
      t1.write$1(": ");
      t1.write$1(v);
    }, "call$2", null, 4, 0, null, 213, 214, "call"],
    $isFunction: true
  },
  ListQueue: {
    "": "IterableBase;_table,_head,_tail,_modificationCount",
    get$iterator: function(_) {
      return new P._ListQueueIterator(this, this._tail, this._modificationCount, this._head, null);
    },
    forEach$1: [function(_, action) {
      var modificationCount, i, t1;
      modificationCount = this._modificationCount;
      for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
        t1 = this._table;
        if (i < 0 || i >= t1.length)
          return H.ioore(t1, i);
        action.call$1(t1[i]);
        if (modificationCount !== this._modificationCount)
          H.throwExpression(P.ConcurrentModificationError$(this));
      }
    }, "call$1", "get$forEach", 2, 0, null, 189],
    get$length: function(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    toString$0: [function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    }, "call$0", "get$toString", 0, 0, null],
    removeFirst$0: [function() {
      var t1, t2, t3, result;
      t1 = this._head;
      if (t1 === this._tail)
        throw H.wrapException(P.StateError$("No elements"));
      this._modificationCount = this._modificationCount + 1;
      t2 = this._table;
      t3 = t2.length;
      if (t1 >= t3)
        return H.ioore(t2, t1);
      result = t2[t1];
      this._head = (t1 + 1 & t3 - 1) >>> 0;
      return result;
    }, "call$0", "get$removeFirst", 0, 0, null],
    _add$1: [function(element) {
      var t1, t2, t3, newTable, split;
      t1 = this._table;
      t2 = this._tail;
      t3 = t1.length;
      if (t2 < 0 || t2 >= t3)
        return H.ioore(t1, t2);
      t1[t2] = element;
      t2 = (t2 + 1 & t3 - 1) >>> 0;
      this._tail = t2;
      if (this._head === t2) {
        newTable = Array(t3 * 2);
        newTable.fixed$length = init;
        newTable.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        t1 = this._table;
        t2 = this._head;
        split = t1.length - t2;
        H.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
        t1 = this._head;
        t2 = this._table;
        H.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
        this._head = 0;
        this._tail = this._table.length;
        this._table = newTable;
      }
      this._modificationCount = this._modificationCount + 1;
    }, "call$1", "get$_add", 2, 0, null, 169],
    ListQueue$1: function(initialCapacity, $E) {
      var t1 = Array(8);
      t1.fixed$length = init;
      this._table = H.setRuntimeTypeInfo(t1, [$E]);
    },
    $asIterableBase: null,
    $isEfficientLength: true,
    static: {"": "ListQueue__INITIAL_CAPACITY"}
  },
  _ListQueueIterator: {
    "": "Object;_queue,_end,_modificationCount,_collection$_position,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var t1, t2, t3;
      t1 = this._queue;
      if (this._modificationCount !== t1._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(t1));
      t2 = this._collection$_position;
      if (t2 === this._end) {
        this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      t3 = t1.length;
      if (t2 >= t3)
        return H.ioore(t1, t2);
      this._collection$_current = t1[t2];
      this._collection$_position = (t2 + 1 & t3 - 1) >>> 0;
      return true;
    }, "call$0", "get$moveNext", 0, 0, null]
  }
}],
["dart.convert", "dart:convert", , P, {
  "": "",
  _convertJsonToDart: [function(json, reviver) {
    var revive = new P._convertJsonToDart_closure();
    return revive.call$2(null, new P._convertJsonToDart_walk(revive).call$1(json));
  }, "call$2", "_convertJsonToDart$closure", 4, 0, null, 113, 114],
  _parseJson: [function(source, reviver) {
    var parsed, e, t1, exception;
    t1 = source;
    if (typeof t1 !== "string")
      throw H.wrapException(new P.ArgumentError(source));
    parsed = null;
    try {
      parsed = JSON.parse(source);
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      throw H.wrapException(P.FormatException$(String(e)));
    }

    return P._convertJsonToDart(parsed, reviver);
  }, "call$2", "_parseJson$closure", 4, 0, null, 90, 114],
  _convertJsonToDart_closure: {
    "": "Closure:183;",
    call$2: [function(key, value) {
      return value;
    }, "call$2", null, 4, 0, null, 19, 14, "call"],
    $isFunction: true
  },
  _convertJsonToDart_walk: {
    "": "Closure:130;revive_0",
    call$1: [function(e) {
      var list, t1, i, keys, map, key, proto;
      if (e == null || typeof e != "object")
        return e;
      if (Object.getPrototypeOf(e) === Array.prototype) {
        list = e;
        for (t1 = this.revive_0, i = 0; i < list.length; ++i)
          list[i] = t1.call$2(i, this.call$1(list[i]));
        return list;
      }
      keys = Object.keys(e);
      map = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      for (t1 = this.revive_0, i = 0; i < keys.length; ++i) {
        key = keys[i];
        map.$indexSet(map, key, t1.call$2(key, this.call$1(e[key])));
      }
      proto = e.__proto__;
      if (typeof proto !== "undefined" && proto !== Object.prototype)
        map.$indexSet(map, "__proto__", t1.call$2("__proto__", this.call$1(proto)));
      return map;
    }, "call$1", null, 2, 0, null, 9, "call"],
    $isFunction: true
  },
  Codec: {
    "": "Object;"
  },
  Converter: {
    "": "Object;"
  },
  JsonCodec: {
    "": "Codec;",
    decode$2$reviver: [function(source, reviver) {
      return P._parseJson(source, C.JsonDecoder_null._reviver);
    }, function(source) {
      return this.decode$2$reviver(source, null);
    }, "decode$1", "call$2$reviver", null, "get$decode", 2, 3, null, 52, 90, 114]
  },
  JsonDecoder: {
    "": "Converter;_reviver"
  }
}],
["dart.core", "dart:core", , P, {
  "": "",
  Function__toMangledNames: [function(namedArguments) {
    return;
  }, "call$1", "Function__toMangledNames$closure", 2, 0, null, 21],
  Error_safeToString: [function(object) {
    var buffer, t1, i, t2, codeUnit, charCodes;
    if (typeof object === "number" || typeof object === "boolean" || null == object)
      return J.toString$0(object);
    if (typeof object === "string") {
      buffer = new P.StringBuffer("");
      buffer._contents = "\"";
      for (t1 = object.length, i = 0, t2 = "\""; i < t1; ++i) {
        codeUnit = C.JSString_methods.codeUnitAt$1(object, i);
        if (codeUnit <= 31)
          if (codeUnit === 10) {
            t2 = buffer._contents + "\\n";
            buffer._contents = t2;
          } else if (codeUnit === 13) {
            t2 = buffer._contents + "\\r";
            buffer._contents = t2;
          } else if (codeUnit === 9) {
            t2 = buffer._contents + "\\t";
            buffer._contents = t2;
          } else {
            t2 = buffer._contents + "\\x";
            buffer._contents = t2;
            if (codeUnit < 16)
              buffer._contents = t2 + "0";
            else {
              buffer._contents = t2 + "1";
              codeUnit -= 16;
            }
            t2 = codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit;
            charCodes = P.List_List$filled(1, t2, J.JSInt);
            t2 = H.Primitives_stringFromCharCodes(charCodes);
            t2 = buffer._contents + t2;
            buffer._contents = t2;
          }
        else if (codeUnit === 92) {
          t2 = buffer._contents + "\\\\";
          buffer._contents = t2;
        } else if (codeUnit === 34) {
          t2 = buffer._contents + "\\\"";
          buffer._contents = t2;
        } else {
          charCodes = P.List_List$filled(1, codeUnit, J.JSInt);
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          t2 = buffer._contents + t2;
          buffer._contents = t2;
        }
      }
      t1 = t2 + "\"";
      buffer._contents = t1;
      return t1;
    }
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  }, "call$1", "Error_safeToString$closure", 2, 0, null, 0],
  Exception_Exception: function(message) {
    return new P._ExceptionImplementation(message);
  },
  identical: [function(a, b) {
    return a == null ? b == null : a === b;
  }, "call$2", "identical$closure", 4, 0, 115, 108, 109],
  identityHashCode: [function(object) {
    return H.objectHashCode(object);
  }, "call$1", "identityHashCode$closure", 2, 0, 116, 0],
  List_List$filled: function($length, fill, $E) {
    var result, t1, i;
    result = J.JSArray_JSArray$fixed($length, $E);
    if ($length !== 0 && true)
      for (t1 = result.length, i = 0; i < t1; ++i)
        result[i] = fill;
    return result;
  },
  List_List$from: function(other, growable, $E) {
    var list, t1, $length, fixedList, t2, i, t3;
    list = H.setRuntimeTypeInfo([], [$E]);
    for (t1 = J.get$iterator$ax(other); t1.moveNext$0();)
      list.push(t1.get$current());
    if (growable)
      return list;
    $length = list.length;
    t1 = Array($length);
    t1.fixed$length = init;
    fixedList = H.setRuntimeTypeInfo(t1, [$E]);
    for (t1 = list.length, t2 = fixedList.length, i = 0; i < $length; ++i) {
      if (i >= t1)
        return H.ioore(list, i);
      t3 = list[i];
      if (i >= t2)
        return H.ioore(fixedList, i);
      fixedList[i] = t3;
    }
    return fixedList;
  },
  print: [function(object) {
    var line = H.S(object);
    H.printString(line);
  }, "call$1", "print$closure", 2, 0, null, 0],
  Function__toMangledNames_closure: {
    "": "Closure:183;result_0",
    call$2: [function(symbol, value) {
      var t1 = this.result_0;
      t1.$indexSet(t1, symbol.get$_name(), value);
    }, "call$2", null, 4, 0, null, 215, 14, "call"],
    $isFunction: true
  },
  NoSuchMethodError_toString_closure: {
    "": "Closure:216;box_0",
    call$2: [function(key, value) {
      var t1 = this.box_0;
      if (t1.i_1 > 0)
        t1.sb_0.write$1(", ");
      t1.sb_0.write$1(key.get$_name());
      t1.sb_0.write$1(": ");
      t1.sb_0.write$1(P.Error_safeToString(value));
      t1.i_1 = t1.i_1 + 1;
    }, "call$2", null, 4, 0, null, 19, 14, "call"],
    $isFunction: true
  },
  DateTime: {
    "": "Object;millisecondsSinceEpoch,isUtc",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDateTime)
        return false;
      return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      return this.millisecondsSinceEpoch;
    },
    toString$0: [function(_) {
      var t1, t2, t3, y, m, d, h, min, sec, ms;
      t1 = new P.DateTime_toString_twoDigits();
      t2 = this.isUtc;
      t3 = t2 ? H.Primitives_lazyAsJsDate(this).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(this).getFullYear() + 0;
      y = new P.DateTime_toString_fourDigits().call$1(t3);
      m = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(this).getMonth() + 1);
      d = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(this).getDate() + 0);
      h = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(this).getHours() + 0);
      min = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(this).getMinutes() + 0);
      sec = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(this).getSeconds() + 0);
      t1 = t2 ? H.Primitives_lazyAsJsDate(this).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(this).getMilliseconds() + 0;
      ms = new P.DateTime_toString_threeDigits().call$1(t1);
      if (t2)
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + "Z";
      else
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms);
    }, "call$0", "get$toString", 0, 0, null],
    DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
      if (Math.abs(millisecondsSinceEpoch) > 8640000000000000)
        throw H.wrapException(new P.ArgumentError(millisecondsSinceEpoch));
    },
    DateTime$_now$0: function() {
      H.Primitives_lazyAsJsDate(this);
    },
    $isDateTime: true,
    static: {"": "DateTime_MONDAY,DateTime_TUESDAY,DateTime_WEDNESDAY,DateTime_THURSDAY,DateTime_FRIDAY,DateTime_SATURDAY,DateTime_SUNDAY,DateTime_DAYS_PER_WEEK,DateTime_JANUARY,DateTime_FEBRUARY,DateTime_MARCH,DateTime_APRIL,DateTime_MAY,DateTime_JUNE,DateTime_JULY,DateTime_AUGUST,DateTime_SEPTEMBER,DateTime_OCTOBER,DateTime_NOVEMBER,DateTime_DECEMBER,DateTime_MONTHS_PER_YEAR,DateTime__MAX_MILLISECONDS_SINCE_EPOCH", DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
        var t1 = new P.DateTime(millisecondsSinceEpoch, isUtc);
        t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
        return t1;
      }, DateTime$_now: function() {
        var t1 = new P.DateTime(Date.now(), false);
        t1.DateTime$_now$0();
        return t1;
      }}
  },
  DateTime_toString_fourDigits: {
    "": "Closure:218;",
    call$1: [function(n) {
      var absN, sign;
      absN = Math.abs(n);
      sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + H.S(absN);
      if (absN >= 10)
        return sign + "00" + H.S(absN);
      return sign + "000" + H.S(absN);
    }, "call$1", null, 2, 0, null, 217, "call"],
    $isFunction: true
  },
  DateTime_toString_threeDigits: {
    "": "Closure:218;",
    call$1: [function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    }, "call$1", null, 2, 0, null, 217, "call"],
    $isFunction: true
  },
  DateTime_toString_twoDigits: {
    "": "Closure:218;",
    call$1: [function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    }, "call$1", null, 2, 0, null, 217, "call"],
    $isFunction: true
  },
  Duration: {
    "": "Object;_duration<",
    $add: [function(_, other) {
      return P.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
    }, "call$1", "get$+", 2, 0, null, 160],
    $sub: [function(_, other) {
      return P.Duration$(0, 0, C.JSInt_methods.$sub(this._duration, other.get$_duration()), 0, 0, 0);
    }, "call$1", "get$-", 2, 0, null, 160],
    $lt: [function(_, other) {
      return C.JSInt_methods.$lt(this._duration, other.get$_duration());
    }, "call$1", "get$<", 2, 0, null, 160],
    $gt: [function(_, other) {
      return this._duration > other.get$_duration();
    }, "call$1", "get$>", 2, 0, null, 160],
    $ge: [function(_, other) {
      return this._duration >= other.get$_duration();
    }, "call$1", "get$>=", 2, 0, null, 160],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDuration)
        return false;
      return this._duration === other._duration;
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      return this._duration & 0x1FFFFFFF;
    },
    toString$0: [function(_) {
      var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
      t1 = new P.Duration_toString_twoDigits();
      t2 = this._duration;
      if (t2 < 0)
        return "-" + H.S(P.Duration$(0, 0, -t2, 0, 0, 0));
      twoDigitMinutes = t1.call$1(C.JSInt_methods.remainder$1(C.JSInt_methods._tdivFast$1(t2, 60000000), 60));
      twoDigitSeconds = t1.call$1(C.JSInt_methods.remainder$1(C.JSInt_methods._tdivFast$1(t2, 1000000), 60));
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSInt_methods.remainder$1(t2, 1000000));
      return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    }, "call$0", "get$toString", 0, 0, null],
    $isDuration: true,
    static: {"": "Duration_MICROSECONDS_PER_MILLISECOND,Duration_MILLISECONDS_PER_SECOND,Duration_SECONDS_PER_MINUTE,Duration_MINUTES_PER_HOUR,Duration_HOURS_PER_DAY,Duration_MICROSECONDS_PER_SECOND,Duration_MICROSECONDS_PER_MINUTE,Duration_MICROSECONDS_PER_HOUR,Duration_MICROSECONDS_PER_DAY,Duration_MILLISECONDS_PER_MINUTE,Duration_MILLISECONDS_PER_HOUR,Duration_MILLISECONDS_PER_DAY,Duration_SECONDS_PER_HOUR,Duration_SECONDS_PER_DAY,Duration_MINUTES_PER_DAY,Duration_ZERO", Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
        return new P.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
      }}
  },
  Duration_toString_sixDigits: {
    "": "Closure:218;",
    call$1: [function(n) {
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n > 10)
        return "0000" + n;
      return "00000" + n;
    }, "call$1", null, 2, 0, null, 217, "call"],
    $isFunction: true
  },
  Duration_toString_twoDigits: {
    "": "Closure:218;",
    call$1: [function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    }, "call$1", null, 2, 0, null, 217, "call"],
    $isFunction: true
  },
  Error: {
    "": "Object;",
    get$stackTrace: function() {
      return new H._StackTrace(this.$thrownJsError, null);
    },
    $isError: true
  },
  NullThrownError: {
    "": "Error;",
    toString$0: [function(_) {
      return "Throw of null.";
    }, "call$0", "get$toString", 0, 0, null]
  },
  ArgumentError: {
    "": "Error;message",
    toString$0: [function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Illegal argument(s): " + H.S(t1);
      return "Illegal argument(s)";
    }, "call$0", "get$toString", 0, 0, null],
    static: {ArgumentError$: function(message) {
        return new P.ArgumentError(message);
      }}
  },
  RangeError: {
    "": "ArgumentError;message",
    toString$0: [function(_) {
      return "RangeError: " + H.S(this.message);
    }, "call$0", "get$toString", 0, 0, null],
    static: {RangeError$value: function(value) {
        return new P.RangeError("value " + H.S(value));
      }, RangeError$range: function(value, start, end) {
        return new P.RangeError("value " + H.S(value) + " not in range " + start + ".." + H.S(end));
      }}
  },
  NoSuchMethodError: {
    "": "Error;_core$_receiver,_memberName,_core$_arguments,_namedArguments,_existingArgumentNames",
    toString$0: [function(_) {
      var t1, t2, t3, t4, i, t5, str;
      t1 = {};
      t1.sb_0 = P.StringBuffer$("");
      t1.i_1 = 0;
      for (t2 = this._core$_arguments, t3 = 0; t4 = t2.length, t3 < t4; i = t1.i_1 + 1, t1.i_1 = i, t3 = i) {
        if (t3 > 0) {
          t5 = t1.sb_0;
          t5._contents = t5._contents + ", ";
        }
        t5 = t1.sb_0;
        if (t3 < 0)
          return H.ioore(t2, t3);
        str = P.Error_safeToString(t2[t3]);
        str = typeof str === "string" ? str : H.S(str);
        t5._contents = t5._contents + str;
      }
      t2 = this._namedArguments;
      t2.forEach$1(t2, new P.NoSuchMethodError_toString_closure(t1));
      return "NoSuchMethodError : method not found: '" + H.S(this._memberName) + "'\nReceiver: " + H.S(P.Error_safeToString(this._core$_receiver)) + "\nArguments: [" + H.S(t1.sb_0) + "]";
    }, "call$0", "get$toString", 0, 0, null],
    static: {NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
        return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
      }}
  },
  UnsupportedError: {
    "": "Error;message",
    toString$0: [function(_) {
      return "Unsupported operation: " + this.message;
    }, "call$0", "get$toString", 0, 0, null],
    static: {UnsupportedError$: function(message) {
        return new P.UnsupportedError(message);
      }}
  },
  UnimplementedError: {
    "": "Error;message",
    toString$0: [function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
    }, "call$0", "get$toString", 0, 0, null],
    $isError: true,
    static: {UnimplementedError$: function(message) {
        return new P.UnimplementedError(message);
      }}
  },
  StateError: {
    "": "Error;message",
    toString$0: [function(_) {
      return "Bad state: " + this.message;
    }, "call$0", "get$toString", 0, 0, null],
    static: {StateError$: function(message) {
        return new P.StateError(message);
      }}
  },
  ConcurrentModificationError: {
    "": "Error;modifiedObject",
    toString$0: [function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
    }, "call$0", "get$toString", 0, 0, null],
    static: {ConcurrentModificationError$: function(modifiedObject) {
        return new P.ConcurrentModificationError(modifiedObject);
      }}
  },
  StackOverflowError: {
    "": "Object;",
    toString$0: [function(_) {
      return "Stack Overflow";
    }, "call$0", "get$toString", 0, 0, null],
    get$stackTrace: function() {
      return;
    },
    $isError: true
  },
  CyclicInitializationError: {
    "": "Error;variableName",
    toString$0: [function(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }, "call$0", "get$toString", 0, 0, null],
    static: {CyclicInitializationError$: function(variableName) {
        return new P.CyclicInitializationError(variableName);
      }}
  },
  _ExceptionImplementation: {
    "": "Object;message",
    toString$0: [function(_) {
      var t1 = this.message;
      if (t1 == null)
        return "Exception";
      return "Exception: " + H.S(t1);
    }, "call$0", "get$toString", 0, 0, null]
  },
  FormatException: {
    "": "Object;message",
    toString$0: [function(_) {
      return "FormatException: " + this.message;
    }, "call$0", "get$toString", 0, 0, null],
    static: {FormatException$: function(message) {
        return new P.FormatException(message);
      }}
  },
  Expando: {
    "": "Object;name",
    toString$0: [function(_) {
      return "Expando:" + H.S(this.name);
    }, "call$0", "get$toString", 0, 0, null],
    $index: [function(_, object) {
      var values = H.Primitives_getProperty(object, "expando$values");
      return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
    }, "call$1", "get$[]", 2, 0, null, 0],
    $indexSet: [function(_, object, value) {
      var values = H.Primitives_getProperty(object, "expando$values");
      if (values == null) {
        values = new P.Object();
        H.Primitives_setProperty(object, "expando$values", values);
      }
      H.Primitives_setProperty(values, this._getKey$0(), value);
    }, "call$2", "get$[]=", 4, 0, null, 0, 14],
    _getKey$0: [function() {
      var key, t1;
      key = H.Primitives_getProperty(this, "expando$key");
      if (key == null) {
        t1 = $.Expando__keyCount;
        $.Expando__keyCount = t1 + 1;
        key = "expando$key$" + t1;
        H.Primitives_setProperty(this, "expando$key", key);
      }
      return key;
    }, "call$0", "get$_getKey", 0, 0, null],
    static: {"": "Expando__KEY_PROPERTY_NAME,Expando__EXPANDO_PROPERTY_NAME,Expando__keyCount"}
  },
  Function: {
    "": "Object;",
    $isFunction: true
  },
  Iterator: {
    "": "Object;"
  },
  Null: {
    "": "Object;",
    toString$0: [function(_) {
      return "null";
    }, "call$0", "get$toString", 0, 0, null]
  },
  Object: {
    "": ";",
    $eq: [function(_, other) {
      return this === other;
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: [function(_) {
      return H.Primitives_objectToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    noSuchMethod$1: [function(_, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    }, "call$1", "get$noSuchMethod", 2, 0, null, 168]
  },
  StackTrace: {
    "": "Object;"
  },
  Stopwatch: {
    "": "Object;_start,_stop",
    start$0: [function(_) {
      var t1, t2, t3;
      t1 = this._start == null;
      if (!t1 && this._stop == null)
        return;
      if (t1)
        this._start = H.Primitives_numMicroseconds();
      else {
        t1 = H.Primitives_numMicroseconds();
        t2 = this._stop;
        t3 = this._start;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return H.iae(t3);
        this._start = t1 - (t2 - t3);
        this._stop = null;
      }
    }, "call$0", "get$start", 0, 0, null],
    stop$0: [function(_) {
      if (!(this._start != null && this._stop == null))
        return;
      this._stop = H.Primitives_numMicroseconds();
    }, "call$0", "get$stop", 0, 0, null],
    reset$0: [function(_) {
      var t1;
      if (this._start == null)
        return;
      t1 = H.Primitives_numMicroseconds();
      this._start = t1;
      if (this._stop != null)
        this._stop = t1;
    }, "call$0", "get$reset", 0, 0, null],
    get$elapsedTicks: function() {
      var t1, t2;
      t1 = this._start;
      if (t1 == null)
        return 0;
      t2 = this._stop;
      if (t2 == null) {
        t1 = H.Primitives_numMicroseconds();
        t2 = this._start;
        if (typeof t2 !== "number")
          return H.iae(t2);
        t2 = t1 - t2;
        t1 = t2;
      } else {
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = t2 - t1;
      }
      return t1;
    }
  },
  StringBuffer: {
    "": "Object;_contents<",
    get$length: function(_) {
      return this._contents.length;
    },
    write$1: [function(obj) {
      var str = typeof obj === "string" ? obj : H.S(obj);
      this._contents = this._contents + str;
    }, "call$1", "get$write", 2, 0, null, 65],
    writeAll$2: [function(objects, separator) {
      var iterator, str;
      iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return;
      if (separator.length === 0)
        do {
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        } while (iterator.moveNext$0());
      else {
        this.write$1(iterator.get$current());
        for (; iterator.moveNext$0();) {
          this._contents = this._contents + separator;
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        }
      }
    }, "call$2", "get$writeAll", 2, 2, null, 219, 220, 221],
    toString$0: [function(_) {
      return this._contents;
    }, "call$0", "get$toString", 0, 0, null],
    StringBuffer$1: function($content) {
      this._contents = $content;
    },
    static: {StringBuffer$: function($content) {
        var t1 = new P.StringBuffer("");
        t1.StringBuffer$1($content);
        return t1;
      }}
  },
  Symbol: {
    "": "Object;"
  }
}],
["dart.dom.html", "dart:html", , W, {
  "": "",
  Element__determineMouseWheelEventType: [function(e) {
    if (e.onwheel !== undefined)
      return "wheel";
    else if (e.onmousewheel !== undefined)
      return "mousewheel";
    else
      return "DOMMouseScroll";
  }, "call$1", "Element__determineMouseWheelEventType$closure", 2, 0, 117, 9],
  _ElementFactoryProvider_createElement_tag: [function(tag, typeExtension) {
    return document.createElement(tag);
  }, "call$2", "_ElementFactoryProvider_createElement_tag$closure", 4, 0, null, 66, 118],
  HttpRequest_request: [function(url, method, mimeType, onProgress, requestHeaders, responseType, sendData, withCredentials) {
    var t1, completer, xhr;
    t1 = W.HttpRequest;
    completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(t1)), [t1]);
    xhr = new XMLHttpRequest();
    C.HttpRequest_methods.open$3$async(xhr, "GET", url, true);
    xhr.responseType = responseType;
    t1 = C.EventStreamProvider_load.forTarget$1(xhr);
    H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new W.HttpRequest_request_closure(completer, xhr)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    t1 = C.EventStreamProvider_error.forTarget$1(xhr);
    H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(completer.get$completeError()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    xhr.send();
    return completer.future;
  }, "call$8$method$mimeType$onProgress$requestHeaders$responseType$sendData$withCredentials", "HttpRequest_request$closure", 2, 15, null, 52, 52, 52, 52, 52, 52, 52, 119, 120, 121, 122, 123, 124, 125, 126],
  ImageElement_ImageElement: function(height, src, width) {
    var e = document.createElement("img", null);
    return e;
  },
  _JenkinsSmiHash_combine: [function(hash, value) {
    hash = 536870911 & hash + value;
    hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
    return hash ^ hash >>> 6;
  }, "call$2", "_JenkinsSmiHash_combine$closure", 4, 0, null, 127, 14],
  _convertNativeToDart_XHR_Response: [function(o) {
    var t1 = J.getInterceptor(o);
    if (typeof o === "object" && o !== null && !!t1.$isDocument)
      return o;
    return P.convertNativeToDart_AcceptStructuredClone(o, true);
  }, "call$1", "_convertNativeToDart_XHR_Response$closure", 2, 0, null, 128],
  _wrapZone: [function(callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone)
      return callback;
    return t1.bindUnaryCallback$2$runGuarded(callback, true);
  }, "call$1", "_wrapZone$closure", 2, 0, null, 93],
  HtmlElement: {
    "": "Element;",
    "%": "HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOptGroupElement|HTMLOptionElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTemplateElement|HTMLTitleElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"
  },
  AnchorElement: {
    "": "HtmlElement;type=",
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    "%": "HTMLAnchorElement"
  },
  Blob: {
    "": "Interceptor;type=",
    $isBlob: true,
    "%": "Blob|File"
  },
  ButtonElement: {
    "": "HtmlElement;type=",
    "%": "HTMLButtonElement"
  },
  CanvasElement: {
    "": "HtmlElement;height%,width%",
    getContext$2: [function(receiver, contextId, attrs) {
      return receiver.getContext(contextId);
    }, function($receiver, contextId) {
      return this.getContext$2($receiver, contextId, null);
    }, "getContext$1", "call$2", null, "get$getContext", 2, 2, null, 52, 136, 137],
    "%": "HTMLCanvasElement"
  },
  CanvasRenderingContext: {
    "": "Interceptor;",
    "%": "WebGLRenderingContext;CanvasRenderingContext"
  },
  CanvasRenderingContext2D: {
    "": "CanvasRenderingContext;fillStyle},font}",
    beginPath$0: [function(receiver) {
      return receiver.beginPath();
    }, "call$0", "get$beginPath", 0, 0, null],
    clearRect$4: [function(receiver, x, y, width, height) {
      return receiver.clearRect(x, y, width, height);
    }, "call$4", "get$clearRect", 8, 0, null, 12, 138, 139, 140],
    closePath$0: [function(receiver) {
      return receiver.closePath();
    }, "call$0", "get$closePath", 0, 0, null],
    createPatternFromImage$2: [function(receiver, image, repetitionType) {
      return receiver.createPattern(image, repetitionType);
    }, "call$2", "get$createPatternFromImage", 4, 0, null, 141, 142],
    fill$1: [function(receiver, winding) {
      return receiver.fill(winding);
    }, function($receiver) {
      return $receiver.fill();
    }, "fill$0", "call$1", null, "get$fill", 0, 2, null, 52, 143],
    fillRect$4: [function(receiver, x, y, width, height) {
      return receiver.fillRect(x, y, width, height);
    }, "call$4", "get$fillRect", 8, 0, null, 12, 138, 139, 140],
    lineTo$2: [function(receiver, x, y) {
      return receiver.lineTo(x, y);
    }, "call$2", "get$lineTo", 4, 0, null, 12, 138],
    moveTo$2: [function(receiver, x, y) {
      return receiver.moveTo(x, y);
    }, "call$2", "get$moveTo", 4, 0, null, 12, 138],
    rect$4: [function(receiver, x, y, width, height) {
      return receiver.rect(x, y, width, height);
    }, "call$4", "get$rect", 8, 0, null, 12, 138, 139, 140],
    restore$0: [function(receiver) {
      return receiver.restore();
    }, "call$0", "get$restore", 0, 0, null],
    save$0: [function(receiver) {
      return receiver.save();
    }, "call$0", "get$save", 0, 0, null],
    stroke$0: [function(receiver) {
      return receiver.stroke();
    }, "call$0", "get$stroke", 0, 0, null],
    drawImageScaledFromSource$9: [function(receiver, source, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight) {
      return receiver.drawImage(source, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight);
    }, "call$9", "get$drawImageScaledFromSource", 18, 0, null, 90, 144, 145, 146, 147, 148, 149, 150, 151],
    fillText$4: [function(receiver, text, x, y, maxWidth) {
      if (maxWidth != null)
        receiver.fillText(text, x, y, maxWidth);
      else
        receiver.fillText(text, x, y);
    }, "call$4", "get$fillText", 6, 2, null, 52, 152, 12, 138, 153],
    "%": "CanvasRenderingContext2D"
  },
  CharacterData: {
    "": "Node;length=",
    "%": "CDATASection|CharacterData|Comment|ProcessingInstruction|Text"
  },
  Document: {
    "": "Node;",
    $isDocument: true,
    "%": "Document|HTMLDocument|SVGDocument"
  },
  DomException: {
    "": "Interceptor;",
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    "%": "DOMException"
  },
  Element: {
    "": "Node;",
    get$client: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Rectangle(receiver.clientLeft, receiver.clientTop, receiver.clientWidth, receiver.clientHeight), [null]);
    },
    toString$0: [function(receiver) {
      return receiver.localName;
    }, "call$0", "get$toString", 0, 0, null],
    "%": ";Element"
  },
  EmbedElement: {
    "": "HtmlElement;height%,src},type=,width%",
    "%": "HTMLEmbedElement"
  },
  ErrorEvent: {
    "": "Event;error=",
    "%": "ErrorEvent"
  },
  Event: {
    "": "Interceptor;timeStamp=,type=",
    preventDefault$0: [function(receiver) {
      return receiver.preventDefault();
    }, "call$0", "get$preventDefault", 0, 0, null],
    $isEvent: true,
    "%": "AudioProcessingEvent|AutocompleteErrorEvent|BeforeLoadEvent|BeforeUnloadEvent|CSSFontFaceLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|HashChangeEvent|IDBVersionChangeEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaKeyEvent|MediaKeyMessageEvent|MediaKeyNeededEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SecurityPolicyViolationEvent|SpeechInputEvent|SpeechRecognitionEvent|SpeechSynthesisEvent|StorageEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent;Event"
  },
  EventTarget: {
    "": "Interceptor;",
    addEventListener$3: [function(receiver, type, listener, useCapture) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
    }, "call$3", "get$addEventListener", 4, 2, null, 52, 53, 154, 155],
    removeEventListener$3: [function(receiver, type, listener, useCapture) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
    }, "call$3", "get$removeEventListener", 4, 2, null, 52, 53, 154, 155],
    "%": "MediaStream;EventTarget"
  },
  FieldSetElement: {
    "": "HtmlElement;type=",
    "%": "HTMLFieldSetElement"
  },
  FormElement: {
    "": "HtmlElement;length=",
    "%": "HTMLFormElement"
  },
  HtmlCollection: {
    "": "Interceptor_ListMixin_ImmutableListMixin;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 23],
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isJavaScriptIndexingBehavior: true,
    "%": "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"
  },
  HttpRequest: {
    "": "HttpRequestEventTarget;",
    get$response: function(receiver) {
      return W._convertNativeToDart_XHR_Response(receiver.response);
    },
    open$5$async$password$user: [function(receiver, method, url, async, password, user) {
      return receiver.open(method, url, async, user, password);
    }, function($receiver, method, url, async) {
      return $receiver.open(method, url, async);
    }, "open$3$async", "call$5$async$password$user", null, "get$open", 4, 7, null, 52, 52, 52, 120, 119, 156, 157, 158],
    send$1: [function(receiver, data) {
      return receiver.send(data);
    }, "call$1", "get$send", 0, 2, null, 52, 159],
    "%": "XMLHttpRequest"
  },
  HttpRequestEventTarget: {
    "": "EventTarget;",
    "%": ";XMLHttpRequestEventTarget"
  },
  IFrameElement: {
    "": "HtmlElement;height%,src},width%",
    "%": "HTMLIFrameElement"
  },
  ImageData: {
    "": "Interceptor;height=,width=",
    $isImageData: true,
    "%": "ImageData"
  },
  ImageElement: {
    "": "HtmlElement;height%,src},width%",
    "%": "HTMLImageElement"
  },
  InputElement: {
    "": "HtmlElement;height%,src},type=,width%",
    $isNode: true,
    "%": "HTMLInputElement"
  },
  KeyboardEvent: {
    "": "UIEvent;",
    get$keyCode: function(receiver) {
      return receiver.keyCode;
    },
    "%": "KeyboardEvent"
  },
  KeygenElement: {
    "": "HtmlElement;type=",
    "%": "HTMLKeygenElement"
  },
  LinkElement: {
    "": "HtmlElement;type=",
    "%": "HTMLLinkElement"
  },
  MediaElement: {
    "": "HtmlElement;error=,src}",
    "%": "HTMLAudioElement;HTMLMediaElement"
  },
  MouseEvent: {
    "": "UIEvent;button=",
    get$client: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Point(receiver.clientX, receiver.clientY), [null]);
    },
    get$movement: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Point(receiver.webkitMovementX, receiver.webkitMovementY), [null]);
    },
    "%": ";DragEvent|MSPointerEvent|MouseEvent|PointerEvent"
  },
  Node: {
    "": "EventTarget;",
    toString$0: [function(receiver) {
      var t1 = receiver.nodeValue;
      return t1 == null ? J.Interceptor.prototype.toString$0.call(this, receiver) : t1;
    }, "call$0", "get$toString", 0, 0, null],
    $isNode: true,
    "%": "Attr|DocumentFragment|DocumentType|Entity|Notation|ShadowRoot;Node"
  },
  NodeList: {
    "": "Interceptor_ListMixin_ImmutableListMixin0;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 23],
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isJavaScriptIndexingBehavior: true,
    "%": "NodeList|RadioNodeList"
  },
  OListElement: {
    "": "HtmlElement;type=",
    "%": "HTMLOListElement"
  },
  ObjectElement: {
    "": "HtmlElement;height%,type=,width%",
    "%": "HTMLObjectElement"
  },
  OutputElement: {
    "": "HtmlElement;type=",
    "%": "HTMLOutputElement"
  },
  ProgressEvent: {
    "": "Event;",
    "%": "ProgressEvent|ResourceProgressEvent|XMLHttpRequestProgressEvent"
  },
  ScriptElement: {
    "": "HtmlElement;src},type=",
    "%": "HTMLScriptElement"
  },
  SelectElement: {
    "": "HtmlElement;length=,type=",
    "%": "HTMLSelectElement"
  },
  SourceElement: {
    "": "HtmlElement;src},type=",
    "%": "HTMLSourceElement"
  },
  SpeechRecognitionError: {
    "": "Event;error=",
    "%": "SpeechRecognitionError"
  },
  StyleElement: {
    "": "HtmlElement;type=",
    "%": "HTMLStyleElement"
  },
  TextAreaElement: {
    "": "HtmlElement;type=",
    "%": "HTMLTextAreaElement"
  },
  Touch: {
    "": "Interceptor;identifier=",
    get$client: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Point(receiver.clientX, receiver.clientY), [null]);
    },
    get$page: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Point(receiver.pageX, receiver.pageY), [null]);
    },
    "%": "Touch"
  },
  TouchEvent: {
    "": "UIEvent;changedTouches=,touches=",
    "%": "TouchEvent"
  },
  TouchList: {
    "": "Interceptor_ListMixin_ImmutableListMixin1;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 23],
    $isList: true,
    $asList: function() {
      return [W.Touch];
    },
    $isEfficientLength: true,
    $isJavaScriptIndexingBehavior: true,
    "%": "TouchList"
  },
  TrackElement: {
    "": "HtmlElement;src}",
    "%": "HTMLTrackElement"
  },
  UIEvent: {
    "": "Event;",
    get$page: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Point(receiver.pageX, receiver.pageY), [null]);
    },
    "%": "CompositionEvent|FocusEvent|SVGZoomEvent|TextEvent;UIEvent"
  },
  VideoElement: {
    "": "MediaElement;height%,width%",
    "%": "HTMLVideoElement"
  },
  WheelEvent: {
    "": "MouseEvent;",
    get$deltaY: function(receiver) {
      var detail;
      if (receiver.deltaY !== undefined)
        return receiver.deltaY;
      else if (receiver.wheelDelta !== undefined)
        return -receiver.wheelDelta;
      else if (receiver.detail !== undefined) {
        if (receiver.axis == MouseScrollEvent.VERTICAL_AXIS) {
          detail = receiver.detail;
          if (Math.abs(detail) < 100)
            return -detail * 40;
          return -detail;
        }
        return 0;
      }
      throw H.wrapException(P.UnsupportedError$("deltaY is not supported"));
    },
    get$deltaX: function(receiver) {
      var detail;
      if (receiver.deltaX !== undefined)
        return receiver.deltaX;
      else if (receiver.wheelDeltaX !== undefined)
        return -receiver.wheelDeltaX;
      else if (receiver.detail !== undefined) {
        if (receiver.axis !== undefined && receiver.axis == MouseScrollEvent.HORIZONTAL_AXIS) {
          detail = receiver.detail;
          if (detail < 100)
            return -detail * 40;
          return -detail;
        }
        return 0;
      }
      throw H.wrapException(P.UnsupportedError$("deltaX is not supported"));
    },
    $isWheelEvent: true,
    "%": "MouseScrollEvent|MouseWheelEvent|WheelEvent"
  },
  Window: {
    "": "EventTarget;",
    _html$_requestAnimationFrame$1: [function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(callback, 1));
    }, "call$1", "get$_html$_requestAnimationFrame", 2, 0, null, 93],
    _ensureRequestAnimationFrame$0: [function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
        (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
    }, "call$0", "get$_ensureRequestAnimationFrame", 0, 0, null],
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    $isWindow: true,
    "%": "DOMWindow|Window"
  },
  _ClientRect: {
    "": "Interceptor;height=,left=,top=,width=",
    toString$0: [function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(receiver, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = J.getInterceptor$x(other);
      if (typeof other !== "object" || other === null || !t1.$isRectangle)
        return false;
      t2 = receiver.left;
      t3 = t1.get$left(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = receiver.top;
        t3 = t1.get$top(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.width;
          t3 = t1.get$width(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = receiver.height;
            t1 = t1.get$height(other);
            t1 = t2 == null ? t1 == null : t2 === t1;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(receiver) {
      var t1, t2, t3, t4, hash;
      t1 = J.get$hashCode$(receiver.left);
      t2 = J.get$hashCode$(receiver.top);
      t3 = J.get$hashCode$(receiver.width);
      t4 = J.get$hashCode$(receiver.height);
      t4 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4);
      hash = 536870911 & t4 + ((67108863 & t4) << 3 >>> 0);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    $isRectangle: true,
    $asRectangle: function() {
      return [null];
    },
    "%": "ClientRect|DOMRect"
  },
  Interceptor_ListMixin: {
    "": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true
  },
  Interceptor_ListMixin_ImmutableListMixin: {
    "": "Interceptor_ListMixin+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true
  },
  HttpRequest_request_closure0: {
    "": "Closure:183;xhr_0",
    call$2: [function(header, value) {
      this.xhr_0.setRequestHeader(header, value);
    }, "call$2", null, 4, 0, null, 222, 14, "call"],
    $isFunction: true
  },
  HttpRequest_request_closure: {
    "": "Closure:130;completer_1,xhr_2",
    call$1: [function(e) {
      var t1, t2, t3;
      t1 = this.xhr_2;
      t2 = t1.status;
      if (typeof t2 !== "number")
        return t2.$ge();
      t2 = t2 >= 200 && t2 < 300 || t2 === 0 || t2 === 304;
      t3 = this.completer_1;
      if (t2) {
        t2 = t3.future;
        if (t2._state !== 0)
          H.throwExpression(P.StateError$("Future already completed"));
        t2._asyncComplete$1(t1);
      } else
        t3.completeError$1(e);
    }, "call$1", null, 2, 0, null, 9, "call"],
    $isFunction: true
  },
  Interceptor_ListMixin0: {
    "": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true
  },
  Interceptor_ListMixin_ImmutableListMixin0: {
    "": "Interceptor_ListMixin0+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true
  },
  Interceptor_ListMixin1: {
    "": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Touch];
    },
    $isEfficientLength: true
  },
  Interceptor_ListMixin_ImmutableListMixin1: {
    "": "Interceptor_ListMixin1+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Touch];
    },
    $isEfficientLength: true
  },
  EventStreamProvider: {
    "": "Object;_eventType",
    forTarget$2$useCapture: [function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._EventStream(e, this._eventType, useCapture), [null]);
    }, function(e) {
      return this.forTarget$2$useCapture(e, false);
    }, "forTarget$1", "call$2$useCapture", null, "get$forTarget", 2, 3, null, 134, 9, 155],
    forElement$2$useCapture: [function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._ElementEventStreamImpl(e, this._eventType, useCapture), [null]);
    }, function(e) {
      return this.forElement$2$useCapture(e, false);
    }, "forElement$1", "call$2$useCapture", null, "get$forElement", 2, 3, null, 134, 9, 155]
  },
  _EventStream: {
    "": "Stream;_target,_eventType,_useCapture",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1 = new W._EventStreamSubscription(0, this._target, this._eventType, W._wrapZone(onData), this._useCapture);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      t1._tryResume$0();
      return t1;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", "call$4$cancelOnError$onDone$onError", null, "get$listen", 2, 7, null, 52, 52, 52, 177, 178, 179, 99],
    $asStream: null
  },
  _ElementEventStreamImpl: {
    "": "_EventStream;_target,_eventType,_useCapture",
    $as_EventStream: null
  },
  _EventStreamSubscription: {
    "": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
    cancel$0: [function() {
      if (this._target == null)
        return;
      this._unlisten$0();
      this._target = null;
      this._onData = null;
    }, "call$0", "get$cancel", 0, 0, null],
    pause$1: [function(_, resumeSignal) {
      if (this._target == null)
        return;
      this._pauseCount = this._pauseCount + 1;
      this._unlisten$0();
    }, function($receiver) {
      return this.pause$1($receiver, null);
    }, "pause$0", "call$1", null, "get$pause", 0, 2, null, 52, 200],
    resume$0: [function() {
      if (this._target == null || this._pauseCount <= 0)
        return;
      this._pauseCount = this._pauseCount - 1;
      this._tryResume$0();
    }, "call$0", "get$resume", 0, 0, null],
    _tryResume$0: [function() {
      var t1 = this._onData;
      if (t1 != null && this._pauseCount <= 0)
        J.addEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    }, "call$0", "get$_tryResume", 0, 0, null],
    _unlisten$0: [function() {
      var t1 = this._onData;
      if (t1 != null)
        J.removeEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    }, "call$0", "get$_unlisten", 0, 0, null],
    $asStreamSubscription: null
  },
  _CustomEventStreamProvider: {
    "": "Object;_eventTypeGetter",
    _eventTypeGetter$1: function(arg0) {
      return this._eventTypeGetter.call$1(arg0);
    },
    forElement$2$useCapture: [function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._ElementEventStreamImpl(e, this._eventTypeGetter$1(e), useCapture), [null]);
    }, function(e) {
      return this.forElement$2$useCapture(e, false);
    }, "forElement$1", "call$2$useCapture", null, "get$forElement", 2, 3, null, 134, 9, 155]
  },
  ImmutableListMixin: {
    "": "Object;",
    get$iterator: function(receiver) {
      return new W.FixedSizeListIterator(receiver, this.get$length(receiver), -1, null);
    },
    $isList: true,
    $asList: null,
    $isEfficientLength: true
  },
  FixedSizeListIterator: {
    "": "Object;_array,_html$_length,_position,_html$_current",
    moveNext$0: [function() {
      var nextPosition, t1;
      nextPosition = this._position + 1;
      t1 = this._html$_length;
      if (nextPosition < t1) {
        this._html$_current = J.$index$asx(this._array, nextPosition);
        this._position = nextPosition;
        return true;
      }
      this._html$_current = null;
      this._position = t1;
      return false;
    }, "call$0", "get$moveNext", 0, 0, null],
    get$current: function() {
      return this._html$_current;
    }
  }
}],
["dart.dom.indexed_db", "dart:indexed_db", , P, {
  "": "",
  KeyRange: {
    "": "Interceptor;",
    $isKeyRange: true,
    "%": "IDBKeyRange"
  }
}],
["dart.dom.svg", "dart:svg", , P, {
  "": "",
  FEBlendElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEBlendElement"
  },
  FEColorMatrixElement: {
    "": "SvgElement;type=,height=,width=,x=,y=",
    "%": "SVGFEColorMatrixElement"
  },
  FEComponentTransferElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEComponentTransferElement"
  },
  FECompositeElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFECompositeElement"
  },
  FEConvolveMatrixElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEConvolveMatrixElement"
  },
  FEDiffuseLightingElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEDiffuseLightingElement"
  },
  FEDisplacementMapElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEDisplacementMapElement"
  },
  FEFloodElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEFloodElement"
  },
  FEGaussianBlurElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEGaussianBlurElement"
  },
  FEImageElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEImageElement"
  },
  FEMergeElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEMergeElement"
  },
  FEMorphologyElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEMorphologyElement"
  },
  FEOffsetElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEOffsetElement"
  },
  FEPointLightElement: {
    "": "SvgElement;x=,y=",
    "%": "SVGFEPointLightElement"
  },
  FESpecularLightingElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFESpecularLightingElement"
  },
  FESpotLightElement: {
    "": "SvgElement;x=,y=",
    "%": "SVGFESpotLightElement"
  },
  FETileElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFETileElement"
  },
  FETurbulenceElement: {
    "": "SvgElement;type=,height=,width=,x=,y=",
    "%": "SVGFETurbulenceElement"
  },
  FilterElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFilterElement"
  },
  ForeignObjectElement: {
    "": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGForeignObjectElement"
  },
  GraphicsElement: {
    "": "SvgElement;",
    "%": "SVGAElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGEllipseElement|SVGGElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement|SVGSwitchElement;SVGGraphicsElement"
  },
  ImageElement0: {
    "": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGImageElement"
  },
  MaskElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGMaskElement"
  },
  PatternElement: {
    "": "SvgElement;height=,width=,x=,y=",
    "%": "SVGPatternElement"
  },
  RectElement: {
    "": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGRectElement"
  },
  ScriptElement0: {
    "": "SvgElement;type=",
    "%": "SVGScriptElement"
  },
  StyleElement0: {
    "": "SvgElement;type=",
    "%": "SVGStyleElement"
  },
  SvgElement: {
    "": "Element;",
    "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGCursorElement|SVGDescElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMetadataElement|SVGMissingGlyphElement|SVGRadialGradientElement|SVGSetElement|SVGStopElement|SVGSymbolElement|SVGTitleElement|SVGVKernElement|SVGViewElement;SVGElement"
  },
  SvgSvgElement: {
    "": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGSVGElement"
  },
  TextContentElement: {
    "": "GraphicsElement;",
    "%": "SVGTextPathElement;SVGTextContentElement"
  },
  TextPositioningElement: {
    "": "TextContentElement;x=,y=",
    "%": "SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTextPositioningElement"
  },
  UseElement: {
    "": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGUseElement"
  }
}],
["dart.dom.web_audio", "dart:web_audio", , P, {
  "": "",
  AudioBuffer: {
    "": "Interceptor;length=",
    "%": "AudioBuffer"
  },
  AudioBufferSourceNode: {
    "": "AudioSourceNode;",
    start$3: [function(receiver, when, grainOffset, grainDuration) {
      if (!!receiver.start)
        receiver.start(when);
      else
        receiver.noteOn(when);
    }, function($receiver, when) {
      return this.start$3($receiver, when, null, null);
    }, "start$1", "call$3", null, "get$start", 2, 4, null, 52, 52, 161, 162, 163],
    "%": "AudioBufferSourceNode"
  },
  AudioContext: {
    "": "EventTarget;",
    _decodeAudioData$3: [function(receiver, audioData, successCallback, errorCallback) {
      return receiver.decodeAudioData(audioData, H.convertDartClosureToJS(successCallback, 1), H.convertDartClosureToJS(errorCallback, 1));
    }, "call$3", "get$_decodeAudioData", 4, 2, null, 52, 164, 165, 166],
    decodeAudioData$1: [function(receiver, audioData) {
      var t1, completer;
      t1 = P.AudioBuffer;
      completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(t1)), [t1]);
      this._decodeAudioData$3(receiver, audioData, new P.AudioContext_decodeAudioData_closure(completer), new P.AudioContext_decodeAudioData_closure0(completer));
      return completer.future;
    }, "call$1", "get$decodeAudioData", 2, 0, null, 164],
    createGain$0: [function(receiver) {
      if (receiver.createGain !== undefined)
        return receiver.createGain();
      else
        return receiver.createGainNode();
    }, "call$0", "get$createGain", 0, 0, null],
    "%": "AudioContext|OfflineAudioContext|webkitAudioContext"
  },
  AudioNode: {
    "": "EventTarget;",
    "%": "AudioDestinationNode|AudioGainNode|GainNode;AudioNode"
  },
  AudioSourceNode: {
    "": "AudioNode;",
    "%": ";AudioSourceNode"
  },
  AudioContext_decodeAudioData_closure: {
    "": "Closure:130;completer_0",
    call$1: [function(value) {
      var t1 = this.completer_0.future;
      if (t1._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    }, "call$1", null, 2, 0, null, 14, "call"],
    $isFunction: true
  },
  AudioContext_decodeAudioData_closure0: {
    "": "Closure:130;completer_1",
    call$1: [function(error) {
      this.completer_1.completeError$1(error);
    }, "call$1", null, 2, 0, null, 87, "call"],
    $isFunction: true
  }
}],
["dart.js", "dart:js", , P, {
  "": "",
  _callDartFunction: [function(callback, captureThis, $self, $arguments) {
    var arguments0;
    if (captureThis === true) {
      arguments0 = [$self];
      C.JSArray_methods.addAll$1(arguments0, $arguments);
      $arguments = arguments0;
    }
    return P._convertToJS(H.Primitives_applyFunction(callback, P.List_List$from(J.map$1$ax($arguments, P._convertToDart$closure()), true, null), P.Function__toMangledNames(null)));
  }, "call$4", "_callDartFunction$closure", 8, 0, null, 93, 129, 103, 58],
  _defineProperty: [function(o, $name, value) {
    var exception;
    if (Object.isExtensible(o))
      try {
        Object.defineProperty(o, $name, { value: value});
        return true;
      } catch (exception) {
        H.unwrapException(exception);
      }

    return false;
  }, "call$3", "_defineProperty$closure", 6, 0, null, 128, 41, 14],
  _convertToJS: [function(o) {
    var t1;
    if (o == null)
      return;
    else {
      if (typeof o !== "string")
        if (typeof o !== "number")
          if (typeof o !== "boolean") {
            t1 = J.getInterceptor(o);
            t1 = typeof o === "object" && o !== null && !!t1.$isBlob || typeof o === "object" && o !== null && !!t1.$isEvent || typeof o === "object" && o !== null && !!t1.$isKeyRange || typeof o === "object" && o !== null && !!t1.$isImageData || typeof o === "object" && o !== null && !!t1.$isNode || typeof o === "object" && o !== null && !!t1.$isTypedData || typeof o === "object" && o !== null && !!t1.$isWindow;
          } else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return o;
      else {
        t1 = J.getInterceptor(o);
        if (typeof o === "object" && o !== null && !!t1.$isDateTime)
          return H.Primitives_lazyAsJsDate(o);
        else if (typeof o === "object" && o !== null && !!t1.$isJsObject)
          return o._jsObject;
        else if (typeof o === "object" && o !== null && !!t1.$isFunction)
          return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
        else
          return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0());
      }
    }
  }, "call$1", "_convertToJS$closure", 2, 0, 130, 128],
  _getJsProxy: [function(o, propertyName, createProxy) {
    var jsProxy = o[propertyName];
    if (jsProxy == null) {
      jsProxy = createProxy.call$1(o);
      P._defineProperty(o, propertyName, jsProxy);
    }
    return jsProxy;
  }, "call$3", "_getJsProxy$closure", 6, 0, null, 128, 39, 131],
  _convertToDart: [function(o) {
    var t1;
    if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
      return o;
    else {
      if (o instanceof Object) {
        t1 = J.getInterceptor(o);
        t1 = typeof o === "object" && o !== null && !!t1.$isBlob || typeof o === "object" && o !== null && !!t1.$isEvent || typeof o === "object" && o !== null && !!t1.$isKeyRange || typeof o === "object" && o !== null && !!t1.$isImageData || typeof o === "object" && o !== null && !!t1.$isNode || typeof o === "object" && o !== null && !!t1.$isTypedData || typeof o === "object" && o !== null && !!t1.$isWindow;
      } else
        t1 = false;
      if (t1)
        return o;
      else if (o instanceof Date)
        return P.DateTime$fromMillisecondsSinceEpoch(o.getMilliseconds(), false);
      else if (o.constructor === DartObject)
        return o.o;
      else
        return P._wrapToDart(o);
    }
  }, "call$1", "_convertToDart$closure", 2, 0, 132, 128],
  _wrapToDart: [function(o) {
    if (typeof o == "function")
      return P._getDartProxy(o, "_$dart_dartClosure", new P._wrapToDart_closure());
    else if (o instanceof Array)
      return P._getDartProxy(o, "_$dart_dartObject", new P._wrapToDart_closure0());
    else
      return P._getDartProxy(o, "_$dart_dartObject", new P._wrapToDart_closure1());
  }, "call$1", "_wrapToDart$closure", 2, 0, null, 128],
  _getDartProxy: [function(o, propertyName, createProxy) {
    var dartProxy = o[propertyName];
    if (dartProxy == null || !(o instanceof Object)) {
      dartProxy = createProxy.call$1(o);
      P._defineProperty(o, propertyName, dartProxy);
    }
    return dartProxy;
  }, "call$3", "_getDartProxy$closure", 6, 0, null, 128, 39, 131],
  JsObject: {
    "": "Object;_jsObject",
    $index: [function(_, property) {
      if (typeof property !== "string" && typeof property !== "number")
        throw H.wrapException(new P.ArgumentError("property is not a String or num"));
      return P._convertToDart(this._jsObject[property]);
    }, "call$1", "get$[]", 2, 0, null, 43],
    $indexSet: [function(_, property, value) {
      if (typeof property !== "string" && typeof property !== "number")
        throw H.wrapException(new P.ArgumentError("property is not a String or num"));
      this._jsObject[property] = P._convertToJS(value);
    }, "call$2", "get$[]=", 4, 0, null, 43, 14],
    get$hashCode: function(_) {
      return 0;
    },
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isJsObject && this._jsObject === other._jsObject;
    }, "call$1", "get$==", 2, 0, null, 160],
    toString$0: [function(_) {
      var t1, exception;
      try {
        t1 = String(this._jsObject);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        return P.Object.prototype.toString$0.call(this, this);
      }

    }, "call$0", "get$toString", 0, 0, null],
    callMethod$2: [function(method, args) {
      var t1, t2;
      t1 = this._jsObject;
      if (args == null)
        t2 = null;
      else {
        args.toString;
        t2 = P.List_List$from(H.setRuntimeTypeInfo(new H.MappedListIterable(args, P._convertToJS$closure()), [null, null]), true, null);
      }
      return P._convertToDart(t1[method].apply(t1, t2));
    }, function(method) {
      return this.callMethod$2(method, null);
    }, "callMethod$1", "call$2", null, "get$callMethod", 2, 2, null, 52, 120, 223],
    $isJsObject: true
  },
  JsFunction: {
    "": "JsObject;_jsObject"
  },
  JsArray: {
    "": "JsObject_ListMixin;_jsObject",
    $index: [function(_, index) {
      var t1;
      if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index)) {
        if (typeof index === "number" && Math.floor(index) === index)
          if (!(index < 0)) {
            t1 = P.JsObject.prototype.$index.call(this, this, "length");
            if (typeof t1 !== "number")
              return H.iae(t1);
            t1 = index >= t1;
          } else
            t1 = true;
        else
          t1 = false;
        if (t1)
          H.throwExpression(P.RangeError$range(index, 0, P.JsObject.prototype.$index.call(this, this, "length")));
      }
      return P.JsObject.prototype.$index.call(this, this, index);
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(_, index, value) {
      var t1;
      if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index)) {
        if (typeof index === "number" && Math.floor(index) === index)
          if (!(index < 0)) {
            t1 = P.JsObject.prototype.$index.call(this, this, "length");
            if (typeof t1 !== "number")
              return H.iae(t1);
            t1 = index >= t1;
          } else
            t1 = true;
        else
          t1 = false;
        if (t1)
          H.throwExpression(P.RangeError$range(index, 0, P.JsObject.prototype.$index.call(this, this, "length")));
      }
      P.JsObject.prototype.$indexSet.call(this, this, index, value);
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    get$length: function(_) {
      return P.JsObject.prototype.$index.call(this, this, "length");
    },
    $asJsObject_ListMixin: null,
    $asList: null
  },
  JsObject_ListMixin: {
    "": "JsObject+ListMixin;",
    $asList: null,
    $isList: true,
    $isEfficientLength: true
  },
  _convertToJS_closure: {
    "": "Closure:130;",
    call$1: [function(o) {
      var jsFunction = function(_call, f, captureThis) {return function() {return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));}}(P._callDartFunction, o, false);
      P._defineProperty(jsFunction, "_$dart_dartClosure", o);
      return jsFunction;
    }, "call$1", null, 2, 0, null, 128, "call"],
    $isFunction: true
  },
  _convertToJS_closure0: {
    "": "Closure:130;",
    call$1: [function(o) {
      return new DartObject(o);
    }, "call$1", null, 2, 0, null, 128, "call"],
    $isFunction: true
  },
  _wrapToDart_closure: {
    "": "Closure:130;",
    call$1: [function(o) {
      return new P.JsFunction(o);
    }, "call$1", null, 2, 0, null, 128, "call"],
    $isFunction: true
  },
  _wrapToDart_closure0: {
    "": "Closure:130;",
    call$1: [function(o) {
      return H.setRuntimeTypeInfo(new P.JsArray(o), [null]);
    }, "call$1", null, 2, 0, null, 128, "call"],
    $isFunction: true
  },
  _wrapToDart_closure1: {
    "": "Closure:130;",
    call$1: [function(o) {
      return new P.JsObject(o);
    }, "call$1", null, 2, 0, null, 128, "call"],
    $isFunction: true
  }
}],
["dart.math", "dart:math", , P, {
  "": "",
  _JenkinsSmiHash_combine0: [function(hash, value) {
    hash = 536870911 & hash + value;
    hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
    return hash ^ hash >>> 6;
  }, "call$2", "_JenkinsSmiHash_combine0$closure", 4, 0, null, 127, 14],
  _JenkinsSmiHash_finish: [function(hash) {
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >>> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  }, "call$1", "_JenkinsSmiHash_finish$closure", 2, 0, null, 127],
  Point: {
    "": "Object;x>,y>",
    toString$0: [function(_) {
      return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isPoint)
        return false;
      t1 = this.x;
      t2 = other.x;
      if (t1 == null ? t2 == null : t1 === t2) {
        t1 = this.y;
        t2 = other.y;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(this.x);
      t2 = J.get$hashCode$(this.y);
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2));
    },
    $add: [function(_, other) {
      var t1, t2, t3, t4;
      t1 = this.x;
      t2 = J.getInterceptor$x(other);
      t3 = t2.get$x(other);
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = this.y;
      t2 = t2.get$y(other);
      if (typeof t4 !== "number")
        return t4.$add();
      if (typeof t2 !== "number")
        return H.iae(t2);
      t2 = new P.Point(t1 + t3, t4 + t2);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      return t2;
    }, "call$1", "get$+", 2, 0, null, 160],
    $sub: [function(_, other) {
      var t1, t2, t3;
      t1 = this.x;
      t2 = C.JSInt_methods.get$x(other);
      if (typeof t1 !== "number")
        return t1.$sub();
      t2 = C.JSInt_methods.$sub(t1, t2);
      t1 = this.y;
      t3 = C.JSInt_methods.get$y(other);
      if (typeof t1 !== "number")
        return t1.$sub();
      t3 = new P.Point(t2, C.JSInt_methods.$sub(t1, t3));
      t3.$builtinTypeInfo = this.$builtinTypeInfo;
      return t3;
    }, "call$1", "get$-", 2, 0, null, 160],
    $isPoint: true
  },
  _RectangleBase: {
    "": "Object;",
    toString$0: [function(_) {
      return "Rectangle (" + H.S(this.get$left(this)) + ", " + H.S(this.top) + ") " + H.S(this.width) + " x " + H.S(this.height);
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = J.getInterceptor$x(other);
      if (typeof other !== "object" || other === null || !t1.$isRectangle)
        return false;
      t2 = this.get$left(this);
      t3 = t1.get$left(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = this.top;
        t3 = t1.get$top(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = this.width;
          t3 = t1.get$width(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = this.height;
            t1 = t1.get$height(other);
            t1 = t2 == null ? t1 == null : t2 === t1;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    }, "call$1", "get$==", 2, 0, null, 160],
    get$hashCode: function(_) {
      var t1, t2, t3, t4;
      t1 = J.get$hashCode$(this.get$left(this));
      t2 = J.get$hashCode$(this.top);
      t3 = J.get$hashCode$(this.width);
      t4 = J.get$hashCode$(this.height);
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2), t3), t4));
    }
  },
  Rectangle: {
    "": "_RectangleBase;left>,top>,width>,height>",
    $isRectangle: true,
    $asRectangle: null,
    $as_RectangleBase: null
  }
}],
["dart.typed_data", "dart:typed_data", , P, {
  "": "",
  TypedData: {
    "": "Interceptor;",
    _invalidIndex$2: [function(receiver, index, $length) {
      var t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$ge(index, $length))
        throw H.wrapException(P.RangeError$range(index, 0, $length));
      else
        throw H.wrapException(P.ArgumentError$("Invalid list index " + H.S(index)));
    }, "call$2", "get$_invalidIndex", 4, 0, null, 23, 167],
    $isTypedData: true,
    "%": "DataView;ArrayBufferView;_NativeTypedArray|_NativeTypedArray_ListMixin|_NativeTypedArray_ListMixin_FixedLengthListMixin|_NativeTypedArrayOfDouble|_NativeTypedArray_ListMixin0|_NativeTypedArray_ListMixin_FixedLengthListMixin0|_NativeTypedArrayOfInt"
  },
  Float32List: {
    "": "_NativeTypedArrayOfDouble;",
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": "Float32Array"
  },
  Float64List: {
    "": "_NativeTypedArrayOfDouble;",
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": "Float64Array"
  },
  Int16List: {
    "": "_NativeTypedArrayOfInt;",
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": "Int16Array"
  },
  Int32List: {
    "": "_NativeTypedArrayOfInt;",
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": "Int32Array"
  },
  Int8List: {
    "": "_NativeTypedArrayOfInt;",
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": "Int8Array"
  },
  Uint16List: {
    "": "_NativeTypedArrayOfInt;",
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": "Uint16Array"
  },
  Uint32List: {
    "": "_NativeTypedArrayOfInt;",
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": "Uint32Array"
  },
  Uint8ClampedList: {
    "": "_NativeTypedArrayOfInt;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": "CanvasPixelArray|Uint8ClampedArray"
  },
  Uint8List: {
    "": "_NativeTypedArrayOfInt;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 23],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 23, 14],
    "%": ";Uint8Array"
  },
  _NativeTypedArray: {
    "": "TypedData;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: true
  },
  _NativeTypedArrayOfDouble: {
    "": "_NativeTypedArray_ListMixin_FixedLengthListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true
  },
  _NativeTypedArray_ListMixin: {
    "": "_NativeTypedArray+ListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true
  },
  _NativeTypedArray_ListMixin_FixedLengthListMixin: {
    "": "_NativeTypedArray_ListMixin+FixedLengthListMixin;"
  },
  _NativeTypedArrayOfInt: {
    "": "_NativeTypedArray_ListMixin_FixedLengthListMixin0;",
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true
  },
  _NativeTypedArray_ListMixin0: {
    "": "_NativeTypedArray+ListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true
  },
  _NativeTypedArray_ListMixin_FixedLengthListMixin0: {
    "": "_NativeTypedArray_ListMixin0+FixedLengthListMixin;"
  }
}],
["dart2js._js_primitives", "dart:_js_primitives", , H, {
  "": "",
  printString: [function(string) {
    if (typeof dartPrint == "function") {
      dartPrint(string);
      return;
    }
    if (typeof console == "object" && typeof console.log == "function") {
      console.log(string);
      return;
    }
    if (typeof window == "object")
      return;
    if (typeof print == "function") {
      print(string);
      return;
    }
    throw "Unable to print message: " + String(string);
  }, "call$1", "printString$closure", 2, 0, null, 133]
}],
["game_loop_common", "package:game_loop/game_loop_common.dart", , B, {
  "": "",
  GameLoop: {
    "": "Object;",
    processTimers$0: [function() {
      var t1, _timersLength, t2, i, lastElement, t3;
      t1 = this._timers;
      _timersLength = t1.length;
      for (t2 = this.updateTimeStep, i = 0; i < _timersLength; ++i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1[i]._update$1(t2);
      }
      for (i = t1.length - 1; i >= 0; --i) {
        t2 = t1.length;
        lastElement = t2 - 1;
        if (i >= t2)
          return H.ioore(t1, i);
        if (t1[i].get$_isDead()) {
          if (i !== lastElement) {
            t2 = t1.length;
            if (lastElement < 0 || lastElement >= t2)
              return H.ioore(t1, lastElement);
            t3 = t1[lastElement];
            if (i >= t2)
              return H.ioore(t1, i);
            t1[i] = t3;
          }
          if (0 >= t1.length)
            return H.ioore(t1, 0);
          t1.pop();
        }
      }
    }, "call$0", "get$processTimers", 0, 0, null],
    addTimer$3$periodic: [function(callback, delay, periodic) {
      var timer = new B.GameLoopTimer(this, callback, 0, delay, periodic);
      timer._timeToFireRemaining = delay;
      this._timers.push(timer);
      return timer;
    }, function(callback, delay) {
      return this.addTimer$3$periodic(callback, delay, false);
    }, "addTimer$2", "call$3$periodic", null, "get$addTimer", 4, 3, null, 134, 93, 224, 225],
    onUpdate$1: function(arg0) {
      return this.onUpdate.call$1(arg0);
    }
  },
  DigitalButton: {
    "": "Object;buttonId,framePressed@,frameReleased?,timePressed@,timeReleased?",
    get$down: function() {
      return this.framePressed > this.frameReleased;
    }
  },
  DigitalButtonEvent: {
    "": "Object;down<,frame,buttonId,time",
    toString$0: [function(_) {
      return "Button: " + H.S(this.buttonId) + " DOWN: " + this.down + " [" + this.frame + "@" + H.S(this.time) + "]";
    }, "call$0", "get$toString", 0, 0, null]
  },
  DigitalInput: {
    "": "Object;",
    digitalButtonEvent$1: [function($event) {
      var t1, button;
      t1 = this.buttons;
      button = t1.$index(t1, $event.buttonId);
      if (button == null)
        return;
      if ($event.down) {
        if (!button.get$down()) {
          button.set$framePressed($event.frame);
          button.set$timePressed($event.time);
        }
      } else {
        button.set$frameReleased($event.frame);
        button.set$timeReleased($event.time);
      }
    }, "call$1", "get$digitalButtonEvent", 2, 0, null, 201],
    isDown$1: [function(buttonId) {
      var t1, button;
      t1 = this.buttons;
      button = t1.$index(t1, buttonId);
      if (button == null)
        return false;
      return button.get$down();
    }, "call$1", "get$isDown", 2, 0, null, 226],
    pressed$1: [function(buttonId) {
      var t1, button;
      t1 = this.buttons;
      button = t1.$index(t1, buttonId);
      if (button == null)
        return false;
      return button.get$framePressed() === this.gameLoop._frameCounter;
    }, "call$1", "get$pressed", 2, 0, null, 226],
    timePressed$1: [function(buttonId) {
      var t1, button;
      t1 = this.buttons;
      button = t1.$index(t1, buttonId);
      if (button == null)
        return 0;
      return button.get$timePressed();
    }, "call$1", "get$timePressed", 2, 0, 227, 226],
    DigitalInput$2: function(gameLoop, buttonIds) {
      var t1, t2, buttonId;
      for (t1 = new H.ListIterator(buttonIds, buttonIds.length, 0, null), t2 = this.buttons; t1.moveNext$0();) {
        buttonId = t1._current;
        t2.$indexSet(t2, buttonId, new B.DigitalButton(buttonId, 0, 0, 0, 0));
      }
    }
  },
  GameLoopTimer: {
    "": "Object;gameLoop,onTimer,_timeToFireRemaining,_timeToFire,periodic",
    onTimer$1: function(arg0) {
      return this.onTimer.call$1(arg0);
    },
    _update$1: [function(dt) {
      var t1;
      if (this.get$_isDead())
        return;
      t1 = this._timeToFireRemaining - dt;
      this._timeToFireRemaining = t1;
      if (t1 <= 0)
        this.onTimer$1(this);
    }, "call$1", "get$_update", 2, 0, null, 228],
    get$_isDead: function() {
      var expired = this._timeToFireRemaining <= 0;
      if (expired && this.periodic) {
        this._timeToFireRemaining = this._timeToFire;
        return false;
      }
      if (expired)
        return true;
      else
        return false;
    }
  }
}],
["game_loop_html", "package:game_loop/game_loop_html.dart", , G, {
  "": "",
  GameLoopGamepad: {
    "": "Object;gameLoop,buttons,sticks",
    static: {"": "GameLoopGamepad_BUTTON0,GameLoopGamepad_BUTTON1,GameLoopGamepad_BUTTON2,GameLoopGamepad_BUTTON3,GameLoopGamepad_BUTTON4,GameLoopGamepad_BUTTON5,GameLoopGamepad_BUTTON6"}
  },
  GameLoopHtml: {
    "": "GameLoop;element,_frameCounter,_initialized,_interrupt,_previousFrameTime,_frameTime,_resizePending,_nextResize,game_loop_html$GameLoopHtml$maxAccumulatedTime,_accumulatedTime,_gameTime,_renderInterpolationFactor,resizeLimit,_pointerLock,_keyboard,_mouse,_gamepad0,_lastMousePos,_touchSet,_rafId,_touchEvents,_keyboardEvents,_mouseEvents,onRender,onResize,onFullscreenChange,onPointerLockChange,onTouchStart,onTouchEnd,onKeyDown,updateTimeStep,maxAccumulatedTime,_timers,onUpdate",
    get$width: function(_) {
      var t1, t2, t3, t4;
      t1 = this.element;
      t2 = t1.clientLeft;
      t3 = t1.clientTop;
      t4 = t1.clientWidth;
      t1 = t1.clientHeight;
      new P.Rectangle(t2, t3, t4, t1).$builtinTypeInfo = [null];
      return t4;
    },
    get$height: function(_) {
      var t1, t2, t3, t4;
      t1 = this.element;
      t2 = t1.clientLeft;
      t3 = t1.clientTop;
      t4 = t1.clientWidth;
      t1 = t1.clientHeight;
      new P.Rectangle(t2, t3, t4, t1).$builtinTypeInfo = [null];
      return t1;
    },
    _processKeyboardEvents$0: [function() {
      var t1, t2, keyboardEvent, t3, t4, t5, buttonId;
      for (t1 = this._keyboardEvents, t2 = new H.ListIterator(t1, t1.length, 0, null); t2.moveNext$0();) {
        keyboardEvent = t2._current;
        t3 = J.getInterceptor$x(keyboardEvent);
        t4 = t3.get$type(keyboardEvent);
        t5 = t3.get$timeStamp(keyboardEvent);
        if (typeof t5 !== "number")
          return t5.$div();
        buttonId = t3.get$keyCode(keyboardEvent);
        t3 = this._frameCounter;
        this._keyboard.digitalButtonEvent$1(new B.DigitalButtonEvent(t4 === "keydown", t3, buttonId, t5 / 1000));
      }
      C.JSArray_methods.set$length(t1, 0);
    }, "call$0", "get$_processKeyboardEvents", 0, 0, null],
    _processMouseEvents$0: [function() {
      var t1, docElem, box, t2, t3, t4, t5, canvasX, canvasY, mouseEvent, t6, t7, t8, time, mouseX, mouseY, x, y, clampX, withinCanvas, clampY, dx, dy, buttonId;
      t1 = this._mouse;
      t1._wheelDx = 0;
      t1._wheelDy = 0;
      t1._dx = 0;
      t1._dy = 0;
      docElem = document.documentElement;
      t1 = this.element;
      box = t1.getBoundingClientRect();
      t2 = J.getInterceptor$x(box);
      t3 = t2.get$left(box);
      t4 = window.pageXOffset;
      if (typeof t3 !== "number")
        return t3.$add();
      if (typeof t4 !== "number")
        return H.iae(t4);
      t5 = docElem.clientLeft;
      if (typeof t5 !== "number")
        return H.iae(t5);
      canvasX = C.JSNumber_methods.toInt$0(Math.floor(t3 + t4 - t5));
      t2 = t2.get$top(box);
      t5 = window.pageYOffset;
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t5 !== "number")
        return H.iae(t5);
      t4 = docElem.clientTop;
      if (typeof t4 !== "number")
        return H.iae(t4);
      canvasY = C.JSNumber_methods.toInt$0(Math.floor(t2 + t5 - t4));
      for (t2 = this._mouseEvents, t3 = new H.ListIterator(t2, t2.length, 0, null); t3.moveNext$0();) {
        mouseEvent = t3._current;
        t4 = J.getInterceptor$x(mouseEvent);
        t5 = t4.get$type(mouseEvent);
        t6 = t4.get$type(mouseEvent);
        t7 = t4.get$type(mouseEvent);
        t8 = t4.get$timeStamp(mouseEvent);
        if (typeof t8 !== "number")
          return t8.$div();
        time = t8 / 1000;
        if (t5 === "mousemove") {
          mouseX = t4.get$page(mouseEvent).x;
          mouseY = t4.get$page(mouseEvent).y;
          if (typeof mouseX !== "number")
            return mouseX.$sub();
          x = mouseX - canvasX;
          if (typeof mouseY !== "number")
            return mouseY.$sub();
          y = mouseY - canvasY;
          if (mouseX < canvasX) {
            clampX = 0;
            withinCanvas = false;
          } else {
            t5 = t1.clientLeft;
            t6 = t1.clientTop;
            t7 = t1.clientWidth;
            t8 = t1.clientHeight;
            new P.Rectangle(t5, t6, t7, t8).$builtinTypeInfo = [null];
            if (typeof t7 !== "number")
              return H.iae(t7);
            if (mouseX > canvasX + t7) {
              t5 = t1.clientLeft;
              t6 = t1.clientTop;
              clampX = t1.clientWidth;
              t7 = t1.clientHeight;
              new P.Rectangle(t5, t6, clampX, t7).$builtinTypeInfo = [null];
              withinCanvas = false;
            } else {
              clampX = x;
              withinCanvas = true;
            }
          }
          if (mouseY < canvasY) {
            clampY = 0;
            withinCanvas = false;
          } else {
            t5 = t1.clientLeft;
            t6 = t1.clientTop;
            t7 = t1.clientWidth;
            t8 = t1.clientHeight;
            new P.Rectangle(t5, t6, t7, t8).$builtinTypeInfo = [null];
            if (typeof t8 !== "number")
              return H.iae(t8);
            if (mouseY > canvasY + t8) {
              t5 = t1.clientLeft;
              t6 = t1.clientTop;
              t7 = t1.clientWidth;
              clampY = t1.clientHeight;
              new P.Rectangle(t5, t6, t7, clampY).$builtinTypeInfo = [null];
              withinCanvas = false;
            } else
              clampY = y;
          }
          t5 = this._pointerLock;
          t5.toString;
          t6 = document.webkitPointerLockElement;
          t5 = t5.gameLoop.element;
          if (t6 == null ? t5 == null : t6 === t5) {
            dx = t4.get$movement(mouseEvent).x;
            dy = t4.get$movement(mouseEvent).y;
          } else {
            t5 = t4.get$client(mouseEvent);
            t5 = t5.get$x(t5);
            t6 = this._lastMousePos;
            t6 = t6.get$x(t6);
            if (typeof t5 !== "number")
              return t5.$sub();
            if (typeof t6 !== "number")
              return H.iae(t6);
            dx = t5 - t6;
            t6 = t4.get$client(mouseEvent);
            t6 = t6.get$y(t6);
            t5 = this._lastMousePos;
            t5 = t5.get$y(t5);
            if (typeof t6 !== "number")
              return t6.$sub();
            if (typeof t5 !== "number")
              return H.iae(t5);
            dy = t6 - t5;
            this._lastMousePos = t4.get$client(mouseEvent);
          }
          this._lastMousePos = t4.get$client(mouseEvent);
          t4 = this._frameCounter;
          t5 = this._mouse;
          t5._x = x;
          t5._y = y;
          t5._time = time;
          t5._frame = t4;
          t4 = t5._dx;
          if (typeof dx !== "number")
            return H.iae(dx);
          t5._dx = t4 + dx;
          t4 = t5._dy;
          if (typeof dy !== "number")
            return H.iae(dy);
          t5._dy = t4 + dy;
          t5._clampX = clampX;
          t5._clampY = clampY;
          t5._withinCanvas = withinCanvas;
        } else if (t6 === "mousewheel") {
          H.interceptedTypeCast(mouseEvent, "$isWheelEvent");
          t5 = this._mouse;
          t4 = t4.get$deltaX(mouseEvent);
          t6 = C.WheelEvent_methods.get$deltaY(mouseEvent);
          t7 = t5._wheelDx;
          if (typeof t4 !== "number")
            return H.iae(t4);
          t5._wheelDx = t7 + t4;
          t4 = t5._wheelDy;
          if (typeof t6 !== "number")
            return H.iae(t6);
          t5._wheelDy = t4 + t6;
        } else {
          buttonId = t4.get$button(mouseEvent);
          t4 = this._frameCounter;
          this._mouse.digitalButtonEvent$1(new B.DigitalButtonEvent(t7 === "mousedown", t4, buttonId, time));
        }
      }
      C.JSArray_methods.set$length(t2, 0);
    }, "call$0", "get$_processMouseEvents", 0, 0, null],
    _processTouchEvents$0: [function() {
      var t1, t2, touchEvent;
      for (t1 = this._touchEvents, t2 = new H.ListIterator(t1, t1.length, 0, null); t2.moveNext$0();) {
        touchEvent = t2._current;
        switch (J.get$type$x(touchEvent)) {
          case 3:
            this._touchSet._game_loop_html$_start$1(touchEvent.get$event());
            break;
          case 2:
            this._touchSet._game_loop_html$_end$1(touchEvent.get$event());
            break;
          case 1:
            this._touchSet._move$1(touchEvent.get$event());
            break;
          default:
            throw H.wrapException(P.StateError$("Invalid _GameLoopTouchEven type."));
        }
      }
      C.JSArray_methods.set$length(t1, 0);
    }, "call$0", "get$_processTouchEvents", 0, 0, null],
    _requestAnimationFrame$1: [function(_, _0) {
      var t1, t2;
      if (this._previousFrameTime == null) {
        t1 = P.DateTime$_now().millisecondsSinceEpoch / 1000;
        this._frameTime = t1;
        this._previousFrameTime = t1;
        this._processKeyboardEvents$0();
        this._processMouseEvents$0();
        this._processTouchEvents$0();
        t1 = window;
        t2 = this.get$_requestAnimationFrame(this);
        C.Window_methods._ensureRequestAnimationFrame$0(t1);
        this._rafId = C.Window_methods._html$_requestAnimationFrame$1(t1, W._wrapZone(t2));
        return;
      }
      if (this._interrupt) {
        this._rafId = null;
        return;
      }
      t1 = window;
      t2 = this.get$_requestAnimationFrame(this);
      C.Window_methods._ensureRequestAnimationFrame$0(t1);
      this._rafId = C.Window_methods._html$_requestAnimationFrame$1(t1, W._wrapZone(t2));
      this._frameCounter = this._frameCounter + 1;
      this._previousFrameTime = this._frameTime;
      t2 = P.DateTime$_now().millisecondsSinceEpoch / 1000;
      this._frameTime = t2;
      t1 = this._previousFrameTime;
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = this._accumulatedTime + (t2 - t1);
      this._accumulatedTime = t1;
      t2 = this.game_loop_html$GameLoopHtml$maxAccumulatedTime;
      if (t1 > t2)
        this._accumulatedTime = t2;
      this._processKeyboardEvents$0();
      this._processMouseEvents$0();
      this._processTouchEvents$0();
      for (t1 = this.updateTimeStep; this._accumulatedTime >= t1;) {
        this.processTimers$0();
        this._gameTime = this._gameTime + t1;
        if (this.onUpdate != null)
          this.onUpdate$1(this);
        this._accumulatedTime = this._accumulatedTime - t1;
      }
      if (this._resizePending)
        t2 = false;
      else
        t2 = false;
      if (t2) {
        this.onResize$1(this, this);
        this._nextResize = this._frameTime + this.resizeLimit;
        this._resizePending = false;
      }
      if (this.onRender != null) {
        this._renderInterpolationFactor = this._accumulatedTime / t1;
        this.onRender$1(this);
      }
    }, "call$1", "get$_requestAnimationFrame", 2, 0, 229, 195],
    _fullscreenChange$1: [function(_) {
      return;
    }, "call$1", "get$_fullscreenChange", 2, 0, 230, 195],
    _fullscreenError$1: [function(_) {
      return;
    }, "call$1", "get$_fullscreenError", 2, 0, 230, 195],
    _touchStartEvent$1: [function($event) {
      this._touchEvents.push(new G._GameLoopTouchEvent($event, 3));
      J.preventDefault$0$x($event);
    }, "call$1", "get$_touchStartEvent", 2, 0, 231, 201],
    _touchMoveEvent$1: [function($event) {
      this._touchEvents.push(new G._GameLoopTouchEvent($event, 1));
      J.preventDefault$0$x($event);
    }, "call$1", "get$_touchMoveEvent", 2, 0, 231, 201],
    _touchEndEvent$1: [function($event) {
      this._touchEvents.push(new G._GameLoopTouchEvent($event, 2));
      J.preventDefault$0$x($event);
    }, "call$1", "get$_touchEndEvent", 2, 0, 231, 201],
    _keyDown$1: [function($event) {
      this._keyboardEvents.push($event);
    }, "call$1", "get$_keyDown", 2, 0, 232, 201],
    _keyUp$1: [function($event) {
      this._keyboardEvents.push($event);
    }, "call$1", "get$_keyUp", 2, 0, 232, 201],
    _mouseDown$1: [function($event) {
      this._mouseEvents.push($event);
    }, "call$1", "get$_mouseDown", 2, 0, 233, 201],
    _mouseUp$1: [function($event) {
      this._mouseEvents.push($event);
    }, "call$1", "get$_mouseUp", 2, 0, 233, 201],
    _mouseMove$1: [function($event) {
      this._mouseEvents.push($event);
    }, "call$1", "get$_mouseMove", 2, 0, 233, 201],
    _mouseWheel$1: [function($event) {
      this._mouseEvents.push($event);
      J.preventDefault$0$x($event);
    }, "call$1", "get$_mouseWheel", 2, 0, 233, 201],
    _resize$1: [function(_) {
      if (!this._resizePending)
        this._resizePending = true;
    }, "call$1", "get$_resize", 2, 0, 230, 195],
    onRender$1: function(arg0) {
      return this.onRender.call$1(arg0);
    },
    onResize$1: function($receiver, arg0) {
      return this.onResize.call$1(arg0);
    },
    GameLoopHtml$1: function(element) {
      var t1 = new G.Keyboard(this, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, B.DigitalButton), null);
      t1.DigitalInput$2(this, $.get$Keyboard__buttonIds());
      this._keyboard = t1;
      t1 = new G.Mouse(0, 0, 0, 0, 0, 0, 0, 0, false, 0, 0, this, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, B.DigitalButton), null);
      t1.DigitalInput$2(this, $.get$Mouse__buttonIds());
      this._mouse = t1;
      this._gamepad0 = new G.GameLoopGamepad(this, null, null);
      t1 = new G.PointerLock(this, true);
      t1.PointerLock$1(this);
      this._pointerLock = t1;
      this._touchSet = new G.GameLoopTouchSet(P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, G.GameLoopTouch), this);
    }
  },
  Keyboard: {
    "": "DigitalInput;gameLoop,buttons,interceptor",
    static: {"": "Keyboard_A,Keyboard_B,Keyboard_C,Keyboard_D,Keyboard_E,Keyboard_F,Keyboard_G,Keyboard_H,Keyboard_I,Keyboard_J,Keyboard_K,Keyboard_L,Keyboard_M,Keyboard_N,Keyboard_O,Keyboard_P,Keyboard_Q,Keyboard_R,Keyboard_S,Keyboard_T,Keyboard_U,Keyboard_V,Keyboard_W,Keyboard_X,Keyboard_Y,Keyboard_Z,Keyboard_SHIFT,Keyboard_CTRL,Keyboard_ALT,Keyboard_SPACE,Keyboard_ZERO,Keyboard_ONE,Keyboard_TWO,Keyboard_THREE,Keyboard_FOUR,Keyboard_FIVE,Keyboard_SIX,Keyboard_SEVEN,Keyboard_EIGHT,Keyboard_NINE,Keyboard_ENTER,Keyboard_UP,Keyboard_DOWN,Keyboard_LEFT,Keyboard_RIGHT,Keyboard_ESCAPE,Keyboard_APOSTROPHE,Keyboard_BACKSLASH,Keyboard_BACKSPACE,Keyboard_CAPS_LOCK,Keyboard_CLOSE_SQUARE_BRACKET,Keyboard_COMMA,Keyboard_CONTEXT_MENU,Keyboard_DASH,Keyboard_DELETE,Keyboard_END,Keyboard_EQUALS,Keyboard_F1,Keyboard_F2,Keyboard_F3,Keyboard_F4,Keyboard_F5,Keyboard_F6,Keyboard_F7,Keyboard_F8,Keyboard_F9,Keyboard_F10,Keyboard_F11,Keyboard_F12,Keyboard_FF_EQUALS,Keyboard_FF_SEMICOLON,Keyboard_FIRST_MEDIA_KEY,Keyboard_HOME,Keyboard_INSERT,Keyboard_LAST_MEDIA_KEY,Keyboard_MAC_ENTER,Keyboard_MAC_FF_META,Keyboard_META,Keyboard_NUM_CENTER,Keyboard_NUM_DELETE,Keyboard_NUM_DIVISION,Keyboard_NUM_EAST,Keyboard_NUM_EIGHT,Keyboard_NUM_FIVE,Keyboard_NUM_FOUR,Keyboard_NUM_INSERT,Keyboard_NUM_MINUS,Keyboard_NUM_MULTIPLY,Keyboard_NUM_NINE,Keyboard_NUM_NORTH,Keyboard_NUM_NORTH_EAST,Keyboard_NUM_NORTH_WEST,Keyboard_NUM_ONE,Keyboard_NUM_PERIOD,Keyboard_NUM_PLUS,Keyboard_NUM_SEVEN,Keyboard_NUM_SIX,Keyboard_NUM_SOUTH,Keyboard_NUM_SOUTH_EAST,Keyboard_NUM_SOUTH_WEST,Keyboard_NUM_THREE,Keyboard_NUM_TWO,Keyboard_NUM_WEST,Keyboard_NUM_ZERO,Keyboard_NUMLOCK,Keyboard_OPEN_SQUARE_BRACKET,Keyboard_PAGE_UP,Keyboard_PAGE_DOWN,Keyboard_PAUSE,Keyboard_PERIOD,Keyboard_PRINT_SCREEN,Keyboard_QUESTION_MARK,Keyboard_SCROLL_LOCK,Keyboard_SEMICOLON,Keyboard_SINGLE_QUOTE,Keyboard_SLASH,Keyboard_TAB,Keyboard_TILDE,Keyboard_WIN_IME,Keyboard_WIN_KEY,Keyboard_WIN_KEY_FF_LINUX,Keyboard_WIN_KEY_LEFT,Keyboard_WIN_KEY_RIGHT,Keyboard__buttonIds"}
  },
  Mouse: {
    "": "DigitalInput;_dx,_dy,_x,_y,_clampX,_clampY,_wheelDx,_wheelDy,_withinCanvas,_time,_frame,gameLoop,buttons,interceptor",
    get$x: function(_) {
      return this._x;
    },
    get$y: function(_) {
      return this._y;
    },
    static: {"": "Mouse_LEFT,Mouse_MIDDLE,Mouse_RIGHT,Mouse__buttonIds"}
  },
  PointerLock: {
    "": "Object;gameLoop,lockOnClick",
    _onClick$1: [function($event) {
      if (this.lockOnClick)
        this.gameLoop.element.webkitRequestPointerLock();
    }, "call$1", "get$_onClick", 2, 0, 230, 201],
    _onPointerLockChange$1: [function($event) {
    }, "call$1", "get$_onPointerLockChange", 2, 0, 230, 201],
    PointerLock$1: function(gameLoop) {
      var t1 = this.gameLoop.element;
      t1.toString;
      t1 = C.EventStreamProvider_click.forElement$1(t1);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onClick()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_webkitpointerlockchange.forTarget$1(document);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onPointerLockChange()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    }
  },
  _GameLoopTouchEvent: {
    "": "Object;event<,type>",
    static: {"": "_GameLoopTouchEvent_Move,_GameLoopTouchEvent_End,_GameLoopTouchEvent_Start"}
  },
  GameLoopTouchPosition: {
    "": "Object;x>,y>,dx,dy,time,frame"
  },
  GameLoopTouch: {
    "": "Object;id,positions<"
  },
  GameLoopTouchSet: {
    "": "Object;activeTouches,gameLoop",
    _addPosition$2: [function(glTouch, touch) {
      var t1, t2, t3, t4;
      t1 = J.getInterceptor$x(touch);
      t2 = t1.get$page(touch);
      t1 = t1.get$page(touch);
      t3 = this.gameLoop;
      t4 = t3._gameTime;
      t3 = t3._frameCounter;
      glTouch.get$positions().push(new G.GameLoopTouchPosition(t2.x, t1.y, 0, 0, t4, t3));
    }, "call$2", "get$_addPosition", 4, 0, null, 234, 235],
    _game_loop_html$_start$1: [function($event) {
      var t1 = J.getInterceptor$x($event);
      J.forEach$1$ax(t1.get$changedTouches($event), new G.GameLoopTouchSet__start_closure(this));
      this._verifyTouchList$1(t1.get$touches($event));
    }, "call$1", "get$_game_loop_html$_start", 2, 0, null, 201],
    _game_loop_html$_end$1: [function($event) {
      var t1 = J.getInterceptor$x($event);
      J.forEach$1$ax(t1.get$changedTouches($event), new G.GameLoopTouchSet__end_closure(this));
      this._verifyTouchList$1(t1.get$touches($event));
    }, "call$1", "get$_game_loop_html$_end", 2, 0, null, 201],
    _move$1: [function($event) {
      var t1 = J.getInterceptor$x($event);
      J.forEach$1$ax(t1.get$changedTouches($event), new G.GameLoopTouchSet__move_closure(this));
      this._verifyTouchList$1(t1.get$touches($event));
    }, "call$1", "get$_move", 2, 0, null, 201],
    _inTouchList$2: [function(touches, identifier) {
      var t1, i, t2;
      for (t1 = touches.length, i = 0; i < t1; ++i) {
        t2 = touches[i].identifier;
        if (t2 == null ? identifier == null : t2 === identifier)
          return true;
      }
      return false;
    }, "call$2", "get$_inTouchList", 4, 0, null, 236, 237],
    _verifyTouchList$1: [function(touches) {
      var t1, t2;
      t1 = touches.length;
      t2 = this.activeTouches;
      if (t1 !== t2._collection$_length)
        P.print("" + t1 + " " + t2._collection$_length);
      t2.forEach$1(t2, new G.GameLoopTouchSet__verifyTouchList_closure(this, touches));
    }, "call$1", "get$_verifyTouchList", 2, 0, null, 236]
  },
  GameLoopTouchSet__start_closure: {
    "": "Closure:238;this_0",
    call$1: [function(touch) {
      var t1, glTouch, t2, t3;
      t1 = J.getInterceptor$x(touch);
      glTouch = new G.GameLoopTouch(t1.get$identifier(touch), H.setRuntimeTypeInfo([], [G.GameLoopTouchPosition]));
      t2 = this.this_0;
      t3 = t2.activeTouches;
      if (t3.$index(t3, t1.get$identifier(touch)) != null)
        return;
      t3.$indexSet(t3, t1.get$identifier(touch), glTouch);
      t2._addPosition$2(glTouch, touch);
    }, "call$1", null, 2, 0, null, 235, "call"],
    $isFunction: true
  },
  GameLoopTouchSet__end_closure: {
    "": "Closure:238;this_0",
    call$1: [function(touch) {
      var t1, t2, t3, glTouch;
      t1 = this.this_0;
      t2 = t1.activeTouches;
      t3 = J.getInterceptor$x(touch);
      glTouch = t2.$index(t2, t3.get$identifier(touch));
      if (glTouch == null)
        return;
      t2.remove$1(t2, t3.get$identifier(touch));
      t1._addPosition$2(glTouch, touch);
    }, "call$1", null, 2, 0, null, 235, "call"],
    $isFunction: true
  },
  GameLoopTouchSet__move_closure: {
    "": "Closure:238;this_0",
    call$1: [function(touch) {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.activeTouches;
      t1._addPosition$2(t2.$index(t2, J.get$identifier$x(touch)), touch);
    }, "call$1", null, 2, 0, null, 235, "call"],
    $isFunction: true
  },
  GameLoopTouchSet__verifyTouchList_closure: {
    "": "Closure:183;this_0,touches_1",
    call$2: [function(identifier, touch) {
      if (!this.this_0._inTouchList$2(this.touches_1, identifier))
        P.print("Did not find " + H.S(identifier));
    }, "call$2", null, 4, 0, null, 237, 235, "call"],
    $isFunction: true
  }
}],
["gdp", "../game/game.dart", , U, {
  "": "",
  ImageLoader_getImage: [function(url) {
    var t1, img;
    t1 = $.ImageLoader_bufferedImages;
    if (t1 == null) {
      t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, W.ImageElement);
      $.ImageLoader_bufferedImages = t1;
    }
    if (t1.containsKey$1(url)) {
      t1 = $.ImageLoader_bufferedImages;
      return t1.$index(t1, url);
    }
    if ($.ImageLoader_bufferedImages == null)
      $.ImageLoader_bufferedImages = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, W.ImageElement);
    img = W._ElementFactoryProvider_createElement_tag("img", null);
    J.set$src$x(img, url);
    t1 = $.ImageLoader_bufferedImages;
    t1.$indexSet(t1, url, img);
    return img;
  }, "call$1", "ImageLoader_getImage$closure", 2, 0, null, 119],
  SpriteSheet: {
    "": "Object;spritex,spritey,_framew,_frameh,_imgurl,_img,lastDraw,frameChangeRate,numberOfFrames,spriteFrame,spriteXInitial",
    update$1: [function(dt) {
      var t1, t2;
      t1 = this.lastDraw + dt;
      this.lastDraw = t1;
      t2 = this.frameChangeRate;
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (t1 > t2) {
        this.lastDraw = t1 - t2;
        t1 = this.spriteFrame;
        t2 = this.numberOfFrames;
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 >= t2) {
          this.spriteFrame = 1;
          t1 = 1;
        } else {
          ++t1;
          this.spriteFrame = t1;
        }
        this.spritex = this.spriteXInitial + (t1 - 1) * this._framew;
      }
    }, "call$1", "get$update", 2, 0, null, 228]
  },
  SoundManager: {
    "": "Object;ac,source,_muted,_jumpClip,_oxygenClip,_shipItemClip,_injureClip,volume,volumeNumber",
    loadSounds$0: [function() {
      W.HttpRequest_request("content/Sound Files/SlowJump.wav", null, null, null, null, "arraybuffer", null, null).then$1(new U.SoundManager_loadSounds_closure(this));
      W.HttpRequest_request("content/Sound Files/Oxygen.wav", null, null, null, null, "arraybuffer", null, null).then$1(new U.SoundManager_loadSounds_closure0(this));
      W.HttpRequest_request("content/Sound Files/ShipItem.wav", null, null, null, null, "arraybuffer", null, null).then$1(new U.SoundManager_loadSounds_closure1(this));
      W.HttpRequest_request("content/Sound Files/Injured.wav", null, null, null, null, "arraybuffer", null, null).then$1(new U.SoundManager_loadSounds_closure2(this));
    }, "call$0", "get$loadSounds", 0, 0, null],
    playSound$1: [function(enumSound) {
      var t1, source;
      if (this._muted)
        return;
      else {
        t1 = this.ac;
        source = t1.createBufferSource();
        source.connect(t1.destination, 0, 0);
        switch (enumSound) {
          case 1:
            source.buffer = this._jumpClip;
            C.AudioBufferSourceNode_methods.start$1(source, 0);
            break;
          case 2:
            source.buffer = this._oxygenClip;
            C.AudioBufferSourceNode_methods.start$1(source, 0);
            break;
          case 3:
            source.buffer = this._shipItemClip;
            C.AudioBufferSourceNode_methods.start$1(source, 0);
            break;
          case 4:
            source.buffer = this._injureClip;
            C.AudioBufferSourceNode_methods.start$1(source, 0);
            break;
          default:
        }
      }
    }, "call$1", "get$playSound", 2, 0, null, 239],
    static: {"": "SoundManager_instance,SoundManager_enumSoundJump,SoundManager_enumSoundOxygen,SoundManager_enumSoundShipItem,SoundManager_enumSoundInjure"}
  },
  SoundManager_loadSounds_closure: {
    "": "Closure:241;this_0",
    call$1: [function(request) {
      var t1 = this.this_0;
      J.decodeAudioData$1$x(t1.ac, J.get$response$x(request)).then$1(new U.SoundManager_loadSounds__closure2(t1));
    }, "call$1", null, 2, 0, null, 240, "call"],
    $isFunction: true
  },
  SoundManager_loadSounds__closure2: {
    "": "Closure:243;this_1",
    call$1: [function(buffer) {
      this.this_1._jumpClip = buffer;
    }, "call$1", null, 2, 0, null, 242, "call"],
    $isFunction: true
  },
  SoundManager_loadSounds_closure0: {
    "": "Closure:241;this_2",
    call$1: [function(request) {
      var t1 = this.this_2;
      J.decodeAudioData$1$x(t1.ac, J.get$response$x(request)).then$1(new U.SoundManager_loadSounds__closure1(t1));
    }, "call$1", null, 2, 0, null, 240, "call"],
    $isFunction: true
  },
  SoundManager_loadSounds__closure1: {
    "": "Closure:243;this_3",
    call$1: [function(buffer) {
      this.this_3._oxygenClip = buffer;
    }, "call$1", null, 2, 0, null, 242, "call"],
    $isFunction: true
  },
  SoundManager_loadSounds_closure1: {
    "": "Closure:241;this_4",
    call$1: [function(request) {
      var t1 = this.this_4;
      J.decodeAudioData$1$x(t1.ac, J.get$response$x(request)).then$1(new U.SoundManager_loadSounds__closure0(t1));
    }, "call$1", null, 2, 0, null, 240, "call"],
    $isFunction: true
  },
  SoundManager_loadSounds__closure0: {
    "": "Closure:243;this_5",
    call$1: [function(buffer) {
      this.this_5._shipItemClip = buffer;
    }, "call$1", null, 2, 0, null, 242, "call"],
    $isFunction: true
  },
  SoundManager_loadSounds_closure2: {
    "": "Closure:241;this_6",
    call$1: [function(request) {
      var t1 = this.this_6;
      J.decodeAudioData$1$x(t1.ac, J.get$response$x(request)).then$1(new U.SoundManager_loadSounds__closure(t1));
    }, "call$1", null, 2, 0, null, 240, "call"],
    $isFunction: true
  },
  SoundManager_loadSounds__closure: {
    "": "Closure:243;this_7",
    call$1: [function(buffer) {
      this.this_7._injureClip = buffer;
    }, "call$1", null, 2, 0, null, 242, "call"],
    $isFunction: true
  },
  CollisionSystem: {
    "": "Object;",
    PlayerCollideWithItem$1: [function(player) {
      var t1, item;
      for (t1 = $.ObjectManager_instance.itemList, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        item = t1._current;
        if (this.checkForCollision$2(player, item))
          item.collect$0();
      }
    }, "call$1", "get$PlayerCollideWithItem", 2, 0, null, 244],
    PlayerCollideWithEnemy$1: [function(player) {
      var t1, enemy;
      for (t1 = $.ObjectManager_instance.enemyList, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        enemy = t1._current;
        if (this.checkForCollision$2(player, enemy))
          player.injureBuzz$1(enemy.injure$0());
      }
    }, "call$1", "get$PlayerCollideWithEnemy", 2, 0, null, 244],
    PlayerCollideWithBlock$1: [function(player) {
      var t1, onblock, block, t2;
      for (t1 = $.ObjectManager_instance.blockList, t1 = new H.ListIterator(t1, t1.length, 0, null), onblock = false; t1.moveNext$0();) {
        block = t1._current;
        if (this.checkForCollision$2(player, block)) {
          t2 = J.getInterceptor$x(block);
          if (player.velocity_y > 0)
            player.y = J.$add$ns(t2.get$y(block), J.$div$n(t2.get$height(block), 2)) + player.height / 2;
          else {
            player.y = J.$sub$n(t2.get$y(block), J.$div$n(t2.get$height(block), 2)) - player.height / 2;
            onblock = true;
          }
          player.velocity_y = 0;
        }
      }
      if (onblock)
        player.JUMPING = false;
      else
        player.JUMPING = true;
    }, "call$1", "get$PlayerCollideWithBlock", 2, 0, null, 244],
    PlayerCollideWithTrigger$1: [function(player) {
      var t1, trigger, t2, t3, t4;
      for (t1 = $.ObjectManager_instance.triggerList, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        trigger = t1._current;
        if (this.checkForCollision$2(player, trigger)) {
          trigger.collapse$0();
          t2 = J.getInterceptor$x(trigger);
          t3 = t2.get$y(trigger);
          t4 = trigger.get$originalY();
          if (t3 == null ? t4 == null : t3 === t4)
            t2.set$y(trigger, J.$add$ns(t2.get$y(trigger), 20));
        } else {
          t2 = J.getInterceptor$x(trigger);
          t3 = t2.get$y(trigger);
          t4 = trigger.get$originalY();
          if (t3 == null ? t4 != null : t3 !== t4)
            t2.set$y(trigger, J.$sub$n(t2.get$y(trigger), 20));
        }
      }
    }, "call$1", "get$PlayerCollideWithTrigger", 2, 0, null, 244],
    checkForCollision$2: [function(a, b) {
      var t1, t2, t3, t4;
      t1 = J.getInterceptor$x(b);
      t2 = J.$sub$n(t1.get$x(b), J.$div$n(t1.get$width(b), 2));
      t3 = a.x;
      t4 = a.width;
      if (typeof t3 !== "number")
        return t3.$add();
      if (t2 < t3 + t4 / 2) {
        t2 = J.$add$ns(t1.get$x(b), J.$div$n(t1.get$width(b), 2));
        t3 = a.x;
        t4 = a.width;
        if (typeof t3 !== "number")
          return t3.$sub();
        t4 = t2 > t3 - t4 / 2;
        t2 = t4;
      } else
        t2 = false;
      if (t2) {
        t2 = J.$sub$n(t1.get$y(b), J.$div$n(t1.get$height(b), 2));
        t3 = a.y;
        t4 = a.height;
        if (typeof t3 !== "number")
          return t3.$add();
        if (t2 < t3 + t4 / 2) {
          t1 = J.$add$ns(t1.get$y(b), J.$div$n(t1.get$height(b), 2));
          t2 = a.y;
          t3 = a.height;
          if (typeof t2 !== "number")
            return t2.$sub();
          t3 = t1 > t2 - t3 / 2;
          t1 = t3;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1 && true;
    }, "call$2", "get$checkForCollision", 4, 0, null, 108, 109],
    static: {"": "CollisionSystem_instance"}
  },
  Game: {
    "": "Object;player,menu,gameMenu,controls,options,transition,oxygenTimer,lastOxygenTick,input,currentLevel,lastENTER,lastESC,stateEnumPlay,stateEnumWin,stateEnumGameOver,stateEnumPause,stateEnumMain,stateEnumControls,stateEnumTransition,stateEnumIntro,stateEnumOptions,resetMainMenu,state,updatesPerSecond,rendersPerSecond,debuggingDisplayTime,numberOfUpdates,numberOfRenders,levelManager",
    Initialize$0: [function() {
      var t1, t2, t3;
      t1 = new D.AdjustedContext(null, null, null);
      t1.AdjustedContext$3(640, 480, $.get$camera().screenRatio);
      $.ctx = t1;
      t1 = document.querySelector("canvas");
      $.canvas = t1;
      J.set$width$x(t1, 640);
      J.set$height$x($.canvas, 480);
      $.ctx.context = J.getContext$1$x($.canvas, "2d");
      $.normContext = J.getContext$1$x($.canvas, "2d");
      if ($.SoundManager_instance == null) {
        t1 = new (window.AudioContext || window.webkitAudioContext)();
        t2 = new U.SoundManager(t1, null, false, null, null, null, null, null, null);
        $.SoundManager_instance = t2;
        t2.loadSounds$0();
        t2.volume = J.createGain$0$x(t1);
        t3 = t1.createBufferSource();
        t2.source = t3;
        t3.connect(t2.volume, 0, 0);
        t2.volume.connect(t1.destination, 0, 0);
        t2.volumeNumber = 50;
        t2.volume.gain.value = 50;
      }
      if ($.CollisionSystem_instance == null)
        $.CollisionSystem_instance = new U.CollisionSystem();
      if ($.ObjectManager_instance == null)
        $.ObjectManager_instance = new U.ObjectManager(H.setRuntimeTypeInfo([], [U.GameObject]), H.setRuntimeTypeInfo([], [U.Block]), H.setRuntimeTypeInfo([], [U.Enemy]), H.setRuntimeTypeInfo([], [U.Item]), H.setRuntimeTypeInfo([], [U.Trigger]));
      t1 = $.get$gameLoop();
      t1.onUpdate = new U.Game_Initialize_closure(this);
      t1.onRender = new U.Game_Initialize_closure0(this);
      if (!t1._initialized) {
        t2 = C.EventStreamProvider_webkitfullscreenerror.forTarget$1(document);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$_fullscreenError()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
        t2 = C.EventStreamProvider_webkitfullscreenchange.forTarget$1(document);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$_fullscreenChange()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
        t2 = t1.element;
        t2.toString;
        t3 = C.EventStreamProvider_touchstart.forElement$1(t2);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_touchStartEvent()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_touchend.forElement$1(t2);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_touchEndEvent()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_touchcancel.forElement$1(t2);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_touchEndEvent()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_touchmove.forElement$1(t2);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_touchMoveEvent()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_keydown.forTarget$1(window);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_keyDown()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_keyup.forTarget$1(window);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_keyUp()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_resize.forTarget$1(window);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_resize()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_mousemove.forElement$1(t2);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_mouseMove()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_mousedown.forElement$1(t2);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_mouseDown()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t3 = C.EventStreamProvider_mouseup.forElement$1(t2);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(t1.get$_mouseUp()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
        t2 = C._CustomEventStreamProvider__determineMouseWheelEventType.forElement$1(t2);
        H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(t1.get$_mouseWheel()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
        t1._initialized = true;
      }
      t1._interrupt = false;
      t2 = window;
      t3 = t1.get$_requestAnimationFrame(t1);
      C.Window_methods._ensureRequestAnimationFrame$0(t2);
      t1._rafId = C.Window_methods._html$_requestAnimationFrame$1(t2, W._wrapZone(t3));
      t3 = $.LevelManager_enumMainMenu;
      this.currentLevel = t3;
      this.levelManager.loadLevel$1(t3);
      this.state = this.stateEnumMain;
      t1 = this.currentLevel;
      t2 = $.LevelManager_enumLevelOne;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= t2) {
        t1 = this.oxygenTimer;
        t1.start$0(t1);
      }
    }, "call$0", "get$Initialize", 0, 0, null],
    update$1: [function(dt) {
      var t1, t2, t3;
      t1 = $.Input_instance;
      t1.controllerButtonPushed = false;
      t1.controllerAxesRight = false;
      t1.controllerAxesLeft = false;
      t1.controllerAxesDown = false;
      t1.controllerAxesUp = false;
      t1.update$0();
      if (this.currentLevel === $.LevelManager_enumMainMenu || this.state === this.stateEnumMain) {
        if (this.resetMainMenu) {
          this.menu = U.MainMenu$();
          this.gameMenu = U.InGameMenu$();
        }
        this.resetMainMenu = false;
        this.menu.update$1(dt);
        this.menu.draw$0();
      }
      if (this.state === this.stateEnumPlay) {
        t1 = this.player.x;
        t2 = $.get$camera();
        t3 = t2.x;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (t1 - t3 > 435) {
          t3 = t1 - 435;
          t2.x = t3;
        }
        if (t1 - t3 < 205)
          t2.x = t1 - 205;
        for (t1 = $.ObjectManager_instance.goList, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
          t1._current.update$1(dt);
        t1 = C.JSNumber_methods._tdivFast$1(this.oxygenTimer.get$elapsedTicks() * 1000, 1000000);
        t2 = this.lastOxygenTick;
        if (t1 > 250 + t2) {
          t1 = this.currentLevel;
          t3 = $.LevelManager_enumLevelOne;
          if (typeof t1 !== "number")
            return t1.$ge();
          t1 = t1 >= t3 && $.Game_oxygen > 0;
        } else
          t1 = false;
        if (t1) {
          this.lastOxygenTick = t2 + 250;
          $.Game_oxygen = $.Game_oxygen - 1;
        }
        $.ObjectManager_instance.removeDeadObjects$0();
        $.Input_instance.toString;
        if ($.get$gameLoop()._keyboard.isDown$1(27)) {
          this.input.toString;
          if (J.$sub$n($.get$gameLoop()._keyboard.timePressed$1(27), $.Game_instance.lastESC) > 0) {
            this.input.toString;
            this.lastESC = $.get$gameLoop()._keyboard.timePressed$1(27);
            this.resetMainMenu = true;
            this.state = this.stateEnumPause;
            this.gameMenu.draw$0();
            this.gameMenu.update$1(dt);
          }
        }
      }
      if (this.state === this.stateEnumPause) {
        this.gameMenu.update$1(dt);
        t1 = C.JSNumber_methods._tdivFast$1(this.oxygenTimer.get$elapsedTicks() * 1000, 1000000);
        t2 = this.lastOxygenTick;
        if (t1 > 250 + t2) {
          this.lastOxygenTick = t2 + 250;
          $.Game_oxygen = $.Game_oxygen - 0;
        }
        if (this.resetMainMenu) {
          this.gameMenu = U.InGameMenu$();
          this.resetMainMenu = false;
        }
      }
      if (this.state === this.stateEnumControls) {
        this.controls.update$1(dt);
        t1 = C.JSNumber_methods._tdivFast$1(this.oxygenTimer.get$elapsedTicks() * 1000, 1000000);
        t2 = this.lastOxygenTick;
        if (t1 > 250 + t2) {
          this.lastOxygenTick = t2 + 250;
          $.Game_oxygen = $.Game_oxygen - 0;
        }
      }
      if (this.state === this.stateEnumOptions) {
        this.options.update$1(dt);
        t1 = C.JSNumber_methods._tdivFast$1(this.oxygenTimer.get$elapsedTicks() * 1000, 1000000);
        t2 = this.lastOxygenTick;
        if (t1 > 250 + t2) {
          this.lastOxygenTick = t2 + 250;
          $.Game_oxygen = $.Game_oxygen - 0;
        }
      }
      t1 = this.state;
      if (t1 === this.stateEnumTransition || t1 === this.stateEnumIntro) {
        J.clearRect$4$x($.normContext, 0, 0, 640, 480);
        this.transition.update$1(dt);
        this.transition.draw$0();
      }
      t1 = this.numberOfUpdates + 1;
      this.numberOfUpdates = t1;
      t2 = this.debuggingDisplayTime + dt;
      this.debuggingDisplayTime = t2;
      if (t2 > 100) {
        this.debuggingDisplayTime = t2 - 100;
        this.updatesPerSecond = t1;
        this.rendersPerSecond = this.numberOfRenders;
        this.numberOfUpdates = 0;
        this.numberOfRenders = 0;
      }
    }, "call$1", "get$update", 2, 0, null, 228],
    draw$0: [function() {
      var t1, t2, t3, go, goRightEdge, goLeftEdge;
      if (this.currentLevel === $.LevelManager_enumMainMenu || this.state === this.stateEnumMain) {
        J.clearRect$4$x($.normContext, 0, 0, 640, 480);
        this.menu.draw$0();
      }
      t1 = this.state;
      t2 = this.stateEnumTransition;
      if (t1 === t2 || t1 === this.stateEnumIntro) {
        J.clearRect$4$x($.normContext, 0, 0, 640, 480);
        this.transition.draw$0();
      }
      if (this.state === this.stateEnumControls)
        this.controls.draw$0();
      if (this.state === this.stateEnumOptions)
        this.options.draw$0();
      t1 = this.state;
      t3 = this.stateEnumPause;
      if (t1 === t3) {
        J.clearRect$4$x($.normContext, 0, 0, 640, 480);
        for (t1 = $.ObjectManager_instance.goList, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
          go = t1._current;
          t2 = J.getInterceptor$x(go);
          goRightEdge = J.$add$ns(t2.get$x(go), J.$div$n(t2.get$width(go), 2));
          goLeftEdge = J.$sub$n(t2.get$x(go), J.$div$n(t2.get$width(go), 2));
          t2 = $.get$camera().x;
          t3 = $.Camera_instance.screenRatio;
          if (goRightEdge > t2 - 640 / t3 && goLeftEdge < t2 + 640 / t3)
            go.draw$0();
        }
        this.gameMenu.draw$0();
      } else if (t1 === this.stateEnumPlay) {
        J.clearRect$4$x($.normContext, 0, 0, 640, 480);
        if (this.currentLevel === $.LevelManager_enumMainMenu)
          this.menu.draw$0();
        if (this.state === t3)
          this.gameMenu.draw$0();
        for (t1 = $.ObjectManager_instance.goList, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
          go = t1._current;
          t2 = J.getInterceptor$x(go);
          goRightEdge = J.$add$ns(t2.get$x(go), J.$div$n(t2.get$width(go), 2));
          goLeftEdge = J.$sub$n(t2.get$x(go), J.$div$n(t2.get$width(go), 2));
          t2 = $.get$camera().x;
          t3 = $.Camera_instance.screenRatio;
          if (goRightEdge > t2 - 640 / t3 && goLeftEdge < t2 + 640 / t3)
            go.draw$0();
        }
        J.save$0$x($.normContext);
        J.set$fillStyle$x($.normContext, "white");
        J.set$font$x($.normContext, "normal 14pt calibri");
        J.fillText$4$x($.normContext, "BUZZKILL", 10, 20, 100);
        J.fillText$4$x($.normContext, "Lives: " + $.Game_lives, 10, 465, 100);
        J.fillText$4$x($.normContext, "Remaining Oxygen: " + $.Game_oxygen, 440, 465, 500);
        J.restore$0$x($.normContext);
        J.set$fillStyle$x($.normContext, "white");
        J.set$font$x($.normContext, "normal 8pt calibri");
        J.fillText$4$x($.normContext, "ups: " + this.updatesPerSecond, 10, 35, 100);
        J.fillText$4$x($.normContext, "rps: " + this.rendersPerSecond, 10, 50, 100);
        J.restore$0$x($.normContext);
      } else if (t1 === this.stateEnumWin) {
        t1 = this.currentLevel;
        t3 = $.LevelManager_enumLevelTwo;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < t3) {
          this.state = t2;
          this.transition.update$1(0);
          this.transition.draw$0();
        } else {
          J.set$fillStyle$x($.normContext, "black");
          J.fillRect$4$x($.normContext, 0, 0, 640, 480);
          J.set$fillStyle$x($.normContext, "white");
          J.set$font$x($.normContext, "normal 30pt calibri");
          J.fillText$4$x($.normContext, "YOU WIN!", 250, 200, 1000);
          J.save$0$x($.normContext);
          J.set$font$x($.normContext, "normal 15pt calibri");
          J.fillText$4$x($.normContext, "Press Enter to continue.", 420, 420, 1000);
          J.restore$0$x($.normContext);
          this.input.toString;
          if ($.get$gameLoop()._keyboard.isDown$1(13))
            this.state = this.stateEnumMain;
        }
      } else if (t1 === this.stateEnumGameOver) {
        J.set$fillStyle$x($.normContext, "black");
        J.fillRect$4$x($.normContext, 0, 0, 640, 480);
        J.set$fillStyle$x($.normContext, "white");
        J.set$font$x($.normContext, "normal 30pt calibri");
        J.fillText$4$x($.normContext, "Buzz didn't make it...", 200, 200, 1000);
      }
      this.numberOfRenders = this.numberOfRenders + 1;
    }, "call$0", "get$draw", 0, 0, null],
    gameOver$0: [function() {
      this.currentLevel = $.LevelManager_enumLevelOne;
      $.get$gameLoop().addTimer$2(new U.Game_gameOver_closure(this), 3);
      this.state = this.stateEnumGameOver;
      var t1 = this.oxygenTimer;
      t1.stop$0(t1);
    }, "call$0", "get$gameOver", 0, 0, null],
    reloadLevel$0: [function() {
      var t1, t2;
      t1 = $.ObjectManager_instance;
      t1.clear$0(t1);
      this.levelManager.loadLevel$1(this.currentLevel);
      this.player.resetPlayer$0();
      t1 = this.currentLevel;
      t2 = $.LevelManager_enumLevelOne;
      if (typeof t1 !== "number")
        return t1.$ge();
      if (t1 >= t2) {
        t1 = this.oxygenTimer;
        t1.reset$0(t1);
        this.lastOxygenTick = 0;
        t1.start$0(t1);
      }
      this.state = this.stateEnumPlay;
    }, "call$0", "get$reloadLevel", 0, 0, null],
    static: {"": "Game_instance,Game_oxygen,Game_lives"}
  },
  Game_Initialize_closure: {
    "": "Closure:130;this_0",
    call$1: [function(gameLoop) {
      this.this_0.update$1(gameLoop.updateTimeStep * 100);
    }, "call$1", null, 2, 0, null, 245, "call"],
    $isFunction: true
  },
  Game_Initialize_closure0: {
    "": "Closure:130;this_1",
    call$1: [function(gameLoop) {
      this.this_1.draw$0();
    }, "call$1", null, 2, 0, null, 245, "call"],
    $isFunction: true
  },
  Game_gameOver_closure: {
    "": "Closure:130;this_0",
    call$1: [function(restart) {
      var t1, t2, t3;
      t1 = this.this_0;
      t2 = $.ObjectManager_instance;
      t2.clear$0(t2);
      $.Game_lives = 3;
      t1.levelManager.loadLevel$1(t1.currentLevel);
      t1.player.resetPlayer$0();
      t1.state = t1.stateEnumPlay;
      t2 = t1.currentLevel;
      t3 = $.LevelManager_enumLevelOne;
      if (typeof t2 !== "number")
        return t2.$ge();
      if (t2 >= t3) {
        t2 = t1.oxygenTimer;
        t2.reset$0(t2);
        t1.lastOxygenTick = 0;
        t2.start$0(t2);
      }
      return;
    }, "call$1", null, 2, 0, null, 246, "call"],
    $isFunction: true
  },
  Input: {
    "": "Object;gp,controllerButtonPushed,controllerAxesRight,controllerAxesLeft,controllerAxesUp,controllerAxesDown",
    timePressed$1: [function(keyCode) {
      return $.get$gameLoop()._keyboard.timePressed$1(keyCode);
    }, "call$1", "get$timePressed", 2, 0, 247, 248],
    update$0: [function() {
      var t1, jsControllers;
      t1 = $.get$context();
      jsControllers = J.$index$asx(t1, "controllers");
      J.forEach$1$ax(C.C_JsonCodec.decode$1(J.$index$asx(t1, "JSON").callMethod$2("stringify", [jsControllers])), new U.Input_update_closure(this));
    }, "call$0", "get$update", 0, 0, null],
    static: {"": "Input_instance,Input__keys", Input_Input: function() {
        var t1 = $.Input_instance;
        if (t1 == null) {
          t1 = new U.Input(null, false, false, false, false, false);
          $.Input_instance = t1;
        }
        return t1;
      }}
  },
  Input_update_closure: {
    "": "Closure:183;this_0",
    call$2: [function(index, controller) {
      var t1, t2, t3, axes, axeOne, axeTwo;
      t1 = J.getInterceptor$asx(controller);
      for (t2 = J.get$iterator$ax(t1.$index(controller, "buttons")), t3 = this.this_0; t2.moveNext$0();)
        if (J.$eq(t2.get$current(), 1))
          t3.controllerButtonPushed = true;
      axes = t1.$index(controller, "axes");
      t1 = J.getInterceptor$asx(axes);
      axeOne = t1.$index(axes, 0);
      axeTwo = t1.$index(axes, 1);
      t1.$index(axes, 2);
      t1.$index(axes, 3);
      t1 = J.getInterceptor$n(axeOne);
      if (t1.$gt(axeOne, 0.5))
        t3.controllerAxesRight = true;
      if (t1.$lt(axeOne, -0.5))
        t3.controllerAxesLeft = true;
      t1 = J.getInterceptor$n(axeTwo);
      if (t1.$gt(axeTwo, 0.5))
        t3.controllerAxesDown = true;
      if (t1.$lt(axeTwo, -0.5))
        t3.controllerAxesUp = true;
    }, "call$2", null, 4, 0, null, 23, 249, "call"],
    $isFunction: true
  },
  Controls: {
    "": "GameObject;input,sprite,x:gdp$Controls$x*,y:gdp$Controls$y*,width:gdp$Controls$width>,height:gdp$Controls$height>,spritex,spritey,resume,options,controls,quit,x,y,height,width,dead",
    draw$0: [function() {
      var t1, t2, t3, t4, t5;
      t1 = $.Game_instance;
      if (t1.state === t1.stateEnumControls) {
        t1 = this.sprite;
        t2 = this.gdp$Controls$x;
        t3 = this.gdp$Controls$y;
        t4 = t1._framew;
        t5 = t1._frameh;
        J.drawImageScaledFromSource$9$x($.normContext, t1._img, t1.spritex, t1.spritey, t4, t5, t2, t3, t4, t5);
      }
    }, "call$0", "get$draw", 0, 0, null],
    update$1: [function(dt) {
      var t1, t2;
      this.input.toString;
      if ($.get$gameLoop()._keyboard.pressed$1(27)) {
        t1 = $.Game_instance;
        t1 = t1.state === t1.stateEnumPlay;
      } else
        t1 = false;
      if (t1) {
        t1 = $.Game_instance;
        t1.state = t1.stateEnumPause;
        this.input.toString;
        t1.lastESC = $.get$gameLoop()._keyboard.timePressed$1(27);
        $.Game_instance.resetMainMenu = true;
      } else {
        this.input.toString;
        if (!$.get$gameLoop()._keyboard.pressed$1(27)) {
          this.input.toString;
          t1 = $.get$gameLoop()._keyboard.pressed$1(8);
        } else
          t1 = true;
        if (t1) {
          t1 = $.Game_instance.currentLevel;
          t2 = $.LevelManager_enumMainMenu;
          if (typeof t1 !== "number")
            return t1.$gt();
          t2 = t1 > t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1) {
          t1 = $.Game_instance;
          t1.state = t1.stateEnumPause;
          this.input.toString;
          t1.lastESC = $.get$gameLoop()._keyboard.timePressed$1(27);
          $.Game_instance.resetMainMenu = true;
        } else {
          this.input.toString;
          if (!$.get$gameLoop()._keyboard.pressed$1(27)) {
            this.input.toString;
            t1 = $.get$gameLoop()._keyboard.pressed$1(8);
          } else
            t1 = true;
          if (t1) {
            t1 = $.Game_instance;
            t1.state = t1.stateEnumMain;
            t1.resetMainMenu = true;
            this.input.toString;
            t1.lastESC = $.get$gameLoop()._keyboard.timePressed$1(27);
          }
        }
      }
    }, "call$1", "get$update", 2, 0, null, 228],
    Controls$0: function() {
      this.gdp$Controls$width = 640;
      this.gdp$Controls$height = 480;
      this.gdp$Controls$x = 0;
      this.gdp$Controls$y = 0;
      this.input = U.Input_Input();
      this.resume = true;
      var t1 = new U.SpriteSheet(this.spritex, this.spritey, 640, 480, "./content/controls.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/controls.png");
      this.sprite = t1;
    }
  },
  LevelManager: {
    "": "Object;",
    loadLevel$1: [function(level) {
      var om, t1, t2, t3, t4, t5, bossFloor, trigger, boss, floorObstacle;
      switch (level) {
        case 0:
          break;
        case 1:
          om = $.ObjectManager_instance;
          t1 = $.Game_instance.player;
          t2 = om.goList;
          t2.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 875, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 1750;
          t1.height = 140;
          t2.push(t1);
          t3 = om.blockList;
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 100, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4 = om.itemList;
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 150, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 200, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 330, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 440, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 490, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 540, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 640, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 730, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.Spike(10, null, null, null, 0, 0, false);
          t1.x = 850;
          t1.y = 340;
          t1.width = 100;
          t1.height = 20;
          t2.push(t1);
          t5 = om.enemyList;
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1050, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1100, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1150, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1200, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1300, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1450, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1500, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.Spike(10, null, null, null, 0, 0, false);
          t1.x = 1600;
          t1.y = 340;
          t1.width = 100;
          t1.height = 20;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1800, 200);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2875, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 1875;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2000, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2050, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2100, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2150, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2300, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2800, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2850, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2900, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.Alien(W.ImageElement_ImageElement(null, null, null), null, 0, 0, 97, 50, 8, -7, null, null, false, null, null, null, 0, 0, false);
          t1.initialize$2(3250, 330);
          t2.push(t1);
          t5.push(t1);
          t1 = new U.Spike(10, null, null, null, 0, 0, false);
          t1.x = 3500;
          t1.y = 340;
          t1.width = 100;
          t1.height = 20;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3600, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3650, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3800, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4500, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 1060;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.Alien(W.ImageElement_ImageElement(null, null, null), null, 0, 0, 97, 50, 8, -7, null, null, false, null, null, null, 0, 0, false);
          t1.initialize$2(4150, 330);
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4300, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4350, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4400, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.Alien(W.ImageElement_ImageElement(null, null, null), null, 0, 0, 97, 50, 8, -7, null, null, false, null, null, null, 0, 0, false);
          t1.initialize$2(4500, 330);
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4700, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.ShipItem(null, 0, 100, 90, 90, 6, true, 1, null, null, null, 0, 0, false);
          t1.initialize$2(5000, 290);
          t1.level = 1;
          t2.push(t1);
          t4.push(t1);
          break;
        case 2:
          om = $.ObjectManager_instance;
          t1 = $.Game_instance.player;
          t2 = om.goList;
          t2.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 200, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 750;
          t1.height = 140;
          t2.push(t1);
          t3 = om.blockList;
          t3.push(t1);
          t1 = new U.Spike(10, null, null, null, 0, 0, false);
          t1.x = 200;
          t1.y = 340;
          t1.width = 100;
          t1.height = 20;
          t2.push(t1);
          t4 = om.enemyList;
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 400, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 510, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 400, 180);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5 = om.itemList;
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 450, 180);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 500, 180);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 800, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 150;
          t1.height = 400;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 800, 20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 850, 20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 900, 20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1500, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 1000;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1300, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1100, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1150, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 1200, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.Droid(W.ImageElement_ImageElement(null, null, null), null, 0, 442, 78, 108, 8, -4, null, null, false, null, null, null, 0, 0, false);
          t1.initialize$2(1600, 305);
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2350, 480);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 350;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2200, 350);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2250, 350);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2300, 350);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2350, 350);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2400, 350);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2950, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 550;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2800, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2850, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 2900, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.Alien(W.ImageElement_ImageElement(null, null, null), null, 0, 0, 97, 50, 8, -7, null, null, false, null, null, null, 0, 0, false);
          t1.initialize$2(3000, 330);
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3350, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 150;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3550, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 150;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3750, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 150;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3350, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3550, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 3750, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4300, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 650;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.Spike(10, null, null, null, 0, 0, false);
          t1.x = 4250;
          t1.y = 340;
          t1.width = 100;
          t1.height = 20;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4175, 150);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4210, 150);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4530, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4600, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4950, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 300;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5200, 500);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 50;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5200, 400);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5400, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 700;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4900, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 4950, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5000, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5050, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5100, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5150, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5200, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.Alien(W.ImageElement_ImageElement(null, null, null), null, 0, 0, 97, 50, 8, -7, null, null, false, null, null, null, 0, 0, false);
          t1.initialize$2(5400, 330);
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5900, 320);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 100;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 5900, 220);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6100, 220);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 100;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6100, 120);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6300, 120);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 100;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6300, 20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6500, 220);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 100;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6500, 120);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6700, 320);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 100;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6700, 220);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 6900, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 500;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.Spike(10, null, null, null, 0, 0, false);
          t1.x = 7100;
          t1.y = 340;
          t1.width = 100;
          t1.height = 20;
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 7400, 500);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 700;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.Alien(W.ImageElement_ImageElement(null, null, null), null, 0, 0, 97, 50, 8, -7, null, null, false, null, null, null, 0, 0, false);
          t1.initialize$2(7600, 430);
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 7900, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 300;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 8300, 320);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 400;
          t1.height = 400;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 7800, 100);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 7850, 100);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 7900, 100);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 7950, 100);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 8000, 100);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9400, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 1500;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9000, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9350, 120);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 300;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9350, 0);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9400, 0);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9450, 0);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9500, 0);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9800, 0);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 300;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9800, -120);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9850, -120);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9900, -120);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9950, -120);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9600, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9650, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9700, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9750, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 9800, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 10140, -150);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 10180, -150);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 10250, 500);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 200;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 10200, 380);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 10250, 380);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 10300, 380);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 10550, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 400;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11200, 350);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 600;
          t1.height = 240;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11000, 160);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11050, 160);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11100, 160);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11150, 160);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11200, 160);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.Droid(W.ImageElement_ImageElement(null, null, null), null, 0, 442, 78, 108, 8, -4, null, null, false, null, null, null, 0, 0, false);
          t1.initialize$2(11400, 185);
          t2.push(t1);
          t4.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12100, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 1500;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11800, 100);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 300;
          t1.height = 101;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          bossFloor = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(bossFloor, 13070, 420);
          J.set$src$x(bossFloor.img, "./content/platform.png");
          bossFloor.width = 440;
          bossFloor.height = 140;
          t2.push(bossFloor);
          t3.push(bossFloor);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11800, -20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11850, -20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11900, -20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 11950, -20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12200, -20);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12300, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12350, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12400, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12450, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12500, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12550, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(0, 0, 50, 50, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Oxygen(t1, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12600, 290);
          t1.width = 50;
          t1.height = 45;
          t2.push(t1);
          t5.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 12800, 300);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 120;
          t1.height = 100;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          t1 = new U.Block(t1, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t1, 13445, 420);
          J.set$src$x(t1.img, "./content/platform.png");
          t1.width = 310;
          t1.height = 140;
          t2.push(t1);
          t3.push(t1);
          t1 = new U.SpriteSheet(263, 0, 120, 20, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/gameitems.png");
          trigger = new U.Trigger(t1, null, null, null, W.ImageElement_ImageElement(null, null, null), null, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(trigger, 13530, 340);
          trigger.originalY = 340;
          trigger.width = 120;
          trigger.height = 20;
          boss = new U.Gorilla(W.ImageElement_ImageElement(null, null, null), null, 0, 266, 126, 166, 0, -20, null, null, false, false, null, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(boss, 13100, 290);
          boss.width = 100;
          boss.height = 140;
          t1 = new U.SpriteSheet(0, 266, 126, 166, "./content/enemies_spritesheet copy.png", null, 0, null, null, 0, 0);
          t1._img = U.ImageLoader_getImage("./content/enemies_spritesheet copy.png");
          boss.sprite = t1;
          boss.initialPos = 13100;
          boss.endPos = 12950;
          t1.frameChangeRate = 50;
          t1.numberOfFrames = 6;
          t2.push(boss);
          t4.push(boss);
          t4 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t4._img = U.ImageLoader_getImage("./content/gameitems.png");
          floorObstacle = new U.Block(t4, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(floorObstacle, 13700, 0);
          J.set$src$x(floorObstacle.img, "./content/platform.png");
          floorObstacle.width = 200;
          floorObstacle.height = 1000;
          floorObstacle.isObstacle = true;
          t2.push(floorObstacle);
          t3.push(floorObstacle);
          trigger.bossFloor = bossFloor;
          trigger.boss = boss;
          trigger.floorObstacle = floorObstacle;
          t2.push(trigger);
          om.triggerList.push(trigger);
          t4 = new U.SpriteSheet(50, 0, 120, 100, "./content/gameitems.png", null, 0, null, null, 0, 0);
          t4._img = U.ImageLoader_getImage("./content/gameitems.png");
          t4 = new U.Block(t4, W.ImageElement_ImageElement(null, null, null), false, false, null, null, 0, 0, false);
          U.GameObject.prototype.initialize$2.call(t4, 13900, 420);
          J.set$src$x(t4.img, "./content/platform.png");
          t4.width = 200;
          t4.height = 140;
          t2.push(t4);
          t3.push(t4);
          t4 = new U.ShipItem(null, 0, 100, 90, 90, 6, true, 1, null, null, null, 0, 0, false);
          t4.initialize$2(13900, 290);
          t4.level = 2;
          t2.push(t4);
          t5.push(t4);
          break;
        default:
      }
    }, "call$1", "get$loadLevel", 2, 0, null, 250],
    static: {"": "LevelManager_enumLevelTest,LevelManager_enumMainMenu,LevelManager_enumLevelOne,LevelManager_enumLevelTwo,LevelManager_enumLevelThree,LevelManager_enumLevelFour"}
  },
  LevelTransition: {
    "": "GameObject;input,introBG,introText,buzz,buzz2,alien,droid,x:gdp$LevelTransition$x*,y:gdp$LevelTransition$y*,width:gdp$LevelTransition$width>,height:gdp$LevelTransition$height>,buzz2x,spritex,spritey,repeat,repeat2,x,y,height,width,dead",
    draw$0: [function() {
      var t1, t2, t3, t4, t5;
      t1 = $.Game_instance;
      t2 = t1.state;
      if (t2 === t1.stateEnumIntro) {
        t1 = this.introBG;
        t2 = t1._framew;
        t3 = t1._frameh;
        J.drawImageScaledFromSource$9$x($.normContext, t1._img, t1.spritex, t1.spritey, t2, t3, 0, 0, t2, t3);
        t1 = this.introText;
        t2 = t1.spritey;
        if (t2 <= 0)
          t1.spritey = t2 + 0.1;
        else {
          t1 = this.repeat2;
          if (t1 === 0 || t1 === 1 || t1 === 2 || t1 === 3 || t1 === 4 || t1 === 5 || t1 === 6 || t1 === 7 || t1 === 8 || t1 === 9 || t1 === 10 || t1 === 11 || t1 === 12)
            this.repeat2 = t1 + 1;
          else if (t1 === 13) {
            t1 = this.buzz2x;
            if (t1 <= 725) {
              t2 = this.buzz2;
              t3 = t2.spritex;
              if (t3 >= 850) {
                t2.spritex = 0;
                t3 = 0;
              }
              t2.spritex = t3 + 75;
              this.buzz2x = t1 + 37;
              this.repeat2 = 0;
            } else {
              this.buzz2.spritey = -200;
              t1 = this.buzz;
              t2 = t1.spritex;
              if (t2 >= 850) {
                t1.spritex = 0;
                t2 = 0;
              }
              t3 = this.repeat;
              if (t3 === 0 || t3 === 1 || t3 === 2)
                this.repeat = t3 + 1;
              else if (t3 === 3) {
                t1.spritex = t2 + 75;
                this.repeat = 0;
              }
            }
          }
          t1 = this.buzz2;
          t2 = this.buzz2x;
          t3 = $.ctx;
          t4 = t1._framew;
          t5 = t1._frameh;
          t3.drawImageScaledFromSource$9(t3, t1._img, t1.spritex, t1.spritey, t4, t5, t2, 300, t4, t5);
          t5 = this.buzz;
          t4 = $.ctx;
          t2 = t5._framew;
          t1 = t5._frameh;
          t4.drawImageScaledFromSource$9(t4, t5._img, t5.spritex, t5.spritey, t2, t1, 800, 300, t2, t1);
        }
        t1 = this.introText;
        t2 = t1._framew;
        t3 = t1._frameh;
        J.drawImageScaledFromSource$9$x($.normContext, t1._img, t1.spritex, t1.spritey, t2, t3, 0, 0, t2, t3);
      } else if (t2 === t1.stateEnumTransition) {
        J.set$fillStyle$x($.normContext, "black");
        J.fillRect$4$x($.normContext, 0, 0, 640, 480);
        J.set$fillStyle$x($.normContext, "white");
        J.set$font$x($.normContext, "normal 30pt calibri");
        t1 = $.Game_instance.currentLevel;
        if (t1 === $.LevelManager_enumMainMenu) {
          J.fillText$4$x($.normContext, "LEVEL ONE", 250, 200, 1000);
          this.alien.draw$0();
        } else if (t1 === $.LevelManager_enumLevelOne) {
          J.fillText$4$x($.normContext, "LEVEL TWO", 250, 200, 1000);
          this.droid.draw$0();
        } else if (t1 === $.LevelManager_enumLevelTwo)
          J.fillText$4$x($.normContext, "LEVEL THREE", 250, 200, 1000);
        else if (t1 === $.LevelManager_enumLevelThree)
          J.fillText$4$x($.normContext, "LEVEL FOUR", 250, 200, 1000);
        J.set$font$x($.normContext, "normal 15pt calibri");
        J.fillText$4$x($.normContext, "Press Enter to continue.", 420, 420, 1000);
      }
    }, "call$0", "get$draw", 0, 0, null],
    update$1: [function(dt) {
      var t1, t2;
      t1 = $.Game_instance;
      t2 = t1.state;
      if (t2 === t1.stateEnumTransition) {
        t1.input.toString;
        if ($.get$gameLoop()._keyboard.isDown$1(13)) {
          this.input.toString;
          if (J.$sub$n($.get$gameLoop()._keyboard.timePressed$1(13), $.Game_instance.lastENTER) > 0) {
            C.JSArray_methods.set$length($.ObjectManager_instance.goList, 0);
            t1 = $.Game_instance;
            t2 = t1.currentLevel;
            if (typeof t2 !== "number")
              return t2.$add();
            t1.currentLevel = t2 + 1;
            t1.reloadLevel$0();
          }
        }
        if ($.Game_instance.currentLevel === $.LevelManager_enumMainMenu)
          this.alien.update$1(dt);
        if ($.Game_instance.currentLevel === $.LevelManager_enumLevelOne)
          this.droid.update$1(dt);
      } else if (t2 === t1.stateEnumIntro) {
        t1.input.toString;
        if (!$.get$gameLoop()._keyboard.isDown$1(13)) {
          $.Game_instance.input.toString;
          t1 = $.get$gameLoop()._keyboard.isDown$1(27);
        } else
          t1 = true;
        if (t1) {
          this.input.toString;
          if (!(J.$sub$n($.get$gameLoop()._keyboard.timePressed$1(13), $.Game_instance.lastENTER) > 0)) {
            this.input.toString;
            t1 = J.$sub$n($.get$gameLoop()._keyboard.timePressed$1(27), $.Game_instance.lastESC) > 0;
          } else
            t1 = true;
          if (t1) {
            t1 = $.Game_instance;
            this.input.toString;
            t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
            t1 = $.Game_instance;
            this.input.toString;
            t1.lastESC = $.get$gameLoop()._keyboard.timePressed$1(27);
            C.JSArray_methods.set$length($.ObjectManager_instance.goList, 0);
            t1 = $.Game_instance;
            t1.state = t1.stateEnumTransition;
          }
        }
      }
    }, "call$1", "get$update", 2, 0, null, 228],
    LevelTransition$0: function() {
      this.gdp$LevelTransition$width = 640;
      this.gdp$LevelTransition$height = 480;
      this.gdp$LevelTransition$x = 0;
      this.gdp$LevelTransition$y = 0;
      this.input = U.Input_Input();
      var t1 = new U.Alien(W.ImageElement_ImageElement(null, null, null), null, 0, 0, 97, 50, 8, -7, null, null, false, null, null, null, 0, 0, false);
      t1.initialize$2(500, 0);
      this.alien = t1;
      t1 = new U.Droid(W.ImageElement_ImageElement(null, null, null), null, 0, 442, 78, 108, 8, -4, null, null, false, null, null, null, 0, 0, false);
      t1.initialize$2(300, 0);
      this.droid = t1;
      t1 = new U.SpriteSheet(this.spritex, this.spritey, 640, 480, "./content/intro_bg.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/intro_bg.png");
      this.introBG = t1;
      t1 = new U.SpriteSheet(this.spritex, this.spritey, 640, 480, "./content/intro_text.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/intro_text.png");
      this.introText = t1;
      t1 = new U.SpriteSheet(this.spritex, this.spritey, 75, 100, "./content/buzzspritesheet.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/buzzspritesheet.png");
      this.buzz = t1;
      t1 = new U.SpriteSheet(this.spritex, this.spritey, 75, 100, "./content/buzzspritesheet.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/buzzspritesheet.png");
      this.buzz2 = t1;
      this.introText.spritey = -400;
      this.buzz.spritey = 0;
      this.buzz2x = 0;
    },
    static: {LevelTransition$: function() {
        var t1 = new U.LevelTransition(null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, 0, 0, null, null, 0, 0, false);
        t1.LevelTransition$0();
        return t1;
      }}
  },
  MainMenu: {
    "": "GameObject;input,sprite,instructions,x:gdp$MainMenu$x*,y:gdp$MainMenu$y*,width:gdp$MainMenu$width>,height:gdp$MainMenu$height>,xx,yy,i,spritex,spritey,playGame,options,controls,exit,x,y,height,width,dead",
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7;
      t1 = this.sprite;
      t2 = this.gdp$MainMenu$x;
      t3 = this.gdp$MainMenu$width;
      t4 = this.gdp$MainMenu$y;
      t5 = this.gdp$MainMenu$height;
      t6 = t1._framew;
      t7 = t1._frameh;
      J.drawImageScaledFromSource$9$x($.normContext, t1._img, t1.spritex, t1.spritey, t6, t7, t2 - t3 / 2, t4 - t5 / 2, t6, t7);
      t7 = this.instructions;
      t6 = this.xx;
      t5 = this.yy;
      t4 = $.ctx;
      t3 = t7._framew;
      t2 = t7._frameh;
      t4.drawImageScaledFromSource$9(t4, t7._img, t7.spritex, t7.spritey, t3, t2, t6 - 129, t5 - 57, t3, t2);
    }, "call$0", "get$draw", 0, 0, null],
    update$1: [function(dt) {
      var t1, t2;
      this.i = this.i + 1;
      this.input.toString;
      if ($.get$gameLoop()._keyboard.pressed$1(39) && this.playGame) {
        this.playGame = false;
        this.options = true;
        this.sprite.spritex = 150;
      } else {
        this.input.toString;
        if ($.get$gameLoop()._keyboard.pressed$1(39) && this.options) {
          this.options = false;
          this.controls = true;
          this.sprite.spritex = 300;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(39) && this.controls) {
            this.controls = false;
            this.exit = true;
            this.sprite.spritex = 450;
          }
        }
      }
      this.input.toString;
      if ($.get$gameLoop()._keyboard.pressed$1(40) && this.playGame) {
        this.playGame = false;
        this.options = true;
        this.sprite.spritex = 150;
      } else {
        this.input.toString;
        if ($.get$gameLoop()._keyboard.pressed$1(40) && this.options) {
          this.options = false;
          this.controls = true;
          this.sprite.spritex = 300;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(40) && this.controls) {
            this.controls = false;
            this.exit = true;
            this.sprite.spritex = 450;
          }
        }
      }
      this.input.toString;
      if ($.get$gameLoop()._keyboard.pressed$1(37) && this.options) {
        this.options = false;
        this.playGame = true;
        this.sprite.spritex = 0;
      } else {
        this.input.toString;
        if ($.get$gameLoop()._keyboard.pressed$1(37) && this.controls) {
          this.controls = false;
          this.options = true;
          this.sprite.spritex = 150;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(37) && this.exit) {
            this.exit = false;
            this.controls = true;
            this.sprite.spritex = 300;
          }
        }
      }
      this.input.toString;
      if ($.get$gameLoop()._keyboard.pressed$1(38) && this.options) {
        this.options = false;
        this.playGame = true;
        this.sprite.spritex = 0;
      } else {
        this.input.toString;
        if ($.get$gameLoop()._keyboard.pressed$1(38) && this.controls) {
          this.controls = false;
          this.options = true;
          this.sprite.spritex = 150;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(38) && this.exit) {
            this.exit = false;
            this.controls = true;
            this.sprite.spritex = 300;
          }
        }
      }
      t1 = $.Game_instance;
      if (t1.state === t1.stateEnumMain) {
        this.input.toString;
        t1 = $.get$gameLoop()._keyboard.isDown$1(13) && this.playGame;
      } else
        t1 = false;
      if (t1) {
        this.input.toString;
        if (J.$sub$n($.get$gameLoop()._keyboard.timePressed$1(13), $.Game_instance.lastENTER) > 0) {
          t1 = $.Game_instance;
          t1.state = t1.stateEnumIntro;
          this.playGame = false;
          this.input.toString;
          t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
          $.Game_instance.transition = U.LevelTransition$();
        }
      } else {
        if (this.controls) {
          this.input.toString;
          t1 = $.get$gameLoop()._keyboard.pressed$1(13);
        } else
          t1 = false;
        if (t1) {
          this.controls = false;
          t1 = $.Game_instance;
          t1.state = t1.stateEnumControls;
          this.input.toString;
          t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
          this.playGame = true;
        } else {
          if (this.options) {
            this.input.toString;
            t1 = $.get$gameLoop()._keyboard.pressed$1(13);
          } else
            t1 = false;
          if (t1) {
            this.options = false;
            this.playGame = true;
            t1 = $.Game_instance;
            t1.state = t1.stateEnumOptions;
            this.input.toString;
            t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
          } else {
            if (this.exit) {
              this.input.toString;
              t1 = $.get$gameLoop()._keyboard.pressed$1(13);
            } else
              t1 = false;
            if (t1) {
              t1 = $.get$app().window;
              t2 = $.get$ChromeAppWindow__app_window();
              if (t2 == null)
                t1._throwNotAvailable$0();
              t1 = t2.callMethod$1("current");
              (t1 == null ? null : new B.AppWindow(t1)).jsProxy.callMethod$1("close");
            }
          }
        }
      }
    }, "call$1", "get$update", 2, 0, null, 228],
    MainMenu$0: function() {
      this.gdp$MainMenu$width = 150;
      this.gdp$MainMenu$height = 48;
      this.gdp$MainMenu$x = 300;
      this.gdp$MainMenu$y = 200;
      this.input = U.Input_Input();
      this.playGame = true;
      var t1 = new U.SpriteSheet(this.spritex, this.spritey, 150, 196, "./content/menu.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/menu.png");
      this.sprite = t1;
      t1 = new U.SpriteSheet(0, 0, 258, 114, "./content/instructions.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/instructions.png");
      this.instructions = t1;
      this.xx = 750;
      this.yy = 400;
    },
    static: {MainMenu$: function() {
        var t1 = new U.MainMenu(null, null, null, null, null, null, null, null, null, 0, 0, 0, false, false, false, false, null, null, 0, 0, false);
        t1.MainMenu$0();
        return t1;
      }}
  },
  Options: {
    "": "GameObject;input,sprite,bg,x:gdp$Options$x*,y:gdp$Options$y*,width:gdp$Options$width>,height:gdp$Options$height>,spritex,spritey,back,sound,difficulty,screen,x,y,height,width,dead",
    draw$0: [function() {
      var t1, t2, t3, t4, t5;
      t1 = $.Game_instance;
      if (t1.state === t1.stateEnumOptions) {
        t1 = this.bg;
        t2 = this.gdp$Options$x;
        t3 = this.gdp$Options$y;
        t4 = t1._framew;
        t5 = t1._frameh;
        J.drawImageScaledFromSource$9$x($.normContext, t1._img, t1.spritex, t1.spritey, t4, t5, t2, t3, t4, t5);
        t5 = this.sprite;
        t4 = this.gdp$Options$x;
        t3 = this.gdp$Options$y;
        t2 = t5._framew;
        t1 = t5._frameh;
        J.drawImageScaledFromSource$9$x($.normContext, t5._img, t5.spritex, t5.spritey, t2, t1, t4, t3, t2, t1);
      }
    }, "call$0", "get$draw", 0, 0, null],
    update$1: [function(dt) {
      var t1, t2;
      this.back = true;
      $.Game_instance.input.toString;
      t1 = $.get$gameLoop()._keyboard.pressed$1(13);
      if (t1) {
        this.input.toString;
        if (J.$sub$n($.get$gameLoop()._keyboard.timePressed$1(13), $.Game_instance.lastENTER) > 0) {
          t1 = $.Game_instance.currentLevel;
          t2 = $.LevelManager_enumMainMenu;
          if (typeof t1 !== "number")
            return t1.$gt();
          t2 = t1 > t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1) {
          t1 = $.Game_instance;
          t1.state = t1.stateEnumPause;
          this.input.toString;
          t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
        } else {
          this.input.toString;
          if (J.$sub$n($.get$gameLoop()._keyboard.timePressed$1(13), $.Game_instance.lastENTER) > 0 && $.Game_instance.currentLevel === $.LevelManager_enumMainMenu) {
            t1 = $.Game_instance;
            t1.state = t1.stateEnumMain;
            t1.resetMainMenu = true;
            this.input.toString;
            t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
          }
        }
      } else {
        this.input.toString;
        if (!$.get$gameLoop()._keyboard.pressed$1(27)) {
          this.input.toString;
          t1 = $.get$gameLoop()._keyboard.pressed$1(8);
        } else
          t1 = true;
        if (t1 && $.Game_instance.currentLevel === $.LevelManager_enumMainMenu) {
          t1 = $.Game_instance;
          t1.state = t1.stateEnumMain;
          t1.resetMainMenu = true;
          this.input.toString;
          t1.lastESC = $.get$gameLoop()._keyboard.timePressed$1(27);
        } else {
          this.input.toString;
          if (!$.get$gameLoop()._keyboard.pressed$1(27)) {
            this.input.toString;
            t1 = $.get$gameLoop()._keyboard.pressed$1(8);
          } else
            t1 = true;
          if (t1) {
            t1 = $.Game_instance;
            t1.state = t1.stateEnumPause;
            t1.resetMainMenu = true;
            this.input.toString;
            t1.lastESC = $.get$gameLoop()._keyboard.timePressed$1(27);
          }
        }
      }
    }, "call$1", "get$update", 2, 0, null, 228],
    Options$0: function() {
      this.gdp$Options$width = 640;
      this.gdp$Options$height = 480;
      this.gdp$Options$x = 0;
      this.gdp$Options$y = 0;
      this.input = U.Input_Input();
      this.back = true;
      var t1 = new U.SpriteSheet(this.spritex, this.spritey, 640, 480, "./content/options.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/options.png");
      this.sprite = t1;
      t1 = new U.SpriteSheet(this.spritex, this.spritey, 640, 480, "./content/options_bg.jpg", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/options_bg.jpg");
      this.bg = t1;
    }
  },
  ObjectManager: {
    "": "Object;goList,blockList,enemyList,itemList,triggerList",
    removeDeadObjects$0: [function() {
      var t1, t2, t3, t4, i, t5, go;
      for (t1 = this.goList, t2 = this.itemList, t3 = this.enemyList, t4 = this.blockList, i = 0; t5 = t1.length, i < t5; ++i) {
        if (i < 0)
          return H.ioore(t1, i);
        go = t1[i];
        if (go.dead) {
          C.JSArray_methods.remove$1(t1, go);
          C.JSArray_methods.remove$1(t2, go);
          C.JSArray_methods.remove$1(t3, go);
          C.JSArray_methods.remove$1(t4, go);
          --i;
        }
      }
    }, "call$0", "get$removeDeadObjects", 0, 0, null],
    clear$0: [function(_) {
      C.JSArray_methods.set$length(this.goList, 0);
      C.JSArray_methods.set$length(this.itemList, 0);
      C.JSArray_methods.set$length(this.enemyList, 0);
      C.JSArray_methods.set$length(this.blockList, 0);
    }, "call$0", "get$clear", 0, 0, null],
    static: {"": "ObjectManager_instance"}
  },
  Alien: {
    "": "Enemy;img,sprite,spriteXInitial,spriteYInitial,spriteWidth,spriteHeight,imgOffsetX,imgOffsetY,initialPos,endPos,goingBack,triggerFall,x,y,height,width,dead",
    initialize$2: [function(x, y) {
      var t1;
      U.GameObject.prototype.initialize$2.call(this, x, y);
      this.width = 83;
      this.height = 40;
      t1 = new U.SpriteSheet(this.spriteXInitial, this.spriteYInitial, this.spriteWidth, this.spriteHeight, "./content/enemies_spritesheet.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/enemies_spritesheet.png");
      this.sprite = t1;
      this.initialPos = x;
      this.endPos = x - 150;
      t1.frameChangeRate = 10;
      t1.numberOfFrames = 4;
    }, "call$2", "get$initialize", 4, 0, null, 12, 138],
    update$1: [function(dt) {
      var speed, t1, t2;
      speed = 0.4 * dt;
      if (!this.goingBack) {
        t1 = this.x;
        t2 = this.endPos;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 >= t2)
          this.x = t1 - speed;
        else {
          this.goingBack = true;
          this.sprite.spritey = 50;
        }
      } else {
        t1 = this.x;
        t2 = this.initialPos;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 < t2)
          this.x = t1 + speed;
        else {
          this.goingBack = false;
          this.sprite.spritey = 0;
        }
      }
      this.sprite.update$1(dt);
    }, "call$1", "get$update", 2, 0, null, 228],
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      t1 = this.sprite;
      t2 = this.x;
      t3 = this.width;
      if (typeof t2 !== "number")
        return t2.$sub();
      t4 = this.y;
      t5 = this.height;
      if (typeof t4 !== "number")
        return t4.$sub();
      t6 = $.ctx;
      t7 = t1._img;
      t8 = t1.spritex;
      t9 = t1.spritey;
      t10 = t1._framew;
      t1 = t1._frameh;
      t6.drawImageScaledFromSource$9(t6, t7, t8, t9, t10, t1, t2 - t3 / 2 - this.imgOffsetX, t4 - t5 / 2 + this.imgOffsetY, t10, t1);
    }, "call$0", "get$draw", 0, 0, null],
    injure$0: [function() {
      return 10;
    }, "call$0", "get$injure", 0, 0, null]
  },
  Block: {
    "": "GameObject;boulder,img,isObstacle,triggerFall,x,y,height,width,dead",
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7, t8, pattern;
      t1 = this.height;
      if (t1 <= 100 && !this.isObstacle) {
        t2 = this.boulder;
        t3 = this.x;
        t4 = this.width;
        if (typeof t3 !== "number")
          return t3.$sub();
        t5 = this.y;
        if (typeof t5 !== "number")
          return t5.$sub();
        t6 = $.ctx;
        t7 = t2._framew;
        t8 = t2._frameh;
        t6.drawImageScaledFromSource$9(t6, t2._img, t2.spritex, t2.spritey, t7, t8, t3 - t4 / 2, t5 - t1 / 2, t7, t8);
      } else {
        t2 = this.triggerFall;
        if (t2)
          if (this.isObstacle) {
            t3 = this.y;
            if (typeof t3 !== "number")
              return t3.$lt();
            t3 = t3 < 430;
          } else
            t3 = false;
        else
          t3 = false;
        if (t3) {
          t2 = this.y;
          if (typeof t2 !== "number")
            return t2.$add();
          this.y = t2 + 5;
          this.height = t1 - 10.5;
          J.save$0$x($.normContext);
          J.beginPath$0$x($.ctx.context);
          pattern = J.createPatternFromImage$2$x($.normContext, this.img, "repeat");
          t1 = $.ctx;
          t2 = this.x;
          t3 = this.width;
          if (typeof t2 !== "number")
            return t2.$sub();
          t4 = this.y;
          t5 = this.height;
          if (typeof t4 !== "number")
            return t4.$sub();
          t1.rect$4(t1, t2 - t3 / 2, t4 - t5 / 2, t3, t5);
          J.set$fillStyle$x($.normContext, pattern);
          J.closePath$0$x($.normContext);
          J.fill$0$x($.ctx.context);
          J.restore$0$x($.normContext);
        } else {
          t1 = t2 && !this.isObstacle;
          t2 = $.normContext;
          if (t1) {
            t1 = this.y;
            if (typeof t1 !== "number")
              return t1.$add();
            this.y = t1 + 3;
            J.save$0$x(t2);
            J.beginPath$0$x($.ctx.context);
            pattern = J.createPatternFromImage$2$x($.normContext, this.img, "repeat");
            t2 = $.ctx;
            t1 = this.x;
            t3 = this.width;
            if (typeof t1 !== "number")
              return t1.$sub();
            t4 = this.y;
            t5 = this.height;
            if (typeof t4 !== "number")
              return t4.$sub();
            t2.rect$4(t2, t1 - t3 / 2, t4 - t5 / 2, t3, t5);
            J.set$fillStyle$x($.normContext, pattern);
            J.closePath$0$x($.normContext);
            J.fill$0$x($.ctx.context);
            J.restore$0$x($.normContext);
          } else {
            J.save$0$x(t2);
            J.beginPath$0$x($.ctx.context);
            pattern = J.createPatternFromImage$2$x($.normContext, this.img, "repeat");
            t1 = $.ctx;
            t2 = this.x;
            t3 = this.width;
            if (typeof t2 !== "number")
              return t2.$sub();
            t4 = this.y;
            t5 = this.height;
            if (typeof t4 !== "number")
              return t4.$sub();
            t1.rect$4(t1, t2 - t3 / 2, t4 - t5 / 2, t3, t5);
            J.set$fillStyle$x($.normContext, pattern);
            J.closePath$0$x($.normContext);
            J.fill$0$x($.ctx.context);
            J.restore$0$x($.normContext);
          }
        }
      }
    }, "call$0", "get$draw", 0, 0, null]
  },
  Droid: {
    "": "Enemy;img,sprite,spriteXInitial,spriteYInitial,spriteWidth,spriteHeight,imgOffsetX,imgOffsetY,initialPos,endPos,goingBack,triggerFall,x,y,height,width,dead",
    initialize$2: [function(x, y) {
      var t1;
      U.GameObject.prototype.initialize$2.call(this, x, y);
      this.width = 54;
      this.height = 104;
      t1 = new U.SpriteSheet(this.spriteXInitial, this.spriteYInitial, this.spriteWidth, this.spriteHeight, "./content/enemies_spritesheet copy.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/enemies_spritesheet copy.png");
      this.sprite = t1;
      this.initialPos = x;
      this.endPos = x - 150;
      t1.frameChangeRate = 10;
      t1.numberOfFrames = 8;
    }, "call$2", "get$initialize", 4, 0, null, 12, 138],
    update$1: [function(dt) {
      var speed, t1, t2;
      speed = 0.4 * dt;
      if (!this.goingBack) {
        t1 = this.x;
        t2 = this.endPos;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 >= t2)
          this.x = t1 - speed;
        else {
          this.goingBack = true;
          this.sprite.spritey = 550;
        }
      } else {
        t1 = this.x;
        t2 = this.initialPos;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 < t2)
          this.x = t1 + speed;
        else {
          this.goingBack = false;
          this.sprite.spritey = 442;
        }
      }
      this.sprite.update$1(dt);
    }, "call$1", "get$update", 2, 0, null, 228],
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      t1 = this.sprite;
      t2 = this.x;
      t3 = this.width;
      if (typeof t2 !== "number")
        return t2.$sub();
      t4 = this.y;
      t5 = this.height;
      if (typeof t4 !== "number")
        return t4.$sub();
      t6 = $.ctx;
      t7 = t1._img;
      t8 = t1.spritex;
      t9 = t1.spritey;
      t10 = t1._framew;
      t1 = t1._frameh;
      t6.drawImageScaledFromSource$9(t6, t7, t8, t9, t10, t1, t2 - t3 / 2 - this.imgOffsetX, t4 - t5 / 2 + this.imgOffsetY, t10, t1);
    }, "call$0", "get$draw", 0, 0, null],
    injure$0: [function() {
      return 10;
    }, "call$0", "get$injure", 0, 0, null]
  },
  Enemy: {
    "": "GameObject;",
    injure$0: [function() {
      return;
    }, "call$0", "get$injure", 0, 0, null]
  },
  GameObject: {
    "": "Object;x*,y*,height>,width>",
    draw$0: [function() {
      return;
    }, "call$0", "get$draw", 0, 0, null],
    update$1: [function(dt) {
    }, "call$1", "get$update", 2, 0, null, 228],
    initialize$2: [function(x, y) {
      this.set$x(this, x);
      this.set$y(this, y);
    }, "call$2", "get$initialize", 4, 0, null, 12, 138]
  },
  Gorilla: {
    "": "Enemy;img,sprite,spriteXInitial,spriteYInitial,spriteWidth,spriteHeight,imgOffsetX,imgOffsetY,initialPos,endPos,goingBack,gdp$Gorilla$triggerFall,triggerFall,x,y,height,width,dead",
    update$1: [function(dt) {
      var speed, t1, t2;
      speed = 0.4 * dt;
      if (this.gdp$Gorilla$triggerFall) {
        t1 = this.y;
        if (typeof t1 !== "number")
          return t1.$add();
        this.y = t1 + 1;
        this.sprite.spritey = 100;
      } else if (!this.goingBack) {
        t1 = this.x;
        t2 = this.endPos;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 >= t2)
          this.x = t1 - speed;
        else {
          this.goingBack = true;
          this.sprite.spritey = 100;
        }
      } else {
        t1 = this.x;
        t2 = this.initialPos;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 < t2)
          this.x = t1 + speed;
        else {
          this.goingBack = false;
          this.sprite.spritey = 266;
        }
      }
      this.sprite.update$1(dt);
    }, "call$1", "get$update", 2, 0, null, 228],
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      t1 = this.sprite;
      t2 = this.x;
      t3 = this.width;
      if (typeof t2 !== "number")
        return t2.$sub();
      t4 = this.y;
      t5 = this.height;
      if (typeof t4 !== "number")
        return t4.$sub();
      t6 = $.ctx;
      t7 = t1._img;
      t8 = t1.spritex;
      t9 = t1.spritey;
      t10 = t1._framew;
      t1 = t1._frameh;
      t6.drawImageScaledFromSource$9(t6, t7, t8, t9, t10, t1, t2 - t3 / 2 - this.imgOffsetX, t4 - t5 / 2 + this.imgOffsetY, t10, t1);
    }, "call$0", "get$draw", 0, 0, null],
    injure$0: [function() {
      return 10;
    }, "call$0", "get$injure", 0, 0, null]
  },
  InGameMenu: {
    "": "GameObject;input,sprite,x:gdp$InGameMenu$x*,y:gdp$InGameMenu$y*,width:gdp$InGameMenu$width>,height:gdp$InGameMenu$height>,spritex,spritey,resume,options,controls,quit,x,y,height,width,dead",
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7;
      t1 = $.Game_instance;
      if (t1.state === t1.stateEnumPause) {
        t1 = this.sprite;
        t2 = this.gdp$InGameMenu$x;
        t3 = this.gdp$InGameMenu$width;
        t4 = this.gdp$InGameMenu$y;
        t5 = this.gdp$InGameMenu$height;
        t6 = t1._framew;
        t7 = t1._frameh;
        J.drawImageScaledFromSource$9$x($.normContext, t1._img, t1.spritex, t1.spritey, t6, t7, t2 - t3 / 2, t4 - t5 / 2, t6, t7);
      }
    }, "call$0", "get$draw", 0, 0, null],
    update$1: [function(dt) {
      var t1 = $.Game_instance;
      if (t1.state === t1.stateEnumPause) {
        this.input.toString;
        if ($.get$gameLoop()._keyboard.pressed$1(39) && this.resume) {
          this.resume = false;
          this.options = true;
          this.sprite.spritex = 150;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(39) && this.options) {
            this.options = false;
            this.controls = true;
            this.sprite.spritex = 300;
          } else {
            this.input.toString;
            if ($.get$gameLoop()._keyboard.pressed$1(39) && this.controls) {
              this.controls = false;
              this.quit = true;
              this.sprite.spritex = 450;
            }
          }
        }
        this.input.toString;
        if ($.get$gameLoop()._keyboard.pressed$1(40) && this.resume) {
          this.resume = false;
          this.options = true;
          this.sprite.spritex = 150;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(40) && this.options) {
            this.options = false;
            this.controls = true;
            this.sprite.spritex = 300;
          } else {
            this.input.toString;
            if ($.get$gameLoop()._keyboard.pressed$1(40) && this.controls) {
              this.controls = false;
              this.quit = true;
              this.sprite.spritex = 450;
            }
          }
        }
        this.input.toString;
        if ($.get$gameLoop()._keyboard.pressed$1(37) && this.options) {
          this.options = false;
          this.resume = true;
          this.sprite.spritex = 0;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(37) && this.controls) {
            this.controls = false;
            this.options = true;
            this.sprite.spritex = 150;
          } else {
            this.input.toString;
            if ($.get$gameLoop()._keyboard.pressed$1(37) && this.quit) {
              this.quit = false;
              this.controls = true;
              this.sprite.spritex = 300;
            }
          }
        }
        this.input.toString;
        if ($.get$gameLoop()._keyboard.pressed$1(38) && this.options) {
          this.options = false;
          this.resume = true;
          this.sprite.spritex = 0;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(38) && this.controls) {
            this.controls = false;
            this.options = true;
            this.sprite.spritex = 150;
          } else {
            this.input.toString;
            if ($.get$gameLoop()._keyboard.pressed$1(38) && this.quit) {
              this.quit = false;
              this.controls = true;
              this.sprite.spritex = 300;
            }
          }
        }
        if (this.resume) {
          this.input.toString;
          t1 = $.get$gameLoop()._keyboard.pressed$1(13);
        } else
          t1 = false;
        if (t1) {
          t1 = $.Game_instance;
          t1.state = t1.stateEnumPlay;
          this.input.toString;
          t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
          $.Game_instance.resetMainMenu = true;
        } else {
          this.input.toString;
          if ($.get$gameLoop()._keyboard.pressed$1(27)) {
            this.input.toString;
            if (J.$sub$n($.get$gameLoop()._keyboard.timePressed$1(27), $.Game_instance.lastESC) > 0) {
              t1 = $.Game_instance;
              this.input.toString;
              t1.lastESC = $.get$gameLoop()._keyboard.timePressed$1(27);
              t1 = $.Game_instance;
              t1.state = t1.stateEnumPlay;
              t1.resetMainMenu = true;
            }
          } else {
            if (this.controls) {
              this.input.toString;
              t1 = $.get$gameLoop()._keyboard.pressed$1(13);
            } else
              t1 = false;
            if (t1) {
              t1 = $.Game_instance;
              t1.state = t1.stateEnumControls;
              this.input.toString;
              t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
              $.Game_instance.resetMainMenu = true;
            } else {
              if (this.options) {
                this.input.toString;
                t1 = $.get$gameLoop()._keyboard.pressed$1(13);
              } else
                t1 = false;
              if (t1) {
                this.options = false;
                this.resume = true;
                t1 = $.Game_instance;
                t1.state = t1.stateEnumOptions;
                this.input.toString;
                t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
                $.Game_instance.resetMainMenu = true;
              } else {
                if (this.quit) {
                  this.input.toString;
                  t1 = $.get$gameLoop()._keyboard.pressed$1(13);
                } else
                  t1 = false;
                if (t1) {
                  t1 = $.Game_instance;
                  t1.currentLevel = $.LevelManager_enumMainMenu;
                  t1.state = t1.stateEnumMain;
                  this.input.toString;
                  t1.lastENTER = $.get$gameLoop()._keyboard.timePressed$1(13);
                  t1 = $.Game_instance;
                  t1.resetMainMenu = true;
                  t1.menu.playGame = true;
                }
              }
            }
          }
        }
      }
    }, "call$1", "get$update", 2, 0, null, 228],
    InGameMenu$0: function() {
      this.gdp$InGameMenu$width = 150;
      this.gdp$InGameMenu$height = 48;
      this.gdp$InGameMenu$x = 300;
      this.gdp$InGameMenu$y = 200;
      this.input = U.Input_Input();
      this.resume = true;
      var t1 = new U.SpriteSheet(this.spritex, this.spritey, 150, 198, "./content/menu.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/menu.png");
      this.sprite = t1;
    },
    static: {InGameMenu$: function() {
        var t1 = new U.InGameMenu(null, null, null, null, null, null, 0, 196, false, false, false, false, null, null, 0, 0, false);
        t1.InGameMenu$0();
        return t1;
      }}
  },
  Item: {
    "": "GameObject;",
    collect$0: [function() {
      return;
    }, "call$0", "get$collect", 0, 0, null]
  },
  Oxygen: {
    "": "Item;sprite,x,y,height,width,dead",
    update$1: [function(dt) {
    }, "call$1", "get$update", 2, 0, null, 228],
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7, t8;
      t1 = this.sprite;
      t2 = this.x;
      t3 = this.width;
      if (typeof t2 !== "number")
        return t2.$sub();
      t4 = this.y;
      t5 = this.height;
      if (typeof t4 !== "number")
        return t4.$sub();
      t6 = $.ctx;
      t7 = t1._framew;
      t8 = t1._frameh;
      t6.drawImageScaledFromSource$9(t6, t1._img, t1.spritex, t1.spritey, t7, t8, t2 - t3 / 2, t4 - t5 / 2, t7, t8);
    }, "call$0", "get$draw", 0, 0, null],
    collect$0: [function() {
      $.Game_oxygen = $.Game_oxygen + 2;
      $.SoundManager_instance.playSound$1(2);
      this.dead = true;
    }, "call$0", "get$collect", 0, 0, null]
  },
  Player: {
    "": "GameObject;img,input,JUMPING,WALKING,LOOK_RIGHT,LOOK_LEFT,velocity_y,accel,sprite,stateEnumAlive,stateEnumInjured,stateEnumDead,state,invincibilityTimer,blink,playerStartX,playerStartY,imgXOffset,imgYOffset,x,y,height,width,dead",
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      if (this.state !== this.stateEnumDead && !this.blink) {
        t1 = this.JUMPING;
        if (t1 && this.LOOK_RIGHT) {
          t1 = this.sprite;
          t1.spritex = 225;
          t1.spritey = 200;
          t2 = this.x;
          t3 = this.width;
          if (typeof t2 !== "number")
            return t2.$sub();
          t4 = this.y;
          t5 = this.height;
          if (typeof t4 !== "number")
            return t4.$sub();
          t6 = $.ctx;
          t7 = t1._framew;
          t8 = t1._frameh;
          t6.drawImageScaledFromSource$9(t6, t1._img, 225, 200, t7, t8, t2 - t3 / 2 - this.imgXOffset, t4 - t5 / 2 + this.imgYOffset, t7, t8);
        } else if (t1 && this.LOOK_LEFT) {
          t1 = this.sprite;
          t1.spritex = 225;
          t1.spritey = 300;
          t2 = this.x;
          t3 = this.width;
          if (typeof t2 !== "number")
            return t2.$sub();
          t4 = this.y;
          t5 = this.height;
          if (typeof t4 !== "number")
            return t4.$sub();
          t6 = $.ctx;
          t7 = t1._framew;
          t8 = t1._frameh;
          t6.drawImageScaledFromSource$9(t6, t1._img, 225, 300, t7, t8, t2 - t3 / 2 - this.imgXOffset, t4 - t5 / 2 + this.imgYOffset, t7, t8);
        } else if (t1) {
          t1 = this.sprite;
          t1.spritex = 225;
          t1.spritey = 200;
          t2 = this.x;
          t3 = this.width;
          if (typeof t2 !== "number")
            return t2.$sub();
          t4 = this.y;
          t5 = this.height;
          if (typeof t4 !== "number")
            return t4.$sub();
          t6 = $.ctx;
          t7 = t1._framew;
          t8 = t1._frameh;
          t6.drawImageScaledFromSource$9(t6, t1._img, 225, 200, t7, t8, t2 - t3 / 2 - this.imgXOffset, t4 - t5 / 2 + this.imgYOffset, t7, t8);
        } else {
          t1 = this.WALKING;
          if (t1 && this.LOOK_RIGHT) {
            t1 = this.sprite;
            t2 = t1.spritex;
            if (t2 >= 825) {
              t1.spritex = 0;
              t1.spritey = 0;
              t2 = 0;
            } else {
              t2 += 75;
              t1.spritex = t2;
              t1.spritey = 0;
            }
            t3 = this.x;
            t4 = this.width;
            if (typeof t3 !== "number")
              return t3.$sub();
            t5 = this.y;
            t6 = this.height;
            if (typeof t5 !== "number")
              return t5.$sub();
            t7 = $.ctx;
            t8 = t1._framew;
            t9 = t1._frameh;
            t7.drawImageScaledFromSource$9(t7, t1._img, t2, 0, t8, t9, t3 - t4 / 2 - this.imgXOffset, t5 - t6 / 2 + this.imgYOffset, t8, t9);
          } else if (t1 && this.LOOK_LEFT) {
            t1 = this.sprite;
            t2 = t1.spritex;
            if (t2 <= 0) {
              t1.spritex = 825;
              t1.spritey = 100;
              t2 = 825;
            } else {
              t2 -= 75;
              t1.spritex = t2;
              t1.spritey = 100;
            }
            t3 = this.x;
            t4 = this.width;
            if (typeof t3 !== "number")
              return t3.$sub();
            t5 = this.y;
            t6 = this.height;
            if (typeof t5 !== "number")
              return t5.$sub();
            t7 = $.ctx;
            t8 = t1._framew;
            t9 = t1._frameh;
            t7.drawImageScaledFromSource$9(t7, t1._img, t2, 100, t8, t9, t3 - t4 / 2 - this.imgXOffset, t5 - t6 / 2 + this.imgYOffset, t8, t9);
          } else {
            t1 = this.LOOK_LEFT;
            t2 = $.ctx;
            t3 = this.sprite;
            t4 = this.imgXOffset;
            t5 = this.imgYOffset;
            if (t1) {
              t3.spritex = 825;
              t3.spritey = 100;
              t1 = this.x;
              t6 = this.width;
              if (typeof t1 !== "number")
                return t1.$sub();
              t7 = this.y;
              t8 = this.height;
              if (typeof t7 !== "number")
                return t7.$sub();
              t9 = t3._framew;
              t10 = t3._frameh;
              t2.drawImageScaledFromSource$9(t2, t3._img, 825, 100, t9, t10, t1 - t6 / 2 - t4, t7 - t8 / 2 + t5, t9, t10);
            } else {
              t3.spritex = 0;
              t3.spritey = 0;
              t1 = this.x;
              t6 = this.width;
              if (typeof t1 !== "number")
                return t1.$sub();
              t7 = this.y;
              t8 = this.height;
              if (typeof t7 !== "number")
                return t7.$sub();
              t9 = t3._framew;
              t10 = t3._frameh;
              t2.drawImageScaledFromSource$9(t2, t3._img, 0, 0, t9, t10, t1 - t6 / 2 - t4, t7 - t8 / 2 + t5, t9, t10);
            }
          }
        }
      }
    }, "call$0", "get$draw", 0, 0, null],
    update$1: [function(dt) {
      var t1, t2, t3;
      t1 = this.stateEnumDead;
      if (this.state !== t1) {
        this.input.toString;
        if ($.get$gameLoop()._keyboard.isDown$1(38) || this.input.controllerButtonPushed)
          if (!this.JUMPING) {
            $.SoundManager_instance.playSound$1(1);
            this.JUMPING = true;
            this.velocity_y = 25;
          }
        this.input.toString;
        if ($.get$gameLoop()._keyboard.isDown$1(39) || this.input.controllerAxesRight) {
          this.movePlayer$2(1, (this.input.controllerAxesRight ? 3.5 : 3) * dt);
          this.WALKING = true;
          this.LOOK_RIGHT = true;
          this.LOOK_LEFT = false;
        } else
          this.WALKING = false;
        this.input.toString;
        if ($.get$gameLoop()._keyboard.isDown$1(37) || this.input.controllerAxesLeft) {
          if (this.input.controllerAxesLeft)
            ;
          this.movePlayer$2(-1, 3 * dt);
          this.WALKING = true;
          this.LOOK_LEFT = true;
          this.LOOK_RIGHT = false;
        } else if (!this.WALKING)
          this.WALKING = false;
        t2 = this.velocity_y;
        if (t2 > -130) {
          t2 -= this.accel;
          this.velocity_y = t2;
          t3 = this.y;
          if (typeof t3 !== "number")
            return t3.$sub();
          this.y = t3 - t2 * dt;
          if (this.LOOK_RIGHT) {
            this.input.toString;
            t2 = $.get$gameLoop()._keyboard.isDown$1(39);
          } else
            t2 = false;
          if (t2)
            this.movePlayer$2(1, 1 * dt);
          else {
            if (this.LOOK_LEFT) {
              this.input.toString;
              t2 = $.get$gameLoop()._keyboard.isDown$1(37);
            } else
              t2 = false;
            if (t2)
              this.movePlayer$2(1, -1 * dt);
          }
        }
        if ($.Game_oxygen > 0) {
          t2 = this.y;
          t3 = this.height;
          if (typeof t2 !== "number")
            return t2.$gt();
          t3 = t2 > 480 + t3 / 2;
          t2 = t3;
        } else
          t2 = true;
        if (t2 && this.state !== t1) {
          t2 = $.Game_lives - 1;
          $.Game_lives = t2;
          this.state = t1;
          if (t2 <= 0)
            $.Game_instance.gameOver$0();
          else
            $.get$gameLoop().addTimer$2(new U.Player_update_closure(), 2);
        }
        $.CollisionSystem_instance.PlayerCollideWithItem$1(this);
        $.CollisionSystem_instance.PlayerCollideWithTrigger$1(this);
        if (this.state === this.stateEnumAlive)
          $.CollisionSystem_instance.PlayerCollideWithEnemy$1(this);
        $.CollisionSystem_instance.PlayerCollideWithBlock$1(this);
      }
    }, "call$1", "get$update", 2, 0, null, 228],
    movePlayer$2: [function(direction, amount) {
      var t1, t2, block;
      t1 = this.x;
      t2 = direction * amount;
      if (typeof t1 !== "number")
        return t1.$add();
      this.x = t1 + t2;
      for (t1 = $.ObjectManager_instance.blockList, t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
        block = t1._current;
        if ($.CollisionSystem_instance.checkForCollision$2(this, block)) {
          t1 = this.x;
          if (typeof t1 !== "number")
            return t1.$sub();
          this.x = t1 - t2;
          return;
        }
      }
    }, "call$2", "get$movePlayer", 4, 0, null, 251, 252],
    resetPlayer$0: [function() {
      var t1 = $.get$camera();
      t1.x = 0;
      t1.y = 0;
      $.Game_oxygen = 100;
      this.x = this.playerStartX;
      this.y = this.playerStartY;
      this.state = this.stateEnumAlive;
    }, "call$0", "get$resetPlayer", 0, 0, null],
    injureBuzz$1: [function(injuryAmount) {
      var t1 = $.Game_oxygen;
      if (typeof injuryAmount !== "number")
        return H.iae(injuryAmount);
      $.Game_oxygen = t1 - injuryAmount;
      $.SoundManager_instance.playSound$1(4);
      this.state = this.stateEnumInjured;
      this.invincibilityTimer = 1.5;
      this.blink = true;
      $.get$gameLoop().addTimer$2(new U.Player_injureBuzz_closure(this), 0.1);
    }, "call$1", "get$injureBuzz", 2, 0, null, 253],
    invincibilityCountDown$0: [function() {
      var t1 = this.invincibilityTimer;
      if (t1 > 0) {
        this.invincibilityTimer = t1 - 0.1;
        this.blink = !this.blink;
        $.get$gameLoop().addTimer$2(new U.Player_invincibilityCountDown_closure(this), 0.1);
      } else if (this.state !== this.stateEnumDead)
        this.state = this.stateEnumAlive;
    }, "call$0", "get$invincibilityCountDown", 0, 0, null],
    Player$0: function() {
      this.state = this.stateEnumAlive;
      this.x = this.playerStartX;
      this.y = this.playerStartY;
      this.width = 46;
      this.height = 78;
      this.img = W._ElementFactoryProvider_createElement_tag("img", null);
      this.input = U.Input_Input();
      var t1 = new U.SpriteSheet(0, 0, 75, 100, "./content/buzzspritesheet.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/buzzspritesheet.png");
      this.sprite = t1;
    }
  },
  Player_update_closure: {
    "": "Closure:130;",
    call$1: [function(reload) {
      return $.Game_instance.reloadLevel$0();
    }, "call$1", null, 2, 0, null, 254, "call"],
    $isFunction: true
  },
  Player_injureBuzz_closure: {
    "": "Closure:130;this_0",
    call$1: [function(invincibilityTimer) {
      return this.this_0.invincibilityCountDown$0();
    }, "call$1", null, 2, 0, null, 255, "call"],
    $isFunction: true
  },
  Player_invincibilityCountDown_closure: {
    "": "Closure:130;this_0",
    call$1: [function(invincibilityTimer) {
      return this.this_0.invincibilityCountDown$0();
    }, "call$1", null, 2, 0, null, 255, "call"],
    $isFunction: true
  },
  ShipItem: {
    "": "Item;sprite,spriteXInitial,spriteYInitial,spriteWidth,spriteHeight,spriteFrames,glow,repeat,level,x,y,height,width,dead",
    initialize$2: [function(x, y) {
      var t1;
      U.GameObject.prototype.initialize$2.call(this, x, y);
      this.height = 80;
      this.width = 80;
      t1 = new U.SpriteSheet(this.spriteXInitial, this.spriteYInitial, this.spriteWidth, this.spriteHeight, "./content/gameitems.png", null, 0, null, null, 0, 0);
      t1._img = U.ImageLoader_getImage("./content/gameitems.png");
      this.sprite = t1;
    }, "call$2", "get$initialize", 4, 0, null, 12, 138],
    update$1: [function(dt) {
    }, "call$1", "get$update", 2, 0, null, 228],
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
      t1 = this.sprite;
      t2 = t1.spritex;
      if (t2 >= 450)
        this.glow = false;
      else if (t2 === 0)
        this.glow = true;
      if (!this.glow) {
        t3 = this.repeat;
        t4 = t3 === 1;
        if (t4 || t3 === 2 || t3 === 3 || t3 === 4 || t3 === 5 || t3 === 6 || t3 === 7 || t3 === 8) {
          if (t4)
            this.repeat = 2;
          else if (t3 === 2)
            this.repeat = 3;
          else if (t3 === 3)
            this.repeat = 4;
          else if (t3 === 4)
            this.repeat = 5;
          else if (t3 === 5)
            this.repeat = 6;
          else if (t3 === 6)
            this.repeat = 7;
          else if (t3 === 7)
            this.repeat = 8;
          else if (t3 === 8)
            this.repeat = 9;
        } else {
          this.repeat = 1;
          t2 -= 90;
          t1.spritex = t2;
        }
      } else {
        this.glow = true;
        t3 = this.repeat;
        t4 = t3 === 1;
        if (t4 || t3 === 2 || t3 === 3 || t3 === 4 || t3 === 5 || t3 === 6 || t3 === 7 || t3 === 8) {
          if (t4)
            this.repeat = 2;
          else if (t3 === 2)
            this.repeat = 3;
          else if (t3 === 3)
            this.repeat = 4;
          else if (t3 === 4)
            this.repeat = 5;
          else if (t3 === 5)
            this.repeat = 6;
          else if (t3 === 6)
            this.repeat = 7;
          else if (t3 === 7)
            this.repeat = 8;
          else if (t3 === 8)
            this.repeat = 9;
        } else {
          this.repeat = 1;
          t2 += 90;
          t1.spritex = t2;
        }
      }
      t3 = this.x;
      t4 = this.width;
      if (typeof t3 !== "number")
        return t3.$sub();
      t5 = this.y;
      t6 = this.height;
      if (typeof t5 !== "number")
        return t5.$sub();
      t7 = $.ctx;
      t8 = t1._img;
      t9 = t1.spritey;
      t10 = t1._framew;
      t1 = t1._frameh;
      t7.drawImageScaledFromSource$9(t7, t8, t2, t9, t10, t1, t3 - t4 / 2, t5 - t6 / 2, t10, t1);
    }, "call$0", "get$draw", 0, 0, null],
    collect$0: [function() {
      $.SoundManager_instance.playSound$1(3);
      var t1 = $.Game_instance;
      t1.state = t1.stateEnumWin;
    }, "call$0", "get$collect", 0, 0, null]
  },
  Spike: {
    "": "Enemy;damage,triggerFall,x,y,height,width,dead",
    update$1: [function(dt) {
    }, "call$1", "get$update", 2, 0, null, 228],
    draw$0: [function() {
      var t1, t2, left, bottom, $top, t3, t4, t5;
      t1 = this.x;
      t2 = this.width;
      if (typeof t1 !== "number")
        return t1.$sub();
      left = t1 - t2 / 2;
      t2 = this.y;
      t1 = this.height / 2;
      if (typeof t2 !== "number")
        return t2.$add();
      bottom = t2 + t1;
      $top = t2 - t1;
      J.save$0$x($.ctx.context);
      J.beginPath$0$x($.ctx.context);
      t1 = $.ctx;
      t2 = t1.context;
      t3 = $.Camera_instance;
      t4 = t3.x;
      t5 = t3.screenRatio;
      J.moveTo$2$x(t2, (left - t4) * t5 + t1.xAdjust, (bottom - t3.y) * t5 + t1.yAdjust);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 1 * this.width / 10, $top);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 2 * this.width / 10, bottom);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 3 * this.width / 10, $top);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 4 * this.width / 10, bottom);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 5 * this.width / 10, $top);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 6 * this.width / 10, bottom);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 7 * this.width / 10, $top);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 8 * this.width / 10, bottom);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 9 * this.width / 10, $top);
      t1 = $.ctx;
      t1.lineTo$2(t1, left + 10 * this.width / 10, bottom);
      J.set$fillStyle$x($.normContext, "yellow");
      J.closePath$0$x($.normContext);
      J.stroke$0$x($.ctx.context);
      J.fill$0$x($.ctx.context);
      J.restore$0$x($.ctx.context);
    }, "call$0", "get$draw", 0, 0, null],
    injure$0: [function() {
      return 20;
    }, "call$0", "get$injure", 0, 0, null]
  },
  Trigger: {
    "": "GameObject;trigger,bossFloor,boss,floorObstacle,img,originalY<,x,y,height,width,dead",
    draw$0: [function() {
      var t1, t2, t3, t4, t5, t6, t7, t8;
      t1 = this.trigger;
      t2 = this.x;
      t3 = this.width;
      if (typeof t2 !== "number")
        return t2.$sub();
      t4 = this.y;
      t5 = this.height;
      if (typeof t4 !== "number")
        return t4.$sub();
      t6 = $.ctx;
      t7 = t1._framew;
      t8 = t1._frameh;
      t6.drawImageScaledFromSource$9(t6, t1._img, t1.spritex, t1.spritey, t7, t8, t2 - t3 / 2, t4 - t5 / 2, t7, t8);
    }, "call$0", "get$draw", 0, 0, null],
    collapse$0: [function() {
      this.bossFloor.triggerFall = true;
      this.boss.gdp$Gorilla$triggerFall = true;
      this.floorObstacle.triggerFall = true;
    }, "call$0", "get$collapse", 0, 0, null]
  }
}],
["html_common", "dart:html_common", , P, {
  "": "",
  convertNativeToDart_AcceptStructuredClone: [function(object, mustCopy) {
    var copies = [];
    return new P.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new P.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new P.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new P.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
  }, "call$2$mustCopy", "convertNativeToDart_AcceptStructuredClone$closure", 2, 3, null, 134, 0, 135],
  convertNativeToDart_AcceptStructuredClone_findSlot: {
    "": "Closure:110;values_0,copies_1",
    call$1: [function(value) {
      var t1, $length, i, t2;
      t1 = this.values_0;
      $length = t1.length;
      for (i = 0; i < $length; ++i) {
        t2 = t1[i];
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      t1.push(value);
      this.copies_1.push(null);
      return $length;
    }, "call$1", null, 2, 0, null, 14, "call"],
    $isFunction: true
  },
  convertNativeToDart_AcceptStructuredClone_readSlot: {
    "": "Closure:247;copies_2",
    call$1: [function(i) {
      var t1 = this.copies_2;
      if (i >= t1.length)
        return H.ioore(t1, i);
      return t1[i];
    }, "call$1", null, 2, 0, null, 256, "call"],
    $isFunction: true
  },
  convertNativeToDart_AcceptStructuredClone_writeSlot: {
    "": "Closure:257;copies_3",
    call$2: [function(i, x) {
      var t1 = this.copies_3;
      if (i >= t1.length)
        return H.ioore(t1, i);
      t1[i] = x;
    }, "call$2", null, 4, 0, null, 256, 12, "call"],
    $isFunction: true
  },
  convertNativeToDart_AcceptStructuredClone_walk: {
    "": "Closure:130;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
    call$1: [function(e) {
      var slot, copy, t1, key, $length, t2, i;
      if (e == null)
        return e;
      if (typeof e === "boolean")
        return e;
      if (typeof e === "number")
        return e;
      if (typeof e === "string")
        return e;
      if (e instanceof Date)
        return P.DateTime$fromMillisecondsSinceEpoch(e.getTime(), true);
      if (e instanceof RegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (Object.getPrototypeOf(e) === Object.prototype) {
        slot = this.findSlot_5.call$1(e);
        copy = this.readSlot_6.call$1(slot);
        if (copy != null)
          return copy;
        copy = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
        this.writeSlot_7.call$2(slot, copy);
        for (t1 = Object.keys(e), t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
          key = t1._current;
          copy.$indexSet(copy, key, this.call$1(e[key]));
        }
        return copy;
      }
      if (e instanceof Array) {
        slot = this.findSlot_5.call$1(e);
        copy = this.readSlot_6.call$1(slot);
        if (copy != null)
          return copy;
        t1 = J.getInterceptor$asx(e);
        $length = t1.get$length(e);
        copy = this.mustCopy_4 ? new Array($length) : e;
        this.writeSlot_7.call$2(slot, copy);
        if (typeof $length !== "number")
          return H.iae($length);
        t2 = J.getInterceptor$ax(copy);
        i = 0;
        for (; i < $length; ++i)
          t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
        return copy;
      }
      return e;
    }, "call$1", null, 2, 0, null, 9, "call"],
    $isFunction: true
  }
}],
["", "main.dart", , F, {
  "": "",
  main: [function() {
    var t1, t2, t3, t4, t5;
    if ($.Game_instance == null) {
      t1 = new U.Player(W.ImageElement_ImageElement(null, null, null), null, false, false, false, false, 0, 1.5, null, 1, 2, 3, null, 0, false, 0, 300, 16, -12, null, null, 0, 0, false);
      t1.Player$0();
      t2 = U.MainMenu$();
      t3 = U.InGameMenu$();
      t4 = new U.Controls(null, null, null, null, null, null, 0, 0, false, false, false, false, null, null, 0, 0, false);
      t4.Controls$0();
      t5 = new U.Options(null, null, null, null, null, null, null, 0, 0, false, false, false, false, null, null, 0, 0, false);
      t5.Options$0();
      t5 = new U.Game(t1, t2, t3, t4, t5, U.LevelTransition$(), new P.Stopwatch(null, null), 0, U.Input_Input(), null, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, false, null, 0, 0, 0, 0, 0, new U.LevelManager());
      $.Game_instance = t5;
      t5.Initialize$0();
    }
  }, "call$0", "main$closure", 0, 0, 92]
},
1],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

// Runtime type support
J.JSInt.$isint = true;
J.JSInt.$isnum = true;
J.JSInt.$isObject = true;
W.Touch.$isTouch = true;
W.Touch.$isObject = true;
W.Node.$isEventTarget = true;
W.Node.$isObject = true;
J.JSDouble.$isdouble = true;
J.JSDouble.$isnum = true;
J.JSDouble.$isObject = true;
J.JSNumber.$isnum = true;
J.JSNumber.$isObject = true;
J.JSString.$isString = true;
J.JSString.$isObject = true;
P.Duration.$isDuration = true;
P.Duration.$isObject = true;
P.Object.$isObject = true;
U.GameObject.$isObject = true;
U.Block.$isObject = true;
U.Enemy.$isObject = true;
U.Item.$isObject = true;
U.Trigger.$isObject = true;
W.Event.$isEvent = true;
W.Event.$isObject = true;
W.TouchEvent.$isTouchEvent = true;
W.TouchEvent.$isEvent = true;
W.TouchEvent.$isObject = true;
W.KeyboardEvent.$isKeyboardEvent = true;
W.KeyboardEvent.$isEvent = true;
W.KeyboardEvent.$isObject = true;
W.MouseEvent.$isMouseEvent = true;
W.MouseEvent.$isEvent = true;
W.MouseEvent.$isObject = true;
W.WheelEvent.$isMouseEvent = true;
W.WheelEvent.$isEvent = true;
W.WheelEvent.$isObject = true;
W.ImageElement.$isEventTarget = true;
W.ImageElement.$isObject = true;
G._GameLoopTouchEvent.$isObject = true;
B.GameLoopTimer.$isObject = true;
B.DigitalButton.$isObject = true;
G.GameLoopTouch.$isObject = true;
G.GameLoopTouchPosition.$isObject = true;
W.HttpRequest.$isHttpRequest = true;
W.HttpRequest.$isEventTarget = true;
W.HttpRequest.$isObject = true;
W.ProgressEvent.$isEvent = true;
W.ProgressEvent.$isObject = true;
P.AudioBuffer.$isAudioBuffer = true;
P.AudioBuffer.$isObject = true;
P.Symbol.$isSymbol = true;
P.Symbol.$isObject = true;
B.LaunchData.$isLaunchData = true;
B.LaunchData.$isObject = true;
H.RawReceivePortImpl.$isObject = true;
H._IsolateEvent.$isObject = true;
H._IsolateContext.$isObject = true;
P.StackTrace.$isStackTrace = true;
P.StackTrace.$isObject = true;
P._BufferingStreamSubscription.$is_BufferingStreamSubscription = true;
P._BufferingStreamSubscription.$is_EventSink = true;
P._BufferingStreamSubscription.$isStreamSubscription = true;
P._BufferingStreamSubscription.$isObject = true;
W.EventTarget.$isEventTarget = true;
W.EventTarget.$isObject = true;
J.JSBool.$isbool = true;
J.JSBool.$isObject = true;
P.JsObject.$isJsObject = true;
P.JsObject.$isObject = true;
P.Future.$isFuture = true;
P.Future.$isObject = true;
P._DelayedEvent.$is_DelayedEvent = true;
P._DelayedEvent.$isObject = true;
P.StreamSubscription.$isStreamSubscription = true;
P.StreamSubscription.$isObject = true;
P._EventSink.$is_EventSink = true;
P._EventSink.$isObject = true;
P.DateTime.$isDateTime = true;
P.DateTime.$isObject = true;
P.Stream.$isStream = true;
P.Stream.$isObject = true;
B.AppWindow.$isAppWindow = true;
B.AppWindow.$isObject = true;
P.Function.$isFunction = true;
P.Function.$isObject = true;
$.$signature_args2 = {func: "args2", args: [null, null]};
$.$signature_args1 = {func: "args1", args: [null]};
// getInterceptor methods
J.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return J.JSNull.prototype;
  if (typeof receiver == "boolean")
    return J.JSBool.prototype;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return J.getInterceptor$ns(receiver).$add(receiver, a0);
};
J.$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return J.getInterceptor$n(receiver).$div(receiver, a0);
};
J.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return J.getInterceptor(receiver).$eq(receiver, a0);
};
J.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return J.getInterceptor$n(receiver).$ge(receiver, a0);
};
J.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return J.getInterceptor$n(receiver).$gt(receiver, a0);
};
J.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return J.getInterceptor$asx(receiver).$index(receiver, a0);
};
J.$indexSet$ax = function(receiver, a0, a1) {
  if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
J.$shl$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).$shl(receiver, a0);
};
J.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return J.getInterceptor$n(receiver).$sub(receiver, a0);
};
J.addAll$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
};
J.addEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
};
J.beginPath$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).beginPath$0(receiver);
};
J.clearRect$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).clearRect$4(receiver, a0, a1, a2, a3);
};
J.closePath$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).closePath$0(receiver);
};
J.createGain$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createGain$0(receiver);
};
J.createPatternFromImage$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).createPatternFromImage$2(receiver, a0, a1);
};
J.decodeAudioData$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).decodeAudioData$1(receiver, a0);
};
J.drawImageScaledFromSource$9$x = function(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8) {
  return J.getInterceptor$x(receiver).drawImageScaledFromSource$9(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8);
};
J.elementAt$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
};
J.fill$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).fill$0(receiver);
};
J.fillRect$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).fillRect$4(receiver, a0, a1, a2, a3);
};
J.fillText$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).fillText$4(receiver, a0, a1, a2, a3);
};
J.forEach$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
J.get$error$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$error(receiver);
};
J.get$hashCode$ = function(receiver) {
  return J.getInterceptor(receiver).get$hashCode(receiver);
};
J.get$identifier$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$identifier(receiver);
};
J.get$iterator$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$iterator(receiver);
};
J.get$length$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$length(receiver);
};
J.get$response$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$response(receiver);
};
J.get$type$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$type(receiver);
};
J.getContext$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).getContext$1(receiver, a0);
};
J.lineTo$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).lineTo$2(receiver, a0, a1);
};
J.map$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).map$1(receiver, a0);
};
J.moveTo$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).moveTo$2(receiver, a0, a1);
};
J.noSuchMethod$1 = function(receiver, a0) {
  return J.getInterceptor(receiver).noSuchMethod$1(receiver, a0);
};
J.preventDefault$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).preventDefault$0(receiver);
};
J.rect$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).rect$4(receiver, a0, a1, a2, a3);
};
J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
};
J.restore$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).restore$0(receiver);
};
J.save$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).save$0(receiver);
};
J.send$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).send$1(receiver, a0);
};
J.set$fillStyle$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$fillStyle(receiver, value);
};
J.set$font$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$font(receiver, value);
};
J.set$height$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$height(receiver, value);
};
J.set$src$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$src(receiver, value);
};
J.set$width$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$width(receiver, value);
};
J.stroke$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).stroke$0(receiver);
};
J.toString$0 = function(receiver) {
  return J.getInterceptor(receiver).toString$0(receiver);
};
C.AudioBufferSourceNode_methods = P.AudioBufferSourceNode.prototype;
C.C_DynamicRuntimeType = new H.DynamicRuntimeType();
C.C_JsonCodec = new P.JsonCodec();
C.C__DelayedDone = new P._DelayedDone();
C.C__RootZone = new P._RootZone();
C.Duration_0 = new P.Duration(0);
C.EventStreamProvider_click = new W.EventStreamProvider("click");
C.EventStreamProvider_error = new W.EventStreamProvider("error");
C.EventStreamProvider_keydown = new W.EventStreamProvider("keydown");
C.EventStreamProvider_keyup = new W.EventStreamProvider("keyup");
C.EventStreamProvider_load = new W.EventStreamProvider("load");
C.EventStreamProvider_mousedown = new W.EventStreamProvider("mousedown");
C.EventStreamProvider_mousemove = new W.EventStreamProvider("mousemove");
C.EventStreamProvider_mouseup = new W.EventStreamProvider("mouseup");
C.EventStreamProvider_resize = new W.EventStreamProvider("resize");
C.EventStreamProvider_touchcancel = new W.EventStreamProvider("touchcancel");
C.EventStreamProvider_touchend = new W.EventStreamProvider("touchend");
C.EventStreamProvider_touchmove = new W.EventStreamProvider("touchmove");
C.EventStreamProvider_touchstart = new W.EventStreamProvider("touchstart");
C.EventStreamProvider_webkitfullscreenchange = new W.EventStreamProvider("webkitfullscreenchange");
C.EventStreamProvider_webkitfullscreenerror = new W.EventStreamProvider("webkitfullscreenerror");
C.EventStreamProvider_webkitpointerlockchange = new W.EventStreamProvider("webkitpointerlockchange");
C.HttpRequest_methods = W.HttpRequest.prototype;
C.JSArray_methods = J.JSArray.prototype;
C.JSInt_methods = J.JSInt.prototype;
C.JSNumber_methods = J.JSNumber.prototype;
C.JSString_methods = J.JSString.prototype;
C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
C.JS_CONST_IX5 = function getTagFallback(o) {
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.name;
    if (typeof name == "string"
        && name !== ""
        && name !== "Object"
        && name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
C.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
C.JS_CONST_U4w = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
C.JS_CONST_aQP = function() {
  function typeNameInChrome(o) {
    var name = o.constructor.name;
    if (name) return name;
    var s = Object.prototype.toString.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = Object.prototype.toString.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: typeNameInChrome,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
C.JS_CONST_gkc = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
C.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
C.JsonDecoder_null = new P.JsonDecoder(null);
Isolate.makeConstantList = function(list) {
  list.immutable$list = init;
  list.fixed$length = init;
  return list;
};
C.List_empty = Isolate.makeConstantList([]);
C.Symbol_call = new H.Symbol0("call");
C.Type_6Vn = H.createRuntimeType('_NativeTypedArray');
C.Type_Hp8 = H.createRuntimeType('_NativeTypedArrayOfInt');
C.Type_Ucj = H.createRuntimeType('_NativeTypedArrayOfDouble');
C.Type_oqh = H.createRuntimeType('Uint64List');
C.Type_qxd = H.createRuntimeType('Int64List');
C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
C.WheelEvent_methods = W.WheelEvent.prototype;
C.Window_methods = W.Window.prototype;
C._CustomEventStreamProvider__determineMouseWheelEventType = new W._CustomEventStreamProvider(W.Element__determineMouseWheelEventType$closure());
$.controlPort = null;
$.RawReceivePortImpl__nextFreeId = 1;
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.Closure_functionCounter = 0;
$.BoundClosure_selfFieldNameCache = null;
$.BoundClosure_receiverFieldNameCache = null;
$.RuntimeFunctionType_inAssert = false;
$.getTagFunction = null;
$.alternateTagFunction = null;
$.prototypeForTagFunction = null;
$.dispatchRecordsForInstanceTags = null;
$.interceptorsForUncacheableTags = null;
$.initNativeDispatchFlag = null;
$.Camera_instance = null;
$.ctx = null;
$.normContext = null;
$.canvas = null;
$.printToZone = null;
$._callbacksAreEnqueued = false;
$.Zone__current = C.C__RootZone;
$.Expando__keyCount = 0;
$.ImageLoader_bufferedImages = null;
$.SoundManager_instance = null;
$.CollisionSystem_instance = null;
$.Game_instance = null;
$.Game_oxygen = 100;
$.Game_lives = 3;
$.Input_instance = null;
$.LevelManager_enumMainMenu = 0;
$.LevelManager_enumLevelOne = 1;
$.LevelManager_enumLevelTwo = 2;
$.LevelManager_enumLevelThree = 3;
$.ObjectManager_instance = null;
$.Device__isOpera = null;
$.Device__isWebKit = null;
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return H.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return new P.Expando(null);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "camera", "camera", "get$camera", function() {
  var t1 = $.Camera_instance;
  if (t1 == null) {
    t1 = new D.Camera(0, 0, 0.5);
    $.Camera_instance = t1;
  }
  return t1;
});
Isolate.$lazy($, "app", "app", "get$app", function() {
  var t1, t2, t3;
  t1 = $.get$ChromeAppRuntime__app_runtime();
  t2 = F.ChromeStreamController$oneArg(t1, "onLaunched", B._createLaunchData$closure(), null, B.LaunchData);
  t1 = F.ChromeStreamController$noArgs(t1, "onRestarted", null);
  t3 = $.get$ChromeAppWindow__app_window();
  return new B.ChromeApp(new B.ChromeAppRuntime(t2, t1), new B.ChromeAppWindow(F.ChromeStreamController$noArgs(t3, "onBoundsChanged", null), F.ChromeStreamController$noArgs(t3, "onClosed", null), F.ChromeStreamController$noArgs(t3, "onFullscreened", null), F.ChromeStreamController$noArgs(t3, "onMaximized", null), F.ChromeStreamController$noArgs(t3, "onMinimized", null), F.ChromeStreamController$noArgs(t3, "onRestored", null)));
});
Isolate.$lazy($, "_app_runtime", "ChromeAppRuntime__app_runtime", "get$ChromeAppRuntime__app_runtime", function() {
  return J.$index$asx(J.$index$asx($.get$chrome(), "app"), "runtime");
});
Isolate.$lazy($, "_app_window", "ChromeAppWindow__app_window", "get$ChromeAppWindow__app_window", function() {
  return J.$index$asx(J.$index$asx($.get$chrome(), "app"), "window");
});
Isolate.$lazy($, "chrome", "chrome", "get$chrome", function() {
  return J.$index$asx($.get$context(), "chrome");
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return [];
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  var t1, t2;
  t1 = {func: "void_", void: true};
  t2 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t1]);
  t2.ListQueue$1(null, t1);
  return t2;
});
Isolate.$lazy($, "_toStringVisiting", "_toStringVisiting", "get$_toStringVisiting", function() {
  return P.HashSet_HashSet$identity(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return [];
});
Isolate.$lazy($, "context", "context", "get$context", function() {
  return P._wrapToDart(function() { return this; }());
});
Isolate.$lazy($, "_buttonIds", "Keyboard__buttonIds", "get$Keyboard__buttonIds", function() {
  return [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 16, 17, 18, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 13, 38, 40, 37, 39, 27, 192, 220, 8, 20, 221, 188, 93, 189, 46, 35, 187, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 61, 59, 166, 36, 45, 183, 3, 224, 91, 12, 46, 111, 39, 104, 101, 100, 45, 109, 106, 105, 38, 33, 36, 97, 110, 107, 103, 102, 40, 34, 35, 99, 98, 37, 96, 144, 219, 33, 34, 19, 190, 44, 63, 145, 186, 222, 191, 9, 192, 229, 224, 0, 91, 92];
});
Isolate.$lazy($, "_buttonIds", "Mouse__buttonIds", "get$Mouse__buttonIds", function() {
  return [0, 1, 2];
});
Isolate.$lazy($, "gameLoop", "gameLoop", "get$gameLoop", function() {
  var t1, t2;
  t1 = $.canvas;
  t2 = new G.GameLoopHtml(t1, 0, false, false, null, 0, false, 0, 0.03, 0, 0, 0, 0.05, null, null, null, null, H.setRuntimeTypeInfo(new P.Point(0, 0), [null]), null, null, H.setRuntimeTypeInfo([], [G._GameLoopTouchEvent]), H.setRuntimeTypeInfo([], [W.KeyboardEvent]), H.setRuntimeTypeInfo([], [W.MouseEvent]), null, null, null, null, null, null, null, 0.015, 0.03, H.setRuntimeTypeInfo([], [B.GameLoopTimer]), null);
  t2.GameLoopHtml$1(t1);
  return t2;
});
// Native classes

init.functionAliases = {};
;
init.metadata = ["object",
"interceptor",
"proto",
"extension",
"indexability",
"isolate",
"function",
"entry",
"sender",
"e",
"msg",
"message",
"x",
"record",
"value",
"array",
"codePoints",
"charCodes",
"receiver",
"key",
"positionalArguments",
"namedArguments",
"argument",
"index",
"ex",
"expression",
"keyValuePairs",
"result",
"closure",
"numberOfArguments",
"arg1",
"arg2",
"arg3",
"arg4",
"arity",
"functions",
"reflectionInfo",
"isStatic",
"jsArguments",
"propertyName",
"isIntercepted",
"name",
"fieldName",
"property",
"staticName",
"list",
"returnType",
"parameterTypes",
"optionalParameterTypes",
"target",
"typeInfo",
"substitutionName",
,
"type",
"onTypeVariable",
"types",
"startIndex",
"substitution",
"arguments",
"s",
"t",
"signature",
"context",
"contextName",
"allowShorter",
"obj",
"tag",
"interceptorClass",
"transformer",
"hooks",
{func: "LaunchData__JsObject", ret: B.LaunchData, args: [P.JsObject]},
"jsProxy",
"iterable",
"f",
"leftDelimiter",
"rightDelimiter",
"start",
"end",
"from",
"skipCount",
"src",
"srcStart",
"dst",
"dstStart",
"count",
"victim",
"errorHandler",
"error",
"stackTrace",
"zone",
"source",
"listeners",
{func: "void_", void: true},
"callback",
"notificationHandler",
{func: "void__dynamic", void: true, args: [null]},
{func: "void__dynamic__StackTrace", void: true, args: [null], opt: [P.StackTrace]},
"userCode",
"onSuccess",
"onError",
"subscription",
"future",
"duration",
"self",
"parent",
"arg",
"table",
{func: "bool__dynamic_dynamic", ret: J.JSBool, args: [null, null]},
"a",
"b",
{func: "int__dynamic", ret: J.JSInt, args: [null]},
"parts",
"m",
"json",
"reviver",
{func: "bool__Object_Object", ret: J.JSBool, args: [P.Object, P.Object]},
{func: "int__Object", ret: J.JSInt, args: [P.Object]},
{func: "String__EventTarget", ret: J.JSString, args: [W.EventTarget]},
"typeExtension",
"url",
"method",
"mimeType",
"onProgress",
"requestHeaders",
"responseType",
"sendData",
"withCredentials",
"hash",
"o",
"captureThis",
{func: "args1", args: [null]},
"createProxy",
{func: "Object__dynamic", ret: P.Object, args: [null]},
"string",
false,
"mustCopy",
"contextId",
"attrs",
"y",
"width",
"height",
"image",
"repetitionType",
"winding",
"sourceX",
"sourceY",
"sourceWidth",
"sourceHeight",
"destX",
"destY",
"destWidth",
"destHeight",
"text",
"maxWidth",
"listener",
"useCapture",
"async",
"password",
"user",
"data",
"other",
"when",
"grainOffset",
"grainDuration",
"audioData",
"successCallback",
"errorCallback",
"length",
"invocation",
"element",
"collection",
"endIndex",
{func: "args0"},
"code",
"portId",
"port",
"dataEvent",
"onData",
"cancelOnError",
"onDone",
"info",
"map",
"val",
{func: "args2", args: [null, null]},
"parameter",
{func: "dynamic__String_dynamic", args: [J.JSString, null]},
{func: "dynamic__dynamic_String", args: [null, J.JSString]},
{func: "dynamic__String", args: [J.JSString]},
{func: "dynamic___dynamic", opt: [null]},
"action",
"eventId",
{func: "void__Object__StackTrace", void: true, args: [P.Object], opt: [P.StackTrace]},
{func: "dynamic__dynamic__dynamic", args: [null], opt: [null]},
"ignored",
"convert",
"_",
"pendingEvents",
"handleData",
"handleError",
"handleDone",
"resumeSignal",
"event",
"wasInputPaused",
"dispatch",
{func: "dynamic__dynamic_StackTrace", args: [null, P.StackTrace]},
"sink",
{func: "void__dynamic_StackTrace", void: true, args: [null, P.StackTrace]},
"inputEvent",
true,
"runGuarded",
"bucket",
"each",
"cell",
"k",
"v",
"symbol",
{func: "dynamic__Symbol_dynamic", args: [P.Symbol, null]},
"n",
{func: "String__int", ret: J.JSString, args: [J.JSInt]},
"",
"objects",
"separator",
"header",
"args",
"delay",
"periodic",
"buttonId",
{func: "double__int", ret: J.JSDouble, args: [J.JSInt]},
"dt",
{func: "void__num", void: true, args: [J.JSNumber]},
{func: "void__Event", void: true, args: [W.Event]},
{func: "void__TouchEvent", void: true, args: [W.TouchEvent]},
{func: "void__KeyboardEvent", void: true, args: [W.KeyboardEvent]},
{func: "void__MouseEvent", void: true, args: [W.MouseEvent]},
"glTouch",
"touch",
"touches",
"identifier",
{func: "dynamic__Touch", args: [W.Touch]},
"enumSound",
"request",
{func: "dynamic__HttpRequest", args: [W.HttpRequest]},
"buffer",
{func: "dynamic__AudioBuffer", args: [P.AudioBuffer]},
"player",
"gameLoop",
"restart",
{func: "dynamic__int", args: [J.JSInt]},
"keyCode",
"controller",
"level",
"direction",
"amount",
"injuryAmount",
"reload",
"invincibilityTimer",
"i",
{func: "dynamic__int_dynamic", args: [J.JSInt, null]},
];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
function convertToFastObject(properties) {
  function MyClass() {};
  MyClass.prototype = properties;
  new MyClass();
  return properties;
}
A = convertToFastObject(A);
B = convertToFastObject(B);
C = convertToFastObject(C);
D = convertToFastObject(D);
E = convertToFastObject(E);
F = convertToFastObject(F);
G = convertToFastObject(G);
H = convertToFastObject(H);
J = convertToFastObject(J);
K = convertToFastObject(K);
L = convertToFastObject(L);
M = convertToFastObject(M);
N = convertToFastObject(N);
O = convertToFastObject(O);
P = convertToFastObject(P);
Q = convertToFastObject(Q);
R = convertToFastObject(R);
S = convertToFastObject(S);
T = convertToFastObject(T);
U = convertToFastObject(U);
V = convertToFastObject(V);
W = convertToFastObject(W);
X = convertToFastObject(X);
Y = convertToFastObject(Y);
Z = convertToFastObject(Z);
!function() {
  var objectProto = Object.prototype;
  for (var i = 0;; i++) {
    var property = "___dart_dispatch_record_ZxYxX_0_";
    if (i > 0)
      property = rootProperty + "_" + i;
    if (!(property in objectProto))
      return init.dispatchPropertyName = property;
  }
}();
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { H.startRootIsolate(F.main$closure()); });
  } else {
    H.startRootIsolate(F.main$closure());
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(fieldDescriptor, accessors, cls) {
    var fieldInformation = fieldDescriptor.split("-");
    var field = fieldInformation[0];
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable;
    if (fieldInformation.length > 1)
      reflectable = true;
    else
      reflectable = false;
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        var property = cls + ".prototype.get$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        var property = cls + ".prototype.set$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields) {
    var accessors = [];
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0)
        str += ", ";
      var field = generateAccessor(fields[i], accessors, cls);
      var parameter = "parameter_" + field;
      str += parameter;
      body += "this." + field + " = " + parameter + ";\n";
    }
    str += ") {\n" + body + "}\n";
    str += cls + ".builtin$cls=\"" + name + "\";\n";
    str += "$desc=$collectedClasses." + cls + ";\n";
    str += "if($desc instanceof Array) $desc = $desc[1];\n";
    str += cls + ".prototype = $desc;\n";
    if (typeof defineClass.name != "string") {
      str += cls + ".name=\"" + cls + "\";\n";
    }
    str += accessors.join("");
    return str;
  }
  var inheritFrom = function() {
    function tmp() {
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return function(constructor, superConstructor) {
      tmp.prototype = superConstructor.prototype;
      var object = new tmp();
      var properties = constructor.prototype;
      for (var member in properties)
        if (hasOwnProperty.call(properties, member))
          object[member] = properties[member];
      object.constructor = constructor;
      constructor.prototype = object;
      return object;
    };
  }();
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    if (!init.allClasses)
      init.allClasses = {};
    var allClasses = init.allClasses;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (typeof dart_precompiled == "function") {
      var constructors = dart_precompiled(collectedClasses);
    } else {
      var combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
      var constructorsList = [];
    }
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        if (desc instanceof Array)
          desc = desc[1];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        var s = fields.split(";");
        fields = s[1] == "" ? [] : s[1].split(",");
        supr = s[0];
        split = supr.split(":");
        if (split.length == 2) {
          supr = split[0];
          var functionSignature = split[1];
          if (functionSignature)
            desc.$signature = function(s) {
              return function() {
                return init.metadata[s];
              };
            }(functionSignature);
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          if (mixin instanceof Array)
            mixin = mixin[1];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        if (typeof dart_precompiled != "function") {
          combinedConstructorFunction += defineClass(name, cls, fields);
          constructorsList.push(cls);
        }
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    if (typeof dart_precompiled != "function") {
      combinedConstructorFunction += "return [\n  " + constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", combinedConstructorFunction)(collectedClasses);
      combinedConstructorFunction = null;
    }
    for (var i = 0; i < constructors.length; i++) {
      var constructor = constructors[i];
      var cls = constructor.name;
      var desc = collectedClasses[cls];
      var globalObject = isolateProperties;
      if (desc instanceof Array) {
        globalObject = desc[0] || isolateProperties;
        desc = desc[1];
      }
      allClasses[cls] = constructor;
      globalObject[cls] = constructor;
    }
    constructors = null;
    var finishedClasses = {};
    init.interceptorsByTag = Object.create(null);
    init.leafTags = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = allClasses[cls];
      var superConstructor = allClasses[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = inheritFrom(constructor, superConstructor);
      if (hasOwnProperty.call(prototype, "%")) {
        var nativeSpec = prototype["%"].split(";");
        if (nativeSpec[0]) {
          var tags = nativeSpec[0].split("|");
          for (var i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = true;
          }
        }
        if (nativeSpec[1]) {
          tags = nativeSpec[1].split("|");
          if (nativeSpec[2]) {
            var subclasses = nativeSpec[2].split("|");
            for (var i = 0; i < subclasses.length; i++) {
              var subclass = allClasses[subclasses[i]];
              subclass.$nativeSuperclassTag = tags[0];
            }
          }
          for (i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = false;
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            H.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = function() {
          return this[fieldName];
        };
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    function Isolate() {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var staticName in isolateProperties)
        if (hasOwnProperty.call(isolateProperties, staticName))
          this[staticName] = isolateProperties[staticName];
      function ForceEfficientMap() {
      }
      ForceEfficientMap.prototype = this;
      new ForceEfficientMap();
    }
    Isolate.prototype = oldIsolate.prototype;
    Isolate.prototype.constructor = Isolate;
    Isolate.$isolateProperties = isolateProperties;
    Isolate.$finishClasses = oldIsolate.$finishClasses;
    Isolate.makeConstantList = oldIsolate.makeConstantList;
    return Isolate;
  };
}
})()

//# sourceMappingURL=main.dart.js.map
//@ sourceMappingURL=main.dart.js.map
